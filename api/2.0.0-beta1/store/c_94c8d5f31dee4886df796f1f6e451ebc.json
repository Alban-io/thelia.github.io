{
    "name": "Thelia\\Coupon\\FacadeInterface",
    "line": 44,
    "short_desc": "Created by JetBrains PhpStorm.",
    "long_desc": "Date: 8\/19\/13\nTime: 3:24 PM\n\nAllow to assist in getting relevant data on the current application state",
    "hint": null,
    "tags": {
        "package": [
            [
                "Coupon"
            ]
        ],
        "author": [
            [
                "Guillaume",
                "MOREL",
                "<gmorel@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Coupon",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Coupon\/FacadeInterface.php",
    "hash": "1fcc391f5e420ee116712d930f2e22ce89c5121c",
    "parent": null,
    "modifiers": null,
    "is_trait": false,
    "is_interface": true,
    "aliases": {
        "Container": "Symfony\\Component\\DependencyInjection\\Container",
        "ContainerInterface": "Symfony\\Component\\DependencyInjection\\ContainerInterface",
        "TranslatorInterface": "Symfony\\Component\\Translation\\TranslatorInterface",
        "ConditionEvaluator": "Thelia\\Condition\\ConditionEvaluator",
        "Request": "Thelia\\Core\\HttpFoundation\\Request",
        "Coupon": "Thelia\\Model\\Coupon"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 52,
            "short_desc": "Constructor",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "container": {
                    "name": "container",
                    "line": 52,
                    "short_desc": "Service container",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\DependencyInjection\\ContainerInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ContainerInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getCart": {
            "name": "getCart",
            "line": 59,
            "short_desc": "Return a Cart a CouponManager can process",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\Cart",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getDeliveryAddress": {
            "name": "getDeliveryAddress",
            "line": 66,
            "short_desc": "Return an Address a CouponManager can process",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\Address",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCustomer": {
            "name": "getCustomer",
            "line": 73,
            "short_desc": "Return an Customer a CouponManager can process",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\Customer",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCheckoutTotalPrice": {
            "name": "getCheckoutTotalPrice",
            "line": 80,
            "short_desc": "Return Checkout total price",
            "long_desc": "",
            "hint": [
                [
                    "float",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCartTotalPrice": {
            "name": "getCartTotalPrice",
            "line": 88,
            "short_desc": "Return Products total price CartTotalPrice = Checkout total - discount - postage",
            "long_desc": "",
            "hint": [
                [
                    "float",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCheckoutCurrency": {
            "name": "getCheckoutCurrency",
            "line": 95,
            "short_desc": "Return the Checkout currency EUR|USD",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCheckoutPostagePrice": {
            "name": "getCheckoutPostagePrice",
            "line": 102,
            "short_desc": "Return Checkout total postage (only) price",
            "long_desc": "",
            "hint": [
                [
                    "float",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getNbArticlesInCart": {
            "name": "getNbArticlesInCart",
            "line": 109,
            "short_desc": "Return the number of Products in the Cart",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCurrentCoupons": {
            "name": "getCurrentCoupons",
            "line": 116,
            "short_desc": "Return all Coupon given during the Checkout",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "Array of CouponInterface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "findOneCouponByCode": {
            "name": "findOneCouponByCode",
            "line": 125,
            "short_desc": "Find one Coupon in the database from its code",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\Coupon",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "code": {
                    "name": "code",
                    "line": 125,
                    "short_desc": "Coupon code",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getContainer": {
            "name": "getContainer",
            "line": 132,
            "short_desc": "Return platform Container",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\DependencyInjection\\Container",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getTranslator": {
            "name": "getTranslator",
            "line": 139,
            "short_desc": "Return platform TranslatorInterface",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\Translation\\TranslatorInterface",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getMainCurrency": {
            "name": "getMainCurrency",
            "line": 147,
            "short_desc": "Return the main currency THe one used to set prices in BackOffice",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getRequest": {
            "name": "getRequest",
            "line": 154,
            "short_desc": "Return request",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\HttpFoundation\\Request",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getConditionEvaluator": {
            "name": "getConditionEvaluator",
            "line": 161,
            "short_desc": "Return Condition Evaluator",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Condition\\ConditionEvaluator",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getAvailableCurrencies": {
            "name": "getAvailableCurrencies",
            "line": 168,
            "short_desc": "Return all available currencies",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "of Currency",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}