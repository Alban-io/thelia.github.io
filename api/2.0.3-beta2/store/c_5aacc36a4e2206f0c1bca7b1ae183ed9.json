{
    "name": "Thelia\\Model\\BrandImage",
    "line": 18,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": [

    ],
    "namespace": "Thelia\\Model",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Model\/BrandImage.php",
    "hash": "c146cc6e89243b02737955c48e70c24debd42697",
    "parent": "Thelia\\Model\\Base\\BrandImage",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "Request": "Thelia\\Core\\HttpFoundation\\Request",
        "FileModelParentInterface": "Thelia\\Files\\FileModelParentInterface",
        "BaseForm": "Thelia\\Form\\BaseForm",
        "BrandImageModification": "Thelia\\Form\\Brand\\BrandImageModification",
        "BaseBrandImage": "Thelia\\Model\\Base\\BrandImage",
        "BrandBreadcrumbTrait": "Thelia\\Model\\Breadcrumb\\BrandBreadcrumbTrait",
        "BreadcrumbInterface": "Thelia\\Model\\Breadcrumb\\BreadcrumbInterface",
        "FileModelInterface": "Thelia\\Files\\FileModelInterface",
        "ModelEventDispatcherTrait": "Thelia\\Model\\Tools\\ModelEventDispatcherTrait",
        "PositionManagementTrait": "Thelia\\Model\\Tools\\PositionManagementTrait"
    },
    "errors": [

    ],
    "interfaces": {
        "Thelia\\Files\\FileModelInterface": "Thelia\\Files\\FileModelInterface",
        "Thelia\\Model\\Breadcrumb\\BreadcrumbInterface": "Thelia\\Model\\Breadcrumb\\BreadcrumbInterface"
    },
    "properties": [

    ],
    "methods": {
        "preInsert": {
            "name": "preInsert",
            "line": 37,
            "short_desc": "Code to be run before inserting to database",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 37,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "preDelete": {
            "name": "preDelete",
            "line": 44,
            "short_desc": "Code to be run before deleting the object in database",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 44,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "setParentId": {
            "name": "setParentId",
            "line": 58,
            "short_desc": "Set file parent id",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Files\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "parentId": {
                    "name": "parentId",
                    "line": 58,
                    "short_desc": "parent id",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getParentId": {
            "name": "getParentId",
            "line": 68,
            "short_desc": "Get file parent id",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "parent id",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getParentFileModel": {
            "name": "getParentFileModel",
            "line": 76,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Files\\FileModelParentInterface",
                    false
                ]
            ],
            "hint_desc": "the parent file model",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getUpdateFormId": {
            "name": "getUpdateFormId",
            "line": 86,
            "short_desc": "Get the ID of the form used to change this object information",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Form\\BaseForm",
                    false
                ]
            ],
            "hint_desc": "the form",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getUpdateFormInstance": {
            "name": "getUpdateFormInstance",
            "line": 98,
            "short_desc": "Get the form instance used to change this object information",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Form\\BaseForm",
                    false
                ]
            ],
            "hint_desc": "the form",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 98,
                    "short_desc": "the current request",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\HttpFoundation\\Request",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Request",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getUploadDir": {
            "name": "getUploadDir",
            "line": 106,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "the path to the upload directory where files are stored, without final slash",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getRedirectionUrl": {
            "name": "getRedirectionUrl",
            "line": 116,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "the URL to redirect to after update from the back-office",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [
                "\"1\" @param tags are defined by \"0\" are expected"
            ],
            "parameters": [

            ]
        },
        "getQueryInstance": {
            "name": "getQueryInstance",
            "line": 126,
            "short_desc": "Get the Query instance for this object",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}