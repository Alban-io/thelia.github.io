{
    "name": "Thelia\\Model\\Base\\ProductSaleElementsQuery",
    "line": 96,
    "short_desc": "Base class that represents a query for the 'product_sale_elements' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildProductSaleElementsQuery",
                "orderById($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByProductId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "product_id",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByRef($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByQuantity($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "quantity",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByPromo($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "promo",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByNewness($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "newness",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByWeight($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "weight",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByIsDefault($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "is_default",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByEanCode($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "ean_code",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByCreatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "orderByUpdatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupById()",
                "Group",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByProductId()",
                "Group",
                "by",
                "the",
                "product_id",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByRef()",
                "Group",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByQuantity()",
                "Group",
                "by",
                "the",
                "quantity",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByPromo()",
                "Group",
                "by",
                "the",
                "promo",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByNewness()",
                "Group",
                "by",
                "the",
                "newness",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByWeight()",
                "Group",
                "by",
                "the",
                "weight",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByIsDefault()",
                "Group",
                "by",
                "the",
                "is_default",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByEanCode()",
                "Group",
                "by",
                "the",
                "ean_code",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByCreatedAt()",
                "Group",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "groupByUpdatedAt()",
                "Group",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildProductSaleElementsQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildProductSaleElementsQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildProductSaleElementsQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildProductSaleElementsQuery",
                "leftJoinProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Product",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "rightJoinProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Product",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "innerJoinProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Product",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "leftJoinAttributeCombination($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AttributeCombination",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "rightJoinAttributeCombination($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AttributeCombination",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "innerJoinAttributeCombination($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AttributeCombination",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "leftJoinCartItem($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "CartItem",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "rightJoinCartItem($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "CartItem",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "innerJoinCartItem($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "CartItem",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "leftJoinProductPrice($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ProductPrice",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "rightJoinProductPrice($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ProductPrice",
                "relation"
            ],
            [
                "ChildProductSaleElementsQuery",
                "innerJoinProductPrice($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ProductPrice",
                "relation"
            ],
            [
                "ChildProductSaleElements",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildProductSaleElements",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildProductSaleElements",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildProductSaleElements",
                "findOneById(int",
                "$id)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByProductId(int",
                "$product_id)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "product_id",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByRef(string",
                "$ref)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByQuantity(double",
                "$quantity)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "quantity",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByPromo(int",
                "$promo)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "promo",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByNewness(int",
                "$newness)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "newness",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByWeight(double",
                "$weight)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "weight",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByIsDefault(boolean",
                "$is_default)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "is_default",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByEanCode(string",
                "$ean_code)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "ean_code",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByCreatedAt(string",
                "$created_at)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildProductSaleElements",
                "findOneByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "the",
                "first",
                "ChildProductSaleElements",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "array",
                "findById(int",
                "$id)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "array",
                "findByProductId(int",
                "$product_id)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "product_id",
                "column"
            ],
            [
                "array",
                "findByRef(string",
                "$ref)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "array",
                "findByQuantity(double",
                "$quantity)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "quantity",
                "column"
            ],
            [
                "array",
                "findByPromo(int",
                "$promo)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "promo",
                "column"
            ],
            [
                "array",
                "findByNewness(int",
                "$newness)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "newness",
                "column"
            ],
            [
                "array",
                "findByWeight(double",
                "$weight)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "weight",
                "column"
            ],
            [
                "array",
                "findByIsDefault(boolean",
                "$is_default)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "is_default",
                "column"
            ],
            [
                "array",
                "findByEanCode(string",
                "$ean_code)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "ean_code",
                "column"
            ],
            [
                "array",
                "findByCreatedAt(string",
                "$created_at)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "array",
                "findByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "ChildProductSaleElements",
                "objects",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Model\/Base\/ProductSaleElementsQuery.php",
    "hash": "d6399fafb6bb9fd8984449dc03e06df42c0d9704",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildProductSaleElements": "Thelia\\Model\\ProductSaleElements",
        "ChildProductSaleElementsQuery": "Thelia\\Model\\ProductSaleElementsQuery",
        "ProductSaleElementsTableMap": "Thelia\\Model\\Map\\ProductSaleElementsTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 106,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\ProductSaleElementsQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 106,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 106,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\ProductSaleElements'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 106,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 119,
            "short_desc": "Returns a new ChildProductSaleElementsQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 119,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 119,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 149,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj  = $c->findPk(12, $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElements",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 149,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 149,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 231,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(12, 56, 832), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 231,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 231,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 252,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 252,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 265,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 265,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterById": {
            "name": "filterById",
            "line": 289,
            "short_desc": "Filter the query on the id column",
            "long_desc": "Example usage:\n<code>\n$query->filterById(1234); \/\/ WHERE id = 1234\n$query->filterById(array(12, 34)); \/\/ WHERE id IN (12, 34)\n$query->filterById(array('min' => 12)); \/\/ WHERE id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 289,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 289,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByProductId": {
            "name": "filterByProductId",
            "line": 332,
            "short_desc": "Filter the query on the product_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByProductId(1234); \/\/ WHERE product_id = 1234\n$query->filterByProductId(array(12, 34)); \/\/ WHERE product_id IN (12, 34)\n$query->filterByProductId(array('min' => 12)); \/\/ WHERE product_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByProduct()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "productId": {
                    "name": "productId",
                    "line": 332,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 332,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByRef": {
            "name": "filterByRef",
            "line": 370,
            "short_desc": "Filter the query on the ref column",
            "long_desc": "Example usage:\n<code>\n$query->filterByRef('fooValue');   \/\/ WHERE ref = 'fooValue'\n$query->filterByRef('%fooValue%'); \/\/ WHERE ref LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 370,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 370,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByQuantity": {
            "name": "filterByQuantity",
            "line": 402,
            "short_desc": "Filter the query on the quantity column",
            "long_desc": "Example usage:\n<code>\n$query->filterByQuantity(1234); \/\/ WHERE quantity = 1234\n$query->filterByQuantity(array(12, 34)); \/\/ WHERE quantity IN (12, 34)\n$query->filterByQuantity(array('min' => 12)); \/\/ WHERE quantity > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "quantity": {
                    "name": "quantity",
                    "line": 402,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 402,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPromo": {
            "name": "filterByPromo",
            "line": 443,
            "short_desc": "Filter the query on the promo column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPromo(1234); \/\/ WHERE promo = 1234\n$query->filterByPromo(array(12, 34)); \/\/ WHERE promo IN (12, 34)\n$query->filterByPromo(array('min' => 12)); \/\/ WHERE promo > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "promo": {
                    "name": "promo",
                    "line": 443,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 443,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByNewness": {
            "name": "filterByNewness",
            "line": 484,
            "short_desc": "Filter the query on the newness column",
            "long_desc": "Example usage:\n<code>\n$query->filterByNewness(1234); \/\/ WHERE newness = 1234\n$query->filterByNewness(array(12, 34)); \/\/ WHERE newness IN (12, 34)\n$query->filterByNewness(array('min' => 12)); \/\/ WHERE newness > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "newness": {
                    "name": "newness",
                    "line": 484,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 484,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByWeight": {
            "name": "filterByWeight",
            "line": 525,
            "short_desc": "Filter the query on the weight column",
            "long_desc": "Example usage:\n<code>\n$query->filterByWeight(1234); \/\/ WHERE weight = 1234\n$query->filterByWeight(array(12, 34)); \/\/ WHERE weight IN (12, 34)\n$query->filterByWeight(array('min' => 12)); \/\/ WHERE weight > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "weight": {
                    "name": "weight",
                    "line": 525,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 525,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByIsDefault": {
            "name": "filterByIsDefault",
            "line": 566,
            "short_desc": "Filter the query on the is_default column",
            "long_desc": "Example usage:\n<code>\n$query->filterByIsDefault(true); \/\/ WHERE is_default = true\n$query->filterByIsDefault('yes'); \/\/ WHERE is_default = true\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "isDefault": {
                    "name": "isDefault",
                    "line": 566,
                    "short_desc": "The value to use as filter. Non-boolean arguments are converted using the following rules: * 1, '1', 'true',  'on',  and 'yes' are converted to boolean true * 0, '0', 'false', 'off', and 'no'  are converted to boolean false Check on string values is case insensitive (so 'FaLsE' is seen as 'false').",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 566,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByEanCode": {
            "name": "filterByEanCode",
            "line": 590,
            "short_desc": "Filter the query on the ean_code column",
            "long_desc": "Example usage:\n<code>\n$query->filterByEanCode('fooValue');   \/\/ WHERE ean_code = 'fooValue'\n$query->filterByEanCode('%fooValue%'); \/\/ WHERE ean_code LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "eanCode": {
                    "name": "eanCode",
                    "line": 590,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 590,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCreatedAt": {
            "name": "filterByCreatedAt",
            "line": 624,
            "short_desc": "Filter the query on the created_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCreatedAt('2011-03-14'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt('now'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt(array('max' => 'yesterday')); \/\/ WHERE created_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "createdAt": {
                    "name": "createdAt",
                    "line": 624,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 624,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByUpdatedAt": {
            "name": "filterByUpdatedAt",
            "line": 667,
            "short_desc": "Filter the query on the updated_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByUpdatedAt('2011-03-14'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt('now'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt(array('max' => 'yesterday')); \/\/ WHERE updated_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updatedAt": {
                    "name": "updatedAt",
                    "line": 667,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 667,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByProduct": {
            "name": "filterByProduct",
            "line": 698,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Product object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "product": {
                    "name": "product",
                    "line": 698,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Product",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 698,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinProduct": {
            "name": "joinProduct",
            "line": 723,
            "short_desc": "Adds a JOIN clause to the query using the Product relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 723,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 723,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useProductQuery": {
            "name": "useProductQuery",
            "line": 758,
            "short_desc": "Use the Product relation Product object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\ProductQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 758,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 758,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByAttributeCombination": {
            "name": "filterByAttributeCombination",
            "line": 773,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\AttributeCombination object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "attributeCombination": {
                    "name": "attributeCombination",
                    "line": 773,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\AttributeCombination",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 773,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinAttributeCombination": {
            "name": "joinAttributeCombination",
            "line": 796,
            "short_desc": "Adds a JOIN clause to the query using the AttributeCombination relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 796,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 796,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useAttributeCombinationQuery": {
            "name": "useAttributeCombinationQuery",
            "line": 831,
            "short_desc": "Use the AttributeCombination relation AttributeCombination object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\AttributeCombinationQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 831,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 831,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByCartItem": {
            "name": "filterByCartItem",
            "line": 846,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\CartItem object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "cartItem": {
                    "name": "cartItem",
                    "line": 846,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\CartItem",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 846,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinCartItem": {
            "name": "joinCartItem",
            "line": 869,
            "short_desc": "Adds a JOIN clause to the query using the CartItem relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 869,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 869,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useCartItemQuery": {
            "name": "useCartItemQuery",
            "line": 904,
            "short_desc": "Use the CartItem relation CartItem object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\CartItemQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 904,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 904,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByProductPrice": {
            "name": "filterByProductPrice",
            "line": 919,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\ProductPrice object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "productPrice": {
                    "name": "productPrice",
                    "line": 919,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\ProductPrice",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 919,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinProductPrice": {
            "name": "joinProductPrice",
            "line": 942,
            "short_desc": "Adds a JOIN clause to the query using the ProductPrice relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 942,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 942,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useProductPriceQuery": {
            "name": "useProductPriceQuery",
            "line": 977,
            "short_desc": "Use the ProductPrice relation ProductPrice object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\ProductPriceQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 977,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 977,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 991,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "productSaleElements": {
                    "name": "productSaleElements",
                    "line": 991,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\ProductSaleElements",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 1006,
            "short_desc": "Deletes all rows from the product_sale_elements table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 1006,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 1043,
            "short_desc": "Performs a DELETE on the database, given a ChildProductSaleElements or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 1043,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "recentlyUpdated": {
            "name": "recentlyUpdated",
            "line": 1084,
            "short_desc": "Filter by the latest updated",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 1084,
                    "short_desc": "Maximum age of the latest update in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "recentlyCreated": {
            "name": "recentlyCreated",
            "line": 1096,
            "short_desc": "Filter by the latest created",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 1096,
                    "short_desc": "Maximum age of in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "lastUpdatedFirst": {
            "name": "lastUpdatedFirst",
            "line": 1106,
            "short_desc": "Order by update date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstUpdatedFirst": {
            "name": "firstUpdatedFirst",
            "line": 1116,
            "short_desc": "Order by update date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "lastCreatedFirst": {
            "name": "lastCreatedFirst",
            "line": 1126,
            "short_desc": "Order by create date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstCreatedFirst": {
            "name": "firstCreatedFirst",
            "line": 1136,
            "short_desc": "Order by create date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ProductSaleElementsQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "orderById": {
            "name": "orderById",
            "line": 96,
            "short_desc": "Order by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByProductId": {
            "name": "orderByProductId",
            "line": 96,
            "short_desc": "Order by the product_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByRef": {
            "name": "orderByRef",
            "line": 96,
            "short_desc": "Order by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByQuantity": {
            "name": "orderByQuantity",
            "line": 96,
            "short_desc": "Order by the quantity column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPromo": {
            "name": "orderByPromo",
            "line": 96,
            "short_desc": "Order by the promo column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByNewness": {
            "name": "orderByNewness",
            "line": 96,
            "short_desc": "Order by the newness column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByWeight": {
            "name": "orderByWeight",
            "line": 96,
            "short_desc": "Order by the weight column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByIsDefault": {
            "name": "orderByIsDefault",
            "line": 96,
            "short_desc": "Order by the is_default column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByEanCode": {
            "name": "orderByEanCode",
            "line": 96,
            "short_desc": "Order by the ean_code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCreatedAt": {
            "name": "orderByCreatedAt",
            "line": 96,
            "short_desc": "Order by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByUpdatedAt": {
            "name": "orderByUpdatedAt",
            "line": 96,
            "short_desc": "Order by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupById": {
            "name": "groupById",
            "line": 96,
            "short_desc": "Group by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByProductId": {
            "name": "groupByProductId",
            "line": 96,
            "short_desc": "Group by the product_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByRef": {
            "name": "groupByRef",
            "line": 96,
            "short_desc": "Group by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByQuantity": {
            "name": "groupByQuantity",
            "line": 96,
            "short_desc": "Group by the quantity column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPromo": {
            "name": "groupByPromo",
            "line": 96,
            "short_desc": "Group by the promo column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByNewness": {
            "name": "groupByNewness",
            "line": 96,
            "short_desc": "Group by the newness column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByWeight": {
            "name": "groupByWeight",
            "line": 96,
            "short_desc": "Group by the weight column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByIsDefault": {
            "name": "groupByIsDefault",
            "line": 96,
            "short_desc": "Group by the is_default column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByEanCode": {
            "name": "groupByEanCode",
            "line": 96,
            "short_desc": "Group by the ean_code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCreatedAt": {
            "name": "groupByCreatedAt",
            "line": 96,
            "short_desc": "Group by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByUpdatedAt": {
            "name": "groupByUpdatedAt",
            "line": 96,
            "short_desc": "Group by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 96,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 96,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 96,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinProduct": {
            "name": "leftJoinProduct",
            "line": 96,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Product relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinProduct": {
            "name": "rightJoinProduct",
            "line": 96,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Product relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinProduct": {
            "name": "innerJoinProduct",
            "line": 96,
            "short_desc": "Adds a INNER JOIN clause to the query using the Product relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinAttributeCombination": {
            "name": "leftJoinAttributeCombination",
            "line": 96,
            "short_desc": "Adds a LEFT JOIN clause to the query using the AttributeCombination relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinAttributeCombination": {
            "name": "rightJoinAttributeCombination",
            "line": 96,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the AttributeCombination relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinAttributeCombination": {
            "name": "innerJoinAttributeCombination",
            "line": 96,
            "short_desc": "Adds a INNER JOIN clause to the query using the AttributeCombination relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinCartItem": {
            "name": "leftJoinCartItem",
            "line": 96,
            "short_desc": "Adds a LEFT JOIN clause to the query using the CartItem relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinCartItem": {
            "name": "rightJoinCartItem",
            "line": 96,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the CartItem relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinCartItem": {
            "name": "innerJoinCartItem",
            "line": 96,
            "short_desc": "Adds a INNER JOIN clause to the query using the CartItem relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinProductPrice": {
            "name": "leftJoinProductPrice",
            "line": 96,
            "short_desc": "Adds a LEFT JOIN clause to the query using the ProductPrice relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinProductPrice": {
            "name": "rightJoinProductPrice",
            "line": 96,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the ProductPrice relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinProductPrice": {
            "name": "innerJoinProductPrice",
            "line": 96,
            "short_desc": "Adds a INNER JOIN clause to the query using the ProductPrice relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElementsQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements matching the query, or a new ChildProductSaleElements object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneById": {
            "name": "findOneById",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByProductId": {
            "name": "findOneByProductId",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the product_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "product_id": {
                    "name": "product_id",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByRef": {
            "name": "findOneByRef",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByQuantity": {
            "name": "findOneByQuantity",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the quantity column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "quantity": {
                    "name": "quantity",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPromo": {
            "name": "findOneByPromo",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the promo column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "promo": {
                    "name": "promo",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByNewness": {
            "name": "findOneByNewness",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the newness column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "newness": {
                    "name": "newness",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByWeight": {
            "name": "findOneByWeight",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the weight column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "weight": {
                    "name": "weight",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByIsDefault": {
            "name": "findOneByIsDefault",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the is_default column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "is_default": {
                    "name": "is_default",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByEanCode": {
            "name": "findOneByEanCode",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the ean_code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ean_code": {
                    "name": "ean_code",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCreatedAt": {
            "name": "findOneByCreatedAt",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByUpdatedAt": {
            "name": "findOneByUpdatedAt",
            "line": 96,
            "short_desc": "Return the first ChildProductSaleElements filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildProductSaleElements",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findById": {
            "name": "findById",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByProductId": {
            "name": "findByProductId",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the product_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "product_id": {
                    "name": "product_id",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByRef": {
            "name": "findByRef",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByQuantity": {
            "name": "findByQuantity",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the quantity column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "quantity": {
                    "name": "quantity",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPromo": {
            "name": "findByPromo",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the promo column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "promo": {
                    "name": "promo",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByNewness": {
            "name": "findByNewness",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the newness column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "newness": {
                    "name": "newness",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByWeight": {
            "name": "findByWeight",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the weight column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "weight": {
                    "name": "weight",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByIsDefault": {
            "name": "findByIsDefault",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the is_default column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "is_default": {
                    "name": "is_default",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByEanCode": {
            "name": "findByEanCode",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the ean_code column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ean_code": {
                    "name": "ean_code",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCreatedAt": {
            "name": "findByCreatedAt",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByUpdatedAt": {
            "name": "findByUpdatedAt",
            "line": 96,
            "short_desc": "Return ChildProductSaleElements objects filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 96,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}