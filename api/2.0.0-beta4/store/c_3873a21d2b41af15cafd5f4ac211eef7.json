{
    "name": "Thelia\\TaxEngine\\TaxTypeRequirementDefinition",
    "line": 32,
    "short_desc": "This class defines a Tax type requirement",
    "long_desc": "",
    "hint": null,
    "tags": {
        "author": [
            [
                "Franck",
                "Allimant",
                "<franck@cqfdev.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\TaxEngine",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/TaxEngine\/TaxTypeRequirementDefinition.php",
    "hash": "3f079bbf43aff73e178df9aa44cec4d517073167",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "TypeInterface": "Thelia\\Type\\TypeInterface"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 50,
            "short_desc": "Create a new Tax type requirement",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 50,
                    "short_desc": "the name of the requirement",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "type": {
                    "name": "type",
                    "line": 50,
                    "short_desc": "the type of the data",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Type\\TypeInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "TypeInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getName": {
            "name": "getName",
            "line": 56,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getType": {
            "name": "getType",
            "line": 61,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isValueValid": {
            "name": "isValueValid",
            "line": 66,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "value": {
                    "name": "value",
                    "line": 66,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}