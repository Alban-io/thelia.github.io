{
    "name": "Thelia\\Model\\Base\\OrderQuery",
    "line": 152,
    "short_desc": "Base class that represents a query for the 'order' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildOrderQuery",
                "orderById($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByRef($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByCustomerId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "customer_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByInvoiceOrderAddressId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "invoice_order_address_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByDeliveryOrderAddressId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "delivery_order_address_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByInvoiceDate($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "invoice_date",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByCurrencyId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByCurrencyRate($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "currency_rate",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByTransactionRef($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "transaction_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByDeliveryRef($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "delivery_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByInvoiceRef($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "invoice_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByDiscount($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "discount",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByPostage($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByPaymentModuleId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "payment_module_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByDeliveryModuleId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "delivery_module_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByStatusId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "status_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByLangId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "lang_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByCreatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrderQuery",
                "orderByUpdatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupById()",
                "Group",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByRef()",
                "Group",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByCustomerId()",
                "Group",
                "by",
                "the",
                "customer_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByInvoiceOrderAddressId()",
                "Group",
                "by",
                "the",
                "invoice_order_address_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByDeliveryOrderAddressId()",
                "Group",
                "by",
                "the",
                "delivery_order_address_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByInvoiceDate()",
                "Group",
                "by",
                "the",
                "invoice_date",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByCurrencyId()",
                "Group",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByCurrencyRate()",
                "Group",
                "by",
                "the",
                "currency_rate",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByTransactionRef()",
                "Group",
                "by",
                "the",
                "transaction_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByDeliveryRef()",
                "Group",
                "by",
                "the",
                "delivery_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByInvoiceRef()",
                "Group",
                "by",
                "the",
                "invoice_ref",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByDiscount()",
                "Group",
                "by",
                "the",
                "discount",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByPostage()",
                "Group",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByPaymentModuleId()",
                "Group",
                "by",
                "the",
                "payment_module_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByDeliveryModuleId()",
                "Group",
                "by",
                "the",
                "delivery_module_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByStatusId()",
                "Group",
                "by",
                "the",
                "status_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByLangId()",
                "Group",
                "by",
                "the",
                "lang_id",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByCreatedAt()",
                "Group",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrderQuery",
                "groupByUpdatedAt()",
                "Group",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildOrderQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderQuery",
                "leftJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinCustomer($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Customer",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinCustomer($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Customer",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinCustomer($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Customer",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinOrderAddressRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinOrderAddressRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinOrderAddressRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinOrderAddressRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinOrderAddressRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinOrderAddressRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderAddressRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinOrderStatus($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderStatus",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinOrderStatus($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderStatus",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinOrderStatus($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderStatus",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinModuleRelatedByPaymentModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByPaymentModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinModuleRelatedByPaymentModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByPaymentModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinModuleRelatedByPaymentModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByPaymentModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinModuleRelatedByDeliveryModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByDeliveryModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinModuleRelatedByDeliveryModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByDeliveryModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinModuleRelatedByDeliveryModuleId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleRelatedByDeliveryModuleId",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinLang($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Lang",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinLang($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Lang",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinLang($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Lang",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinOrderProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderProduct",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinOrderProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderProduct",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinOrderProduct($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderProduct",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "leftJoinOrderCoupon($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderCoupon",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "rightJoinOrderCoupon($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderCoupon",
                "relation"
            ],
            [
                "ChildOrderQuery",
                "innerJoinOrderCoupon($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderCoupon",
                "relation"
            ],
            [
                "ChildOrder",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildOrder",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildOrder",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildOrder",
                "findOneById(int",
                "$id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByRef(string",
                "$ref)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByCustomerId(int",
                "$customer_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "customer_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByInvoiceOrderAddressId(int",
                "$invoice_order_address_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "invoice_order_address_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByDeliveryOrderAddressId(int",
                "$delivery_order_address_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "delivery_order_address_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByInvoiceDate(string",
                "$invoice_date)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "invoice_date",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByCurrencyId(int",
                "$currency_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByCurrencyRate(double",
                "$currency_rate)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "currency_rate",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByTransactionRef(string",
                "$transaction_ref)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "transaction_ref",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByDeliveryRef(string",
                "$delivery_ref)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "delivery_ref",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByInvoiceRef(string",
                "$invoice_ref)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "invoice_ref",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByDiscount(double",
                "$discount)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "discount",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByPostage(double",
                "$postage)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByPaymentModuleId(int",
                "$payment_module_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "payment_module_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByDeliveryModuleId(int",
                "$delivery_module_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "delivery_module_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByStatusId(int",
                "$status_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "status_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByLangId(int",
                "$lang_id)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "lang_id",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByCreatedAt(string",
                "$created_at)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrder",
                "findOneByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "the",
                "first",
                "ChildOrder",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "array",
                "findById(int",
                "$id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "array",
                "findByRef(string",
                "$ref)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "ref",
                "column"
            ],
            [
                "array",
                "findByCustomerId(int",
                "$customer_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "customer_id",
                "column"
            ],
            [
                "array",
                "findByInvoiceOrderAddressId(int",
                "$invoice_order_address_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "invoice_order_address_id",
                "column"
            ],
            [
                "array",
                "findByDeliveryOrderAddressId(int",
                "$delivery_order_address_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "delivery_order_address_id",
                "column"
            ],
            [
                "array",
                "findByInvoiceDate(string",
                "$invoice_date)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "invoice_date",
                "column"
            ],
            [
                "array",
                "findByCurrencyId(int",
                "$currency_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "array",
                "findByCurrencyRate(double",
                "$currency_rate)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "currency_rate",
                "column"
            ],
            [
                "array",
                "findByTransactionRef(string",
                "$transaction_ref)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "transaction_ref",
                "column"
            ],
            [
                "array",
                "findByDeliveryRef(string",
                "$delivery_ref)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "delivery_ref",
                "column"
            ],
            [
                "array",
                "findByInvoiceRef(string",
                "$invoice_ref)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "invoice_ref",
                "column"
            ],
            [
                "array",
                "findByDiscount(double",
                "$discount)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "discount",
                "column"
            ],
            [
                "array",
                "findByPostage(double",
                "$postage)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "array",
                "findByPaymentModuleId(int",
                "$payment_module_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "payment_module_id",
                "column"
            ],
            [
                "array",
                "findByDeliveryModuleId(int",
                "$delivery_module_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "delivery_module_id",
                "column"
            ],
            [
                "array",
                "findByStatusId(int",
                "$status_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "status_id",
                "column"
            ],
            [
                "array",
                "findByLangId(int",
                "$lang_id)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "lang_id",
                "column"
            ],
            [
                "array",
                "findByCreatedAt(string",
                "$created_at)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "array",
                "findByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "ChildOrder",
                "objects",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Model\/Base\/OrderQuery.php",
    "hash": "1658df9bf8dc434f9a0a62cfd6d419441d00cb0d",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildOrder": "Thelia\\Model\\Order",
        "ChildOrderQuery": "Thelia\\Model\\OrderQuery",
        "OrderTableMap": "Thelia\\Model\\Map\\OrderTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 162,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\OrderQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 162,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 162,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\Order'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 162,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 175,
            "short_desc": "Returns a new ChildOrderQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 175,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 175,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 205,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj  = $c->findPk(12, $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\Order",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 205,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 205,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 287,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(12, 56, 832), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 287,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 287,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 308,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 308,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 320,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 320,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterById": {
            "name": "filterById",
            "line": 343,
            "short_desc": "Filter the query on the id column",
            "long_desc": "Example usage:\n<code>\n$query->filterById(1234); \/\/ WHERE id = 1234\n$query->filterById(array(12, 34)); \/\/ WHERE id IN (12, 34)\n$query->filterById(array('min' => 12)); \/\/ WHERE id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 343,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 343,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByRef": {
            "name": "filterByRef",
            "line": 381,
            "short_desc": "Filter the query on the ref column",
            "long_desc": "Example usage:\n<code>\n$query->filterByRef('fooValue');   \/\/ WHERE ref = 'fooValue'\n$query->filterByRef('%fooValue%'); \/\/ WHERE ref LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 381,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 381,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCustomerId": {
            "name": "filterByCustomerId",
            "line": 415,
            "short_desc": "Filter the query on the customer_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCustomerId(1234); \/\/ WHERE customer_id = 1234\n$query->filterByCustomerId(array(12, 34)); \/\/ WHERE customer_id IN (12, 34)\n$query->filterByCustomerId(array('min' => 12)); \/\/ WHERE customer_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByCustomer()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customerId": {
                    "name": "customerId",
                    "line": 415,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 415,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByInvoiceOrderAddressId": {
            "name": "filterByInvoiceOrderAddressId",
            "line": 458,
            "short_desc": "Filter the query on the invoice_order_address_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByInvoiceOrderAddressId(1234); \/\/ WHERE invoice_order_address_id = 1234\n$query->filterByInvoiceOrderAddressId(array(12, 34)); \/\/ WHERE invoice_order_address_id IN (12, 34)\n$query->filterByInvoiceOrderAddressId(array('min' => 12)); \/\/ WHERE invoice_order_address_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByOrderAddressRelatedByInvoiceOrderAddressId()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoiceOrderAddressId": {
                    "name": "invoiceOrderAddressId",
                    "line": 458,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 458,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByDeliveryOrderAddressId": {
            "name": "filterByDeliveryOrderAddressId",
            "line": 501,
            "short_desc": "Filter the query on the delivery_order_address_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByDeliveryOrderAddressId(1234); \/\/ WHERE delivery_order_address_id = 1234\n$query->filterByDeliveryOrderAddressId(array(12, 34)); \/\/ WHERE delivery_order_address_id IN (12, 34)\n$query->filterByDeliveryOrderAddressId(array('min' => 12)); \/\/ WHERE delivery_order_address_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByOrderAddressRelatedByDeliveryOrderAddressId()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "deliveryOrderAddressId": {
                    "name": "deliveryOrderAddressId",
                    "line": 501,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 501,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByInvoiceDate": {
            "name": "filterByInvoiceDate",
            "line": 544,
            "short_desc": "Filter the query on the invoice_date column",
            "long_desc": "Example usage:\n<code>\n$query->filterByInvoiceDate('2011-03-14'); \/\/ WHERE invoice_date = '2011-03-14'\n$query->filterByInvoiceDate('now'); \/\/ WHERE invoice_date = '2011-03-14'\n$query->filterByInvoiceDate(array('max' => 'yesterday')); \/\/ WHERE invoice_date > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoiceDate": {
                    "name": "invoiceDate",
                    "line": 544,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 544,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCurrencyId": {
            "name": "filterByCurrencyId",
            "line": 587,
            "short_desc": "Filter the query on the currency_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCurrencyId(1234); \/\/ WHERE currency_id = 1234\n$query->filterByCurrencyId(array(12, 34)); \/\/ WHERE currency_id IN (12, 34)\n$query->filterByCurrencyId(array('min' => 12)); \/\/ WHERE currency_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByCurrency()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currencyId": {
                    "name": "currencyId",
                    "line": 587,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 587,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCurrencyRate": {
            "name": "filterByCurrencyRate",
            "line": 628,
            "short_desc": "Filter the query on the currency_rate column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCurrencyRate(1234); \/\/ WHERE currency_rate = 1234\n$query->filterByCurrencyRate(array(12, 34)); \/\/ WHERE currency_rate IN (12, 34)\n$query->filterByCurrencyRate(array('min' => 12)); \/\/ WHERE currency_rate > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currencyRate": {
                    "name": "currencyRate",
                    "line": 628,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 628,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByTransactionRef": {
            "name": "filterByTransactionRef",
            "line": 666,
            "short_desc": "Filter the query on the transaction_ref column",
            "long_desc": "Example usage:\n<code>\n$query->filterByTransactionRef('fooValue');   \/\/ WHERE transaction_ref = 'fooValue'\n$query->filterByTransactionRef('%fooValue%'); \/\/ WHERE transaction_ref LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "transactionRef": {
                    "name": "transactionRef",
                    "line": 666,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 666,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByDeliveryRef": {
            "name": "filterByDeliveryRef",
            "line": 695,
            "short_desc": "Filter the query on the delivery_ref column",
            "long_desc": "Example usage:\n<code>\n$query->filterByDeliveryRef('fooValue');   \/\/ WHERE delivery_ref = 'fooValue'\n$query->filterByDeliveryRef('%fooValue%'); \/\/ WHERE delivery_ref LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "deliveryRef": {
                    "name": "deliveryRef",
                    "line": 695,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 695,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByInvoiceRef": {
            "name": "filterByInvoiceRef",
            "line": 724,
            "short_desc": "Filter the query on the invoice_ref column",
            "long_desc": "Example usage:\n<code>\n$query->filterByInvoiceRef('fooValue');   \/\/ WHERE invoice_ref = 'fooValue'\n$query->filterByInvoiceRef('%fooValue%'); \/\/ WHERE invoice_ref LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoiceRef": {
                    "name": "invoiceRef",
                    "line": 724,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 724,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByDiscount": {
            "name": "filterByDiscount",
            "line": 756,
            "short_desc": "Filter the query on the discount column",
            "long_desc": "Example usage:\n<code>\n$query->filterByDiscount(1234); \/\/ WHERE discount = 1234\n$query->filterByDiscount(array(12, 34)); \/\/ WHERE discount IN (12, 34)\n$query->filterByDiscount(array('min' => 12)); \/\/ WHERE discount > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "discount": {
                    "name": "discount",
                    "line": 756,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 756,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPostage": {
            "name": "filterByPostage",
            "line": 797,
            "short_desc": "Filter the query on the postage column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPostage(1234); \/\/ WHERE postage = 1234\n$query->filterByPostage(array(12, 34)); \/\/ WHERE postage IN (12, 34)\n$query->filterByPostage(array('min' => 12)); \/\/ WHERE postage > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 797,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 797,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPaymentModuleId": {
            "name": "filterByPaymentModuleId",
            "line": 840,
            "short_desc": "Filter the query on the payment_module_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPaymentModuleId(1234); \/\/ WHERE payment_module_id = 1234\n$query->filterByPaymentModuleId(array(12, 34)); \/\/ WHERE payment_module_id IN (12, 34)\n$query->filterByPaymentModuleId(array('min' => 12)); \/\/ WHERE payment_module_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByModuleRelatedByPaymentModuleId()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "paymentModuleId": {
                    "name": "paymentModuleId",
                    "line": 840,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 840,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByDeliveryModuleId": {
            "name": "filterByDeliveryModuleId",
            "line": 883,
            "short_desc": "Filter the query on the delivery_module_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByDeliveryModuleId(1234); \/\/ WHERE delivery_module_id = 1234\n$query->filterByDeliveryModuleId(array(12, 34)); \/\/ WHERE delivery_module_id IN (12, 34)\n$query->filterByDeliveryModuleId(array('min' => 12)); \/\/ WHERE delivery_module_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByModuleRelatedByDeliveryModuleId()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "deliveryModuleId": {
                    "name": "deliveryModuleId",
                    "line": 883,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 883,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByStatusId": {
            "name": "filterByStatusId",
            "line": 926,
            "short_desc": "Filter the query on the status_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByStatusId(1234); \/\/ WHERE status_id = 1234\n$query->filterByStatusId(array(12, 34)); \/\/ WHERE status_id IN (12, 34)\n$query->filterByStatusId(array('min' => 12)); \/\/ WHERE status_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByOrderStatus()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "statusId": {
                    "name": "statusId",
                    "line": 926,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 926,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByLangId": {
            "name": "filterByLangId",
            "line": 969,
            "short_desc": "Filter the query on the lang_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByLangId(1234); \/\/ WHERE lang_id = 1234\n$query->filterByLangId(array(12, 34)); \/\/ WHERE lang_id IN (12, 34)\n$query->filterByLangId(array('min' => 12)); \/\/ WHERE lang_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByLang()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "langId": {
                    "name": "langId",
                    "line": 969,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 969,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCreatedAt": {
            "name": "filterByCreatedAt",
            "line": 1012,
            "short_desc": "Filter the query on the created_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCreatedAt('2011-03-14'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt('now'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt(array('max' => 'yesterday')); \/\/ WHERE created_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "createdAt": {
                    "name": "createdAt",
                    "line": 1012,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1012,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByUpdatedAt": {
            "name": "filterByUpdatedAt",
            "line": 1055,
            "short_desc": "Filter the query on the updated_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByUpdatedAt('2011-03-14'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt('now'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt(array('max' => 'yesterday')); \/\/ WHERE updated_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updatedAt": {
                    "name": "updatedAt",
                    "line": 1055,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1055,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCurrency": {
            "name": "filterByCurrency",
            "line": 1086,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Currency object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency": {
                    "name": "currency",
                    "line": 1086,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Currency",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1086,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinCurrency": {
            "name": "joinCurrency",
            "line": 1111,
            "short_desc": "Adds a JOIN clause to the query using the Currency relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1111,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1111,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useCurrencyQuery": {
            "name": "useCurrencyQuery",
            "line": 1146,
            "short_desc": "Use the Currency relation Currency object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\CurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1146,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1146,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByCustomer": {
            "name": "filterByCustomer",
            "line": 1161,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Customer object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customer": {
                    "name": "customer",
                    "line": 1161,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Customer",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1161,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinCustomer": {
            "name": "joinCustomer",
            "line": 1186,
            "short_desc": "Adds a JOIN clause to the query using the Customer relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1186,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1186,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useCustomerQuery": {
            "name": "useCustomerQuery",
            "line": 1221,
            "short_desc": "Use the Customer relation Customer object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\CustomerQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1221,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1221,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderAddressRelatedByInvoiceOrderAddressId": {
            "name": "filterByOrderAddressRelatedByInvoiceOrderAddressId",
            "line": 1236,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\OrderAddress object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderAddress": {
                    "name": "orderAddress",
                    "line": 1236,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\OrderAddress",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1236,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderAddressRelatedByInvoiceOrderAddressId": {
            "name": "joinOrderAddressRelatedByInvoiceOrderAddressId",
            "line": 1261,
            "short_desc": "Adds a JOIN clause to the query using the OrderAddressRelatedByInvoiceOrderAddressId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1261,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1261,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderAddressRelatedByInvoiceOrderAddressIdQuery": {
            "name": "useOrderAddressRelatedByInvoiceOrderAddressIdQuery",
            "line": 1296,
            "short_desc": "Use the OrderAddressRelatedByInvoiceOrderAddressId relation OrderAddress object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1296,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1296,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderAddressRelatedByDeliveryOrderAddressId": {
            "name": "filterByOrderAddressRelatedByDeliveryOrderAddressId",
            "line": 1311,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\OrderAddress object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderAddress": {
                    "name": "orderAddress",
                    "line": 1311,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\OrderAddress",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1311,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderAddressRelatedByDeliveryOrderAddressId": {
            "name": "joinOrderAddressRelatedByDeliveryOrderAddressId",
            "line": 1336,
            "short_desc": "Adds a JOIN clause to the query using the OrderAddressRelatedByDeliveryOrderAddressId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1336,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1336,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderAddressRelatedByDeliveryOrderAddressIdQuery": {
            "name": "useOrderAddressRelatedByDeliveryOrderAddressIdQuery",
            "line": 1371,
            "short_desc": "Use the OrderAddressRelatedByDeliveryOrderAddressId relation OrderAddress object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1371,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1371,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderStatus": {
            "name": "filterByOrderStatus",
            "line": 1386,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\OrderStatus object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderStatus": {
                    "name": "orderStatus",
                    "line": 1386,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\OrderStatus",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1386,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderStatus": {
            "name": "joinOrderStatus",
            "line": 1411,
            "short_desc": "Adds a JOIN clause to the query using the OrderStatus relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1411,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1411,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderStatusQuery": {
            "name": "useOrderStatusQuery",
            "line": 1446,
            "short_desc": "Use the OrderStatus relation OrderStatus object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderStatusQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1446,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1446,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByModuleRelatedByPaymentModuleId": {
            "name": "filterByModuleRelatedByPaymentModuleId",
            "line": 1461,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Module object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "module": {
                    "name": "module",
                    "line": 1461,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Module",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1461,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinModuleRelatedByPaymentModuleId": {
            "name": "joinModuleRelatedByPaymentModuleId",
            "line": 1486,
            "short_desc": "Adds a JOIN clause to the query using the ModuleRelatedByPaymentModuleId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1486,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1486,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useModuleRelatedByPaymentModuleIdQuery": {
            "name": "useModuleRelatedByPaymentModuleIdQuery",
            "line": 1521,
            "short_desc": "Use the ModuleRelatedByPaymentModuleId relation Module object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\ModuleQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1521,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1521,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByModuleRelatedByDeliveryModuleId": {
            "name": "filterByModuleRelatedByDeliveryModuleId",
            "line": 1536,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Module object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "module": {
                    "name": "module",
                    "line": 1536,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Module",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1536,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinModuleRelatedByDeliveryModuleId": {
            "name": "joinModuleRelatedByDeliveryModuleId",
            "line": 1561,
            "short_desc": "Adds a JOIN clause to the query using the ModuleRelatedByDeliveryModuleId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1561,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1561,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useModuleRelatedByDeliveryModuleIdQuery": {
            "name": "useModuleRelatedByDeliveryModuleIdQuery",
            "line": 1596,
            "short_desc": "Use the ModuleRelatedByDeliveryModuleId relation Module object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\ModuleQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1596,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1596,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByLang": {
            "name": "filterByLang",
            "line": 1611,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Lang object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang": {
                    "name": "lang",
                    "line": 1611,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Lang",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1611,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinLang": {
            "name": "joinLang",
            "line": 1636,
            "short_desc": "Adds a JOIN clause to the query using the Lang relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1636,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1636,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useLangQuery": {
            "name": "useLangQuery",
            "line": 1671,
            "short_desc": "Use the Lang relation Lang object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\LangQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1671,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1671,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderProduct": {
            "name": "filterByOrderProduct",
            "line": 1686,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\OrderProduct object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderProduct": {
                    "name": "orderProduct",
                    "line": 1686,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\OrderProduct",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1686,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderProduct": {
            "name": "joinOrderProduct",
            "line": 1709,
            "short_desc": "Adds a JOIN clause to the query using the OrderProduct relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1709,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1709,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderProductQuery": {
            "name": "useOrderProductQuery",
            "line": 1744,
            "short_desc": "Use the OrderProduct relation OrderProduct object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderProductQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1744,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1744,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderCoupon": {
            "name": "filterByOrderCoupon",
            "line": 1759,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\OrderCoupon object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderCoupon": {
                    "name": "orderCoupon",
                    "line": 1759,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\OrderCoupon",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 1759,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderCoupon": {
            "name": "joinOrderCoupon",
            "line": 1782,
            "short_desc": "Adds a JOIN clause to the query using the OrderCoupon relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1782,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1782,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderCouponQuery": {
            "name": "useOrderCouponQuery",
            "line": 1817,
            "short_desc": "Use the OrderCoupon relation OrderCoupon object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderCouponQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 1817,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 1817,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 1831,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 1831,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Order",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 1846,
            "short_desc": "Deletes all rows from the order table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 1846,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 1883,
            "short_desc": "Performs a DELETE on the database, given a ChildOrder or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 1883,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "recentlyUpdated": {
            "name": "recentlyUpdated",
            "line": 1923,
            "short_desc": "Filter by the latest updated",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 1923,
                    "short_desc": "Maximum age of the latest update in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "recentlyCreated": {
            "name": "recentlyCreated",
            "line": 1935,
            "short_desc": "Filter by the latest created",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 1935,
                    "short_desc": "Maximum age of in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "lastUpdatedFirst": {
            "name": "lastUpdatedFirst",
            "line": 1945,
            "short_desc": "Order by update date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstUpdatedFirst": {
            "name": "firstUpdatedFirst",
            "line": 1955,
            "short_desc": "Order by update date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "lastCreatedFirst": {
            "name": "lastCreatedFirst",
            "line": 1965,
            "short_desc": "Order by create date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstCreatedFirst": {
            "name": "firstCreatedFirst",
            "line": 1975,
            "short_desc": "Order by create date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "orderById": {
            "name": "orderById",
            "line": 152,
            "short_desc": "Order by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByRef": {
            "name": "orderByRef",
            "line": 152,
            "short_desc": "Order by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCustomerId": {
            "name": "orderByCustomerId",
            "line": 152,
            "short_desc": "Order by the customer_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByInvoiceOrderAddressId": {
            "name": "orderByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Order by the invoice_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByDeliveryOrderAddressId": {
            "name": "orderByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Order by the delivery_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByInvoiceDate": {
            "name": "orderByInvoiceDate",
            "line": 152,
            "short_desc": "Order by the invoice_date column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCurrencyId": {
            "name": "orderByCurrencyId",
            "line": 152,
            "short_desc": "Order by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCurrencyRate": {
            "name": "orderByCurrencyRate",
            "line": 152,
            "short_desc": "Order by the currency_rate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByTransactionRef": {
            "name": "orderByTransactionRef",
            "line": 152,
            "short_desc": "Order by the transaction_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByDeliveryRef": {
            "name": "orderByDeliveryRef",
            "line": 152,
            "short_desc": "Order by the delivery_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByInvoiceRef": {
            "name": "orderByInvoiceRef",
            "line": 152,
            "short_desc": "Order by the invoice_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByDiscount": {
            "name": "orderByDiscount",
            "line": 152,
            "short_desc": "Order by the discount column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPostage": {
            "name": "orderByPostage",
            "line": 152,
            "short_desc": "Order by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPaymentModuleId": {
            "name": "orderByPaymentModuleId",
            "line": 152,
            "short_desc": "Order by the payment_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByDeliveryModuleId": {
            "name": "orderByDeliveryModuleId",
            "line": 152,
            "short_desc": "Order by the delivery_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByStatusId": {
            "name": "orderByStatusId",
            "line": 152,
            "short_desc": "Order by the status_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByLangId": {
            "name": "orderByLangId",
            "line": 152,
            "short_desc": "Order by the lang_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCreatedAt": {
            "name": "orderByCreatedAt",
            "line": 152,
            "short_desc": "Order by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByUpdatedAt": {
            "name": "orderByUpdatedAt",
            "line": 152,
            "short_desc": "Order by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupById": {
            "name": "groupById",
            "line": 152,
            "short_desc": "Group by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByRef": {
            "name": "groupByRef",
            "line": 152,
            "short_desc": "Group by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCustomerId": {
            "name": "groupByCustomerId",
            "line": 152,
            "short_desc": "Group by the customer_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByInvoiceOrderAddressId": {
            "name": "groupByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Group by the invoice_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByDeliveryOrderAddressId": {
            "name": "groupByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Group by the delivery_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByInvoiceDate": {
            "name": "groupByInvoiceDate",
            "line": 152,
            "short_desc": "Group by the invoice_date column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCurrencyId": {
            "name": "groupByCurrencyId",
            "line": 152,
            "short_desc": "Group by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCurrencyRate": {
            "name": "groupByCurrencyRate",
            "line": 152,
            "short_desc": "Group by the currency_rate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByTransactionRef": {
            "name": "groupByTransactionRef",
            "line": 152,
            "short_desc": "Group by the transaction_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByDeliveryRef": {
            "name": "groupByDeliveryRef",
            "line": 152,
            "short_desc": "Group by the delivery_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByInvoiceRef": {
            "name": "groupByInvoiceRef",
            "line": 152,
            "short_desc": "Group by the invoice_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByDiscount": {
            "name": "groupByDiscount",
            "line": 152,
            "short_desc": "Group by the discount column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPostage": {
            "name": "groupByPostage",
            "line": 152,
            "short_desc": "Group by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPaymentModuleId": {
            "name": "groupByPaymentModuleId",
            "line": 152,
            "short_desc": "Group by the payment_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByDeliveryModuleId": {
            "name": "groupByDeliveryModuleId",
            "line": 152,
            "short_desc": "Group by the delivery_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByStatusId": {
            "name": "groupByStatusId",
            "line": 152,
            "short_desc": "Group by the status_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByLangId": {
            "name": "groupByLangId",
            "line": 152,
            "short_desc": "Group by the lang_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCreatedAt": {
            "name": "groupByCreatedAt",
            "line": 152,
            "short_desc": "Group by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByUpdatedAt": {
            "name": "groupByUpdatedAt",
            "line": 152,
            "short_desc": "Group by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinCurrency": {
            "name": "leftJoinCurrency",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinCurrency": {
            "name": "rightJoinCurrency",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinCurrency": {
            "name": "innerJoinCurrency",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinCustomer": {
            "name": "leftJoinCustomer",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Customer relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinCustomer": {
            "name": "rightJoinCustomer",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Customer relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinCustomer": {
            "name": "innerJoinCustomer",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the Customer relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderAddressRelatedByInvoiceOrderAddressId": {
            "name": "leftJoinOrderAddressRelatedByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderAddressRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderAddressRelatedByInvoiceOrderAddressId": {
            "name": "rightJoinOrderAddressRelatedByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderAddressRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderAddressRelatedByInvoiceOrderAddressId": {
            "name": "innerJoinOrderAddressRelatedByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderAddressRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderAddressRelatedByDeliveryOrderAddressId": {
            "name": "leftJoinOrderAddressRelatedByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderAddressRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderAddressRelatedByDeliveryOrderAddressId": {
            "name": "rightJoinOrderAddressRelatedByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderAddressRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderAddressRelatedByDeliveryOrderAddressId": {
            "name": "innerJoinOrderAddressRelatedByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderAddressRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderStatus": {
            "name": "leftJoinOrderStatus",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderStatus relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderStatus": {
            "name": "rightJoinOrderStatus",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderStatus relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderStatus": {
            "name": "innerJoinOrderStatus",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderStatus relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinModuleRelatedByPaymentModuleId": {
            "name": "leftJoinModuleRelatedByPaymentModuleId",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the ModuleRelatedByPaymentModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinModuleRelatedByPaymentModuleId": {
            "name": "rightJoinModuleRelatedByPaymentModuleId",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the ModuleRelatedByPaymentModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinModuleRelatedByPaymentModuleId": {
            "name": "innerJoinModuleRelatedByPaymentModuleId",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the ModuleRelatedByPaymentModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinModuleRelatedByDeliveryModuleId": {
            "name": "leftJoinModuleRelatedByDeliveryModuleId",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the ModuleRelatedByDeliveryModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinModuleRelatedByDeliveryModuleId": {
            "name": "rightJoinModuleRelatedByDeliveryModuleId",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the ModuleRelatedByDeliveryModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinModuleRelatedByDeliveryModuleId": {
            "name": "innerJoinModuleRelatedByDeliveryModuleId",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the ModuleRelatedByDeliveryModuleId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinLang": {
            "name": "leftJoinLang",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Lang relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinLang": {
            "name": "rightJoinLang",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Lang relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinLang": {
            "name": "innerJoinLang",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the Lang relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderProduct": {
            "name": "leftJoinOrderProduct",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderProduct relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderProduct": {
            "name": "rightJoinOrderProduct",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderProduct relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderProduct": {
            "name": "innerJoinOrderProduct",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderProduct relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderCoupon": {
            "name": "leftJoinOrderCoupon",
            "line": 152,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderCoupon relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderCoupon": {
            "name": "rightJoinOrderCoupon",
            "line": 152,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderCoupon relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderCoupon": {
            "name": "innerJoinOrderCoupon",
            "line": 152,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderCoupon relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 152,
            "short_desc": "Return the first ChildOrder matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 152,
            "short_desc": "Return the first ChildOrder matching the query, or a new ChildOrder object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneById": {
            "name": "findOneById",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByRef": {
            "name": "findOneByRef",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCustomerId": {
            "name": "findOneByCustomerId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the customer_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customer_id": {
                    "name": "customer_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByInvoiceOrderAddressId": {
            "name": "findOneByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the invoice_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_order_address_id": {
                    "name": "invoice_order_address_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByDeliveryOrderAddressId": {
            "name": "findOneByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the delivery_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_order_address_id": {
                    "name": "delivery_order_address_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByInvoiceDate": {
            "name": "findOneByInvoiceDate",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the invoice_date column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_date": {
                    "name": "invoice_date",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCurrencyId": {
            "name": "findOneByCurrencyId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_id": {
                    "name": "currency_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCurrencyRate": {
            "name": "findOneByCurrencyRate",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the currency_rate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_rate": {
                    "name": "currency_rate",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByTransactionRef": {
            "name": "findOneByTransactionRef",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the transaction_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "transaction_ref": {
                    "name": "transaction_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByDeliveryRef": {
            "name": "findOneByDeliveryRef",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the delivery_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_ref": {
                    "name": "delivery_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByInvoiceRef": {
            "name": "findOneByInvoiceRef",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the invoice_ref column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_ref": {
                    "name": "invoice_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByDiscount": {
            "name": "findOneByDiscount",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the discount column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "discount": {
                    "name": "discount",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPostage": {
            "name": "findOneByPostage",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPaymentModuleId": {
            "name": "findOneByPaymentModuleId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the payment_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "payment_module_id": {
                    "name": "payment_module_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByDeliveryModuleId": {
            "name": "findOneByDeliveryModuleId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the delivery_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_module_id": {
                    "name": "delivery_module_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByStatusId": {
            "name": "findOneByStatusId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the status_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "status_id": {
                    "name": "status_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByLangId": {
            "name": "findOneByLangId",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the lang_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang_id": {
                    "name": "lang_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCreatedAt": {
            "name": "findOneByCreatedAt",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByUpdatedAt": {
            "name": "findOneByUpdatedAt",
            "line": 152,
            "short_desc": "Return the first ChildOrder filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrder",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findById": {
            "name": "findById",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByRef": {
            "name": "findByRef",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the ref column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "ref": {
                    "name": "ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCustomerId": {
            "name": "findByCustomerId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the customer_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customer_id": {
                    "name": "customer_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByInvoiceOrderAddressId": {
            "name": "findByInvoiceOrderAddressId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the invoice_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_order_address_id": {
                    "name": "invoice_order_address_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByDeliveryOrderAddressId": {
            "name": "findByDeliveryOrderAddressId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the delivery_order_address_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_order_address_id": {
                    "name": "delivery_order_address_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByInvoiceDate": {
            "name": "findByInvoiceDate",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the invoice_date column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_date": {
                    "name": "invoice_date",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCurrencyId": {
            "name": "findByCurrencyId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_id": {
                    "name": "currency_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCurrencyRate": {
            "name": "findByCurrencyRate",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the currency_rate column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_rate": {
                    "name": "currency_rate",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByTransactionRef": {
            "name": "findByTransactionRef",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the transaction_ref column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "transaction_ref": {
                    "name": "transaction_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByDeliveryRef": {
            "name": "findByDeliveryRef",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the delivery_ref column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_ref": {
                    "name": "delivery_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByInvoiceRef": {
            "name": "findByInvoiceRef",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the invoice_ref column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "invoice_ref": {
                    "name": "invoice_ref",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByDiscount": {
            "name": "findByDiscount",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the discount column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "discount": {
                    "name": "discount",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPostage": {
            "name": "findByPostage",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPaymentModuleId": {
            "name": "findByPaymentModuleId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the payment_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "payment_module_id": {
                    "name": "payment_module_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByDeliveryModuleId": {
            "name": "findByDeliveryModuleId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the delivery_module_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "delivery_module_id": {
                    "name": "delivery_module_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByStatusId": {
            "name": "findByStatusId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the status_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "status_id": {
                    "name": "status_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByLangId": {
            "name": "findByLangId",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the lang_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang_id": {
                    "name": "lang_id",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCreatedAt": {
            "name": "findByCreatedAt",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByUpdatedAt": {
            "name": "findByUpdatedAt",
            "line": 152,
            "short_desc": "Return ChildOrder objects filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 152,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}