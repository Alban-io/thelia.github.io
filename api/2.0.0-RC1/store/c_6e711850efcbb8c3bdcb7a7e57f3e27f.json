{
    "name": "Thelia\\Model\\Base\\AreaQuery",
    "line": 64,
    "short_desc": "Base class that represents a query for the 'area' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildAreaQuery",
                "orderById($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildAreaQuery",
                "orderByName($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "name",
                "column"
            ],
            [
                "ChildAreaQuery",
                "orderByPostage($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildAreaQuery",
                "orderByCreatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildAreaQuery",
                "orderByUpdatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildAreaQuery",
                "groupById()",
                "Group",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildAreaQuery",
                "groupByName()",
                "Group",
                "by",
                "the",
                "name",
                "column"
            ],
            [
                "ChildAreaQuery",
                "groupByPostage()",
                "Group",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildAreaQuery",
                "groupByCreatedAt()",
                "Group",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildAreaQuery",
                "groupByUpdatedAt()",
                "Group",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildAreaQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildAreaQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildAreaQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildAreaQuery",
                "leftJoinCountry($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Country",
                "relation"
            ],
            [
                "ChildAreaQuery",
                "rightJoinCountry($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Country",
                "relation"
            ],
            [
                "ChildAreaQuery",
                "innerJoinCountry($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Country",
                "relation"
            ],
            [
                "ChildAreaQuery",
                "leftJoinAreaDeliveryModule($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AreaDeliveryModule",
                "relation"
            ],
            [
                "ChildAreaQuery",
                "rightJoinAreaDeliveryModule($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AreaDeliveryModule",
                "relation"
            ],
            [
                "ChildAreaQuery",
                "innerJoinAreaDeliveryModule($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "AreaDeliveryModule",
                "relation"
            ],
            [
                "ChildArea",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildArea",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildArea",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildArea",
                "findOneById(int",
                "$id)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildArea",
                "findOneByName(string",
                "$name)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "filtered",
                "by",
                "the",
                "name",
                "column"
            ],
            [
                "ChildArea",
                "findOneByPostage(double",
                "$postage)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "filtered",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "ChildArea",
                "findOneByCreatedAt(string",
                "$created_at)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildArea",
                "findOneByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "the",
                "first",
                "ChildArea",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "array",
                "findById(int",
                "$id)",
                "Return",
                "ChildArea",
                "objects",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "array",
                "findByName(string",
                "$name)",
                "Return",
                "ChildArea",
                "objects",
                "filtered",
                "by",
                "the",
                "name",
                "column"
            ],
            [
                "array",
                "findByPostage(double",
                "$postage)",
                "Return",
                "ChildArea",
                "objects",
                "filtered",
                "by",
                "the",
                "postage",
                "column"
            ],
            [
                "array",
                "findByCreatedAt(string",
                "$created_at)",
                "Return",
                "ChildArea",
                "objects",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "array",
                "findByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "ChildArea",
                "objects",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Model\/Base\/AreaQuery.php",
    "hash": "0c7331d4f25fcf06ef50380f028ae3b24cc695d5",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildArea": "Thelia\\Model\\Area",
        "ChildAreaQuery": "Thelia\\Model\\AreaQuery",
        "AreaTableMap": "Thelia\\Model\\Map\\AreaTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 74,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\AreaQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 74,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 74,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\Area'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 74,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 87,
            "short_desc": "Returns a new ChildAreaQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 87,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 87,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 117,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj  = $c->findPk(12, $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\Area",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 117,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 117,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 199,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(12, 56, 832), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 199,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 199,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 220,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 220,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 232,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 232,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterById": {
            "name": "filterById",
            "line": 255,
            "short_desc": "Filter the query on the id column",
            "long_desc": "Example usage:\n<code>\n$query->filterById(1234); \/\/ WHERE id = 1234\n$query->filterById(array(12, 34)); \/\/ WHERE id IN (12, 34)\n$query->filterById(array('min' => 12)); \/\/ WHERE id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 255,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 255,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByName": {
            "name": "filterByName",
            "line": 293,
            "short_desc": "Filter the query on the name column",
            "long_desc": "Example usage:\n<code>\n$query->filterByName('fooValue');   \/\/ WHERE name = 'fooValue'\n$query->filterByName('%fooValue%'); \/\/ WHERE name LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 293,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 293,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPostage": {
            "name": "filterByPostage",
            "line": 325,
            "short_desc": "Filter the query on the postage column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPostage(1234); \/\/ WHERE postage = 1234\n$query->filterByPostage(array(12, 34)); \/\/ WHERE postage IN (12, 34)\n$query->filterByPostage(array('min' => 12)); \/\/ WHERE postage > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 325,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 325,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCreatedAt": {
            "name": "filterByCreatedAt",
            "line": 368,
            "short_desc": "Filter the query on the created_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCreatedAt('2011-03-14'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt('now'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt(array('max' => 'yesterday')); \/\/ WHERE created_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "createdAt": {
                    "name": "createdAt",
                    "line": 368,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 368,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByUpdatedAt": {
            "name": "filterByUpdatedAt",
            "line": 411,
            "short_desc": "Filter the query on the updated_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByUpdatedAt('2011-03-14'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt('now'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt(array('max' => 'yesterday')); \/\/ WHERE updated_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updatedAt": {
                    "name": "updatedAt",
                    "line": 411,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 411,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCountry": {
            "name": "filterByCountry",
            "line": 442,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Country object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "country": {
                    "name": "country",
                    "line": 442,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Country",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 442,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinCountry": {
            "name": "joinCountry",
            "line": 465,
            "short_desc": "Adds a JOIN clause to the query using the Country relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 465,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 465,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::LEFT_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useCountryQuery": {
            "name": "useCountryQuery",
            "line": 500,
            "short_desc": "Use the Country relation Country object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\CountryQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 500,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 500,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::LEFT_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByAreaDeliveryModule": {
            "name": "filterByAreaDeliveryModule",
            "line": 515,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\AreaDeliveryModule object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "areaDeliveryModule": {
                    "name": "areaDeliveryModule",
                    "line": 515,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\AreaDeliveryModule",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 515,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinAreaDeliveryModule": {
            "name": "joinAreaDeliveryModule",
            "line": 538,
            "short_desc": "Adds a JOIN clause to the query using the AreaDeliveryModule relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 538,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 538,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useAreaDeliveryModuleQuery": {
            "name": "useAreaDeliveryModuleQuery",
            "line": 573,
            "short_desc": "Use the AreaDeliveryModule relation AreaDeliveryModule object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\AreaDeliveryModuleQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 573,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 573,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 587,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "area": {
                    "name": "area",
                    "line": 587,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Area",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 602,
            "short_desc": "Deletes all rows from the area table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 602,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 639,
            "short_desc": "Performs a DELETE on the database, given a ChildArea or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 639,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "recentlyUpdated": {
            "name": "recentlyUpdated",
            "line": 679,
            "short_desc": "Filter by the latest updated",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 679,
                    "short_desc": "Maximum age of the latest update in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "recentlyCreated": {
            "name": "recentlyCreated",
            "line": 691,
            "short_desc": "Filter by the latest created",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 691,
                    "short_desc": "Maximum age of in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "lastUpdatedFirst": {
            "name": "lastUpdatedFirst",
            "line": 701,
            "short_desc": "Order by update date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstUpdatedFirst": {
            "name": "firstUpdatedFirst",
            "line": 711,
            "short_desc": "Order by update date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "lastCreatedFirst": {
            "name": "lastCreatedFirst",
            "line": 721,
            "short_desc": "Order by create date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstCreatedFirst": {
            "name": "firstCreatedFirst",
            "line": 731,
            "short_desc": "Order by create date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\AreaQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "orderById": {
            "name": "orderById",
            "line": 64,
            "short_desc": "Order by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByName": {
            "name": "orderByName",
            "line": 64,
            "short_desc": "Order by the name column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPostage": {
            "name": "orderByPostage",
            "line": 64,
            "short_desc": "Order by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCreatedAt": {
            "name": "orderByCreatedAt",
            "line": 64,
            "short_desc": "Order by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByUpdatedAt": {
            "name": "orderByUpdatedAt",
            "line": 64,
            "short_desc": "Order by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupById": {
            "name": "groupById",
            "line": 64,
            "short_desc": "Group by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByName": {
            "name": "groupByName",
            "line": 64,
            "short_desc": "Group by the name column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPostage": {
            "name": "groupByPostage",
            "line": 64,
            "short_desc": "Group by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCreatedAt": {
            "name": "groupByCreatedAt",
            "line": 64,
            "short_desc": "Group by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByUpdatedAt": {
            "name": "groupByUpdatedAt",
            "line": 64,
            "short_desc": "Group by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 64,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 64,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 64,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinCountry": {
            "name": "leftJoinCountry",
            "line": 64,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Country relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinCountry": {
            "name": "rightJoinCountry",
            "line": 64,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Country relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinCountry": {
            "name": "innerJoinCountry",
            "line": 64,
            "short_desc": "Adds a INNER JOIN clause to the query using the Country relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinAreaDeliveryModule": {
            "name": "leftJoinAreaDeliveryModule",
            "line": 64,
            "short_desc": "Adds a LEFT JOIN clause to the query using the AreaDeliveryModule relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinAreaDeliveryModule": {
            "name": "rightJoinAreaDeliveryModule",
            "line": 64,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the AreaDeliveryModule relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinAreaDeliveryModule": {
            "name": "innerJoinAreaDeliveryModule",
            "line": 64,
            "short_desc": "Adds a INNER JOIN clause to the query using the AreaDeliveryModule relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildAreaQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 64,
            "short_desc": "Return the first ChildArea matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 64,
            "short_desc": "Return the first ChildArea matching the query, or a new ChildArea object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneById": {
            "name": "findOneById",
            "line": 64,
            "short_desc": "Return the first ChildArea filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByName": {
            "name": "findOneByName",
            "line": 64,
            "short_desc": "Return the first ChildArea filtered by the name column",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPostage": {
            "name": "findOneByPostage",
            "line": 64,
            "short_desc": "Return the first ChildArea filtered by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCreatedAt": {
            "name": "findOneByCreatedAt",
            "line": 64,
            "short_desc": "Return the first ChildArea filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByUpdatedAt": {
            "name": "findOneByUpdatedAt",
            "line": 64,
            "short_desc": "Return the first ChildArea filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildArea",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findById": {
            "name": "findById",
            "line": 64,
            "short_desc": "Return ChildArea objects filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByName": {
            "name": "findByName",
            "line": 64,
            "short_desc": "Return ChildArea objects filtered by the name column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPostage": {
            "name": "findByPostage",
            "line": 64,
            "short_desc": "Return ChildArea objects filtered by the postage column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "postage": {
                    "name": "postage",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCreatedAt": {
            "name": "findByCreatedAt",
            "line": 64,
            "short_desc": "Return ChildArea objects filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByUpdatedAt": {
            "name": "findByUpdatedAt",
            "line": 64,
            "short_desc": "Return ChildArea objects filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 64,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}