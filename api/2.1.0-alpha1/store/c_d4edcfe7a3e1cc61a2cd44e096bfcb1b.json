{
    "name": "Thelia\\TaxEngine\\TaxEngine",
    "line": 26,
    "short_desc": "Class TaxEngine",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\TaxEngine"
            ]
        ],
        "author": [
            [
                "Etienne",
                "Roudeix",
                "<eroudeix@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\TaxEngine",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/TaxEngine\/TaxEngine.php",
    "hash": "0b30b857b9a683f27c7f163e793a999e6e6a2291",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Session": "Symfony\\Component\\HttpFoundation\\Session\\Session",
        "AddressQuery": "Thelia\\Model\\AddressQuery",
        "CountryQuery": "Thelia\\Model\\CountryQuery",
        "Request": "Thelia\\Core\\HttpFoundation\\Request"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 38,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 38,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\HttpFoundation\\Request",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Request",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addTaxTypeDirectory": {
            "name": "addTaxTypeDirectory",
            "line": 53,
            "short_desc": "Add a directroy which contains tax types classes.",
            "long_desc": "The tax engine\nwill scan this directory, and add all the tax type classes.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "namespace": {
                    "name": "namespace",
                    "line": 53,
                    "short_desc": "the namespace of the classes in the directory",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "path_to_tax_type_classes": {
                    "name": "path_to_tax_type_classes",
                    "line": 53,
                    "short_desc": "the path to the directory",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addTaxType": {
            "name": "addTaxType",
            "line": 64,
            "short_desc": "Add a tax type to the current list.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "fullyQualifiedclassName": {
                    "name": "fullyQualifiedclassName",
                    "line": 64,
                    "short_desc": "the fully qualified classname, su chas MyTaxes\\Taxes\\MyTaxType",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\TaxEngine\\unknown",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getTaxTypeList": {
            "name": "getTaxTypeList",
            "line": 69,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getDeliveryCountry": {
            "name": "getDeliveryCountry",
            "line": 113,
            "short_desc": "Find Tax Country Id First look for a picked delivery address country Then look at the current customer default address country Else look at the default website country",
            "long_desc": "",
            "hint": [
                [
                    "null",
                    false
                ],
                [
                    "Thelia\\TaxEngine\\TaxEngine",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}