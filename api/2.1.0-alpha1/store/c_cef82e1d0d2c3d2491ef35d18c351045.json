{
    "name": "Thelia\\Files\\FileManager",
    "line": 28,
    "short_desc": "File Manager",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "File"
            ]
        ],
        "author": [
            [
                "Guillaume",
                "MOREL",
                "<gmorel@openstudio.fr>,",
                "Franck",
                "Allimant",
                "<franck@cqfdev.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Files",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Files\/FileManager.php",
    "hash": "6ab1ab0ad09b6cec1bb9fd7d250a55cb886378f7",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "UploadedFile": "Symfony\\Component\\HttpFoundation\\File\\UploadedFile",
        "FileCreateOrUpdateEvent": "Thelia\\Core\\Event\\File\\FileCreateOrUpdateEvent",
        "FileException": "Thelia\\Exception\\FileException",
        "ImageException": "Thelia\\Exception\\ImageException"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 37,
            "short_desc": "Create a new FileManager instance.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "supportedFileModels": {
                    "name": "supportedFileModels",
                    "line": 37,
                    "short_desc": "The key should have form type.parent, where type is the file type (document or image) and parent is the parent object of the file, form example product, brand, folder, etc.",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getModelInstance": {
            "name": "getModelInstance",
            "line": 63,
            "short_desc": "Create a new FileModelInterface instance, from the supportedFileModels table",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Files\\FileModelInterface",
                    false
                ]
            ],
            "hint_desc": "a file model interface instance",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "FileException",
                    "if the file type is not supported, or if the class does not implements FileModelInterface"
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "fileType": {
                    "name": "fileType",
                    "line": 63,
                    "short_desc": "the file type, such as document, image, etc.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "parentType": {
                    "name": "parentType",
                    "line": 63,
                    "short_desc": "the parent type, such as product, category, etc.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addFileModel": {
            "name": "addFileModel",
            "line": 96,
            "short_desc": "A a new FileModelInterface class name to the supported class list.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "fileType": {
                    "name": "fileType",
                    "line": 96,
                    "short_desc": "the file type, such as document, image, etc.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "parentType": {
                    "name": "parentType",
                    "line": 96,
                    "short_desc": "the parent type, such as Product, Category, etc.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "fullyQualifiedClassName": {
                    "name": "fullyQualifiedClassName",
                    "line": 96,
                    "short_desc": "the fully qualified class name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "copyUploadedFile": {
            "name": "copyUploadedFile",
            "line": 111,
            "short_desc": "Copy UploadedFile into the server storage directory",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\HttpFoundation\\File\\UploadedFile",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Thelia\\Exception\\ImageException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "model": {
                    "name": "model",
                    "line": 111,
                    "short_desc": "Model saved",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Files\\FileModelInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileModelInterface",
                    "default": null,
                    "is_by_ref": false
                },
                "uploadedFile": {
                    "name": "uploadedFile",
                    "line": 111,
                    "short_desc": "Ready to be uploaded file",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\HttpFoundation\\File\\UploadedFile",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "UploadedFile",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 111,
                    "short_desc": "current transaction with database",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "saveImage": {
            "name": "saveImage",
            "line": 178,
            "short_desc": "Save file into the database",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "number of modified rows in database",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 178,
                    "short_desc": "the event",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\File\\FileCreateOrUpdateEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileCreateOrUpdateEvent",
                    "default": null,
                    "is_by_ref": false
                },
                "imageModel": {
                    "name": "imageModel",
                    "line": 178,
                    "short_desc": "the file model object (image or document) to save.",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Files\\FileModelInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileModelInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "saveDocument": {
            "name": "saveDocument",
            "line": 191,
            "short_desc": "Save file into the database",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "number of modified rows in database",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 191,
                    "short_desc": "the event",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\File\\FileCreateOrUpdateEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileCreateOrUpdateEvent",
                    "default": null,
                    "is_by_ref": false
                },
                "documentModel": {
                    "name": "documentModel",
                    "line": 191,
                    "short_desc": "the file model object (image or document) to save.",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Files\\FileModelInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileModelInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "sanitizeFileName": {
            "name": "sanitizeFileName",
            "line": 207,
            "short_desc": "Sanitizes a filename replacing whitespace with dashes",
            "long_desc": "Removes special characters that are illegal in filenames on certain\noperating systems and special characters requiring special escaping\nto manipulate at the command line.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The sanitized filename",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "string": {
                    "name": "string",
                    "line": 207,
                    "short_desc": "The filename to be sanitized",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "deleteFile": {
            "name": "deleteFile",
            "line": 217,
            "short_desc": "Delete image from file storage and database",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "model": {
                    "name": "model",
                    "line": 217,
                    "short_desc": "File being deleted",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Files\\FileModelInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FileModelInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "renameFile": {
            "name": "renameFile",
            "line": 234,
            "short_desc": "Rename file with image model id",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelId": {
                    "name": "modelId",
                    "line": 234,
                    "short_desc": "Model id",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "uploadedFile": {
                    "name": "uploadedFile",
                    "line": 234,
                    "short_desc": "File being saved",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\HttpFoundation\\File\\UploadedFile",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "UploadedFile",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isImage": {
            "name": "isImage",
            "line": 259,
            "short_desc": "Check if a file is an image Check based on mime type",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "mimeType": {
                    "name": "mimeType",
                    "line": 259,
                    "short_desc": "File mime type",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}