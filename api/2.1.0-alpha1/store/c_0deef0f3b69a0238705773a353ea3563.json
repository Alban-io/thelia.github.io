{
    "name": "Thelia\\Core\\Template\\Smarty\\AbstractSmartyPlugin",
    "line": 22,
    "short_desc": "The class all Smarty Thelia plugin shoud extend",
    "long_desc": "Class AbstractSmartyPlugin",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\Template\\Smarty"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\Template\\Smarty",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Template\/Smarty\/AbstractSmartyPlugin.php",
    "hash": "181b1f1c7774adaa2d6ef84a6b84185f34fdf7f1",
    "parent": null,
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": [

    ],
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "getNormalizedParam": {
            "name": "getNormalizedParam",
            "line": 59,
            "short_desc": "Get a function or block parameter value, and normalize it, trimming balnks and making it lowercase",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the parameter value, or the default value if it is not found.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "params": {
                    "name": "params",
                    "line": 59,
                    "short_desc": "the parameters array",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "name": {
                    "name": "name",
                    "line": 59,
                    "short_desc": "as single parameter name, or an array of names. In this case, the first defined parameter is returned. Use this for aliases (context, ctx, c)",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 59,
                    "short_desc": "the defaut value if parameter is missing (default to null)",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getParam": {
            "name": "getParam",
            "line": 77,
            "short_desc": "Get a function or block parameter value",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the parameter value, or the default value if it is not found.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "params": {
                    "name": "params",
                    "line": 77,
                    "short_desc": "the parameters array",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "name": {
                    "name": "name",
                    "line": 77,
                    "short_desc": "as single parameter name, or an array of names. In this case, the first defined parameter is returned. Use this for aliases (context, ctx, c)",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 77,
                    "short_desc": "the defaut value if parameter is missing (default to null)",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getPluginDescriptors": {
            "name": "getPluginDescriptors",
            "line": 95,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\Template\\Smarty\\an",
                    false
                ]
            ],
            "hint_desc": "array of SmartyPluginDescriptor",
            "tags": [

            ],
            "modifiers": "17",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}