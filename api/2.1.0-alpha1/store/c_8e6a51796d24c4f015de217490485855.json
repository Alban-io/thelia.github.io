{
    "name": "Thelia\\Model\\Base\\SaleOffsetCurrencyQuery",
    "line": 56,
    "short_desc": "Base class that represents a query for the 'sale_offset_currency' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildSaleOffsetCurrencyQuery",
                "orderBySaleId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "sale_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "orderByCurrencyId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "orderByPriceOffsetValue($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "price_offset_value",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "groupBySaleId()",
                "Group",
                "by",
                "the",
                "sale_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "groupByCurrencyId()",
                "Group",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "groupByPriceOffsetValue()",
                "Group",
                "by",
                "the",
                "price_offset_value",
                "column"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "leftJoinSale($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Sale",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "rightJoinSale($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Sale",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "innerJoinSale($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Sale",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "leftJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "rightJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrencyQuery",
                "innerJoinCurrency($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "Currency",
                "relation"
            ],
            [
                "ChildSaleOffsetCurrency",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildSaleOffsetCurrency",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildSaleOffsetCurrency",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildSaleOffsetCurrency",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildSaleOffsetCurrency",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildSaleOffsetCurrency",
                "findOneBySaleId(int",
                "$sale_id)",
                "Return",
                "the",
                "first",
                "ChildSaleOffsetCurrency",
                "filtered",
                "by",
                "the",
                "sale_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrency",
                "findOneByCurrencyId(int",
                "$currency_id)",
                "Return",
                "the",
                "first",
                "ChildSaleOffsetCurrency",
                "filtered",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "ChildSaleOffsetCurrency",
                "findOneByPriceOffsetValue(double",
                "$price_offset_value)",
                "Return",
                "the",
                "first",
                "ChildSaleOffsetCurrency",
                "filtered",
                "by",
                "the",
                "price_offset_value",
                "column"
            ],
            [
                "array",
                "findBySaleId(int",
                "$sale_id)",
                "Return",
                "ChildSaleOffsetCurrency",
                "objects",
                "filtered",
                "by",
                "the",
                "sale_id",
                "column"
            ],
            [
                "array",
                "findByCurrencyId(int",
                "$currency_id)",
                "Return",
                "ChildSaleOffsetCurrency",
                "objects",
                "filtered",
                "by",
                "the",
                "currency_id",
                "column"
            ],
            [
                "array",
                "findByPriceOffsetValue(double",
                "$price_offset_value)",
                "Return",
                "ChildSaleOffsetCurrency",
                "objects",
                "filtered",
                "by",
                "the",
                "price_offset_value",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Model\/Base\/SaleOffsetCurrencyQuery.php",
    "hash": "2a6cb68a8e6fd8b1972acc13f9988ca948518533",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildSaleOffsetCurrency": "Thelia\\Model\\SaleOffsetCurrency",
        "ChildSaleOffsetCurrencyQuery": "Thelia\\Model\\SaleOffsetCurrencyQuery",
        "SaleOffsetCurrencyTableMap": "Thelia\\Model\\Map\\SaleOffsetCurrencyTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 66,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\SaleOffsetCurrencyQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 66,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 66,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\SaleOffsetCurrency'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 66,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 79,
            "short_desc": "Returns a new ChildSaleOffsetCurrencyQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 79,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 79,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 109,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj = $c->findPk(array(12, 34), $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrency",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [
                "The \"currency_id]\" @param tag variable name is wrong (should be \"key\")"
            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 109,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 109,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 192,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(array(12, 56), array(832, 123), array(123, 456)), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 192,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 192,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 213,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 213,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 228,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 228,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterBySaleId": {
            "name": "filterBySaleId",
            "line": 263,
            "short_desc": "Filter the query on the sale_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterBySaleId(1234); \/\/ WHERE sale_id = 1234\n$query->filterBySaleId(array(12, 34)); \/\/ WHERE sale_id IN (12, 34)\n$query->filterBySaleId(array('min' => 12)); \/\/ WHERE sale_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterBySale()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "saleId": {
                    "name": "saleId",
                    "line": 263,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 263,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCurrencyId": {
            "name": "filterByCurrencyId",
            "line": 306,
            "short_desc": "Filter the query on the currency_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCurrencyId(1234); \/\/ WHERE currency_id = 1234\n$query->filterByCurrencyId(array(12, 34)); \/\/ WHERE currency_id IN (12, 34)\n$query->filterByCurrencyId(array('min' => 12)); \/\/ WHERE currency_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": {
                "see": [
                    [
                        "filterByCurrency()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currencyId": {
                    "name": "currencyId",
                    "line": 306,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 306,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPriceOffsetValue": {
            "name": "filterByPriceOffsetValue",
            "line": 347,
            "short_desc": "Filter the query on the price_offset_value column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPriceOffsetValue(1234); \/\/ WHERE price_offset_value = 1234\n$query->filterByPriceOffsetValue(array(12, 34)); \/\/ WHERE price_offset_value IN (12, 34)\n$query->filterByPriceOffsetValue(array('min' => 12)); \/\/ WHERE price_offset_value > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "priceOffsetValue": {
                    "name": "priceOffsetValue",
                    "line": 347,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 347,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterBySale": {
            "name": "filterBySale",
            "line": 378,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Sale object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "sale": {
                    "name": "sale",
                    "line": 378,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Sale",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 378,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinSale": {
            "name": "joinSale",
            "line": 403,
            "short_desc": "Adds a JOIN clause to the query using the Sale relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 403,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 403,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useSaleQuery": {
            "name": "useSaleQuery",
            "line": 438,
            "short_desc": "Use the Sale relation Sale object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\SaleQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 438,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 438,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByCurrency": {
            "name": "filterByCurrency",
            "line": 453,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Currency object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency": {
                    "name": "currency",
                    "line": 453,
                    "short_desc": "The related object(s) to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Currency",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 453,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinCurrency": {
            "name": "joinCurrency",
            "line": 478,
            "short_desc": "Adds a JOIN clause to the query using the Currency relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 478,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 478,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useCurrencyQuery": {
            "name": "useCurrencyQuery",
            "line": 513,
            "short_desc": "Use the Currency relation Currency object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\CurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 513,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 513,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 527,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\SaleOffsetCurrencyQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "saleOffsetCurrency": {
                    "name": "saleOffsetCurrency",
                    "line": 527,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\SaleOffsetCurrency",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 544,
            "short_desc": "Deletes all rows from the sale_offset_currency table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 544,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 581,
            "short_desc": "Performs a DELETE on the database, given a ChildSaleOffsetCurrency or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 581,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "orderBySaleId": {
            "name": "orderBySaleId",
            "line": 56,
            "short_desc": "Order by the sale_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCurrencyId": {
            "name": "orderByCurrencyId",
            "line": 56,
            "short_desc": "Order by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPriceOffsetValue": {
            "name": "orderByPriceOffsetValue",
            "line": 56,
            "short_desc": "Order by the price_offset_value column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupBySaleId": {
            "name": "groupBySaleId",
            "line": 56,
            "short_desc": "Group by the sale_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCurrencyId": {
            "name": "groupByCurrencyId",
            "line": 56,
            "short_desc": "Group by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPriceOffsetValue": {
            "name": "groupByPriceOffsetValue",
            "line": 56,
            "short_desc": "Group by the price_offset_value column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 56,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 56,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 56,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinSale": {
            "name": "leftJoinSale",
            "line": 56,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Sale relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinSale": {
            "name": "rightJoinSale",
            "line": 56,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Sale relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinSale": {
            "name": "innerJoinSale",
            "line": 56,
            "short_desc": "Adds a INNER JOIN clause to the query using the Sale relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinCurrency": {
            "name": "leftJoinCurrency",
            "line": 56,
            "short_desc": "Adds a LEFT JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinCurrency": {
            "name": "rightJoinCurrency",
            "line": 56,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinCurrency": {
            "name": "innerJoinCurrency",
            "line": 56,
            "short_desc": "Adds a INNER JOIN clause to the query using the Currency relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrencyQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 56,
            "short_desc": "Return the first ChildSaleOffsetCurrency matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrency",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 56,
            "short_desc": "Return the first ChildSaleOffsetCurrency matching the query, or a new ChildSaleOffsetCurrency object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrency",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneBySaleId": {
            "name": "findOneBySaleId",
            "line": 56,
            "short_desc": "Return the first ChildSaleOffsetCurrency filtered by the sale_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrency",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "sale_id": {
                    "name": "sale_id",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCurrencyId": {
            "name": "findOneByCurrencyId",
            "line": 56,
            "short_desc": "Return the first ChildSaleOffsetCurrency filtered by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrency",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_id": {
                    "name": "currency_id",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPriceOffsetValue": {
            "name": "findOneByPriceOffsetValue",
            "line": 56,
            "short_desc": "Return the first ChildSaleOffsetCurrency filtered by the price_offset_value column",
            "long_desc": null,
            "hint": [
                [
                    "ChildSaleOffsetCurrency",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "price_offset_value": {
                    "name": "price_offset_value",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findBySaleId": {
            "name": "findBySaleId",
            "line": 56,
            "short_desc": "Return ChildSaleOffsetCurrency objects filtered by the sale_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "sale_id": {
                    "name": "sale_id",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCurrencyId": {
            "name": "findByCurrencyId",
            "line": 56,
            "short_desc": "Return ChildSaleOffsetCurrency objects filtered by the currency_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "currency_id": {
                    "name": "currency_id",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPriceOffsetValue": {
            "name": "findByPriceOffsetValue",
            "line": 56,
            "short_desc": "Return ChildSaleOffsetCurrency objects filtered by the price_offset_value column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "price_offset_value": {
                    "name": "price_offset_value",
                    "line": 56,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "double ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}