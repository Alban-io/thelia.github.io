{
    "name": "Thelia\\Model\\Base\\HookQuery",
    "line": 85,
    "short_desc": "Base class that represents a query for the 'hook' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildHookQuery",
                "orderById($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByCode($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "code",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByType($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "type",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByByModule($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "by_module",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByNative($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "native",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByActivate($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "activate",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByBlock($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "block",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByPosition($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "position",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByCreatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildHookQuery",
                "orderByUpdatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupById()",
                "Group",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByCode()",
                "Group",
                "by",
                "the",
                "code",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByType()",
                "Group",
                "by",
                "the",
                "type",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByByModule()",
                "Group",
                "by",
                "the",
                "by_module",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByNative()",
                "Group",
                "by",
                "the",
                "native",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByActivate()",
                "Group",
                "by",
                "the",
                "activate",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByBlock()",
                "Group",
                "by",
                "the",
                "block",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByPosition()",
                "Group",
                "by",
                "the",
                "position",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByCreatedAt()",
                "Group",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildHookQuery",
                "groupByUpdatedAt()",
                "Group",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildHookQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildHookQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildHookQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildHookQuery",
                "leftJoinModuleHook($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleHook",
                "relation"
            ],
            [
                "ChildHookQuery",
                "rightJoinModuleHook($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleHook",
                "relation"
            ],
            [
                "ChildHookQuery",
                "innerJoinModuleHook($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "ModuleHook",
                "relation"
            ],
            [
                "ChildHookQuery",
                "leftJoinHookI18n($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "HookI18n",
                "relation"
            ],
            [
                "ChildHookQuery",
                "rightJoinHookI18n($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "HookI18n",
                "relation"
            ],
            [
                "ChildHookQuery",
                "innerJoinHookI18n($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "HookI18n",
                "relation"
            ],
            [
                "ChildHook",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildHook",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildHook",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildHook",
                "findOneById(int",
                "$id)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildHook",
                "findOneByCode(string",
                "$code)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "code",
                "column"
            ],
            [
                "ChildHook",
                "findOneByType(int",
                "$type)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "type",
                "column"
            ],
            [
                "ChildHook",
                "findOneByByModule(boolean",
                "$by_module)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "by_module",
                "column"
            ],
            [
                "ChildHook",
                "findOneByNative(boolean",
                "$native)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "native",
                "column"
            ],
            [
                "ChildHook",
                "findOneByActivate(boolean",
                "$activate)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "activate",
                "column"
            ],
            [
                "ChildHook",
                "findOneByBlock(boolean",
                "$block)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "block",
                "column"
            ],
            [
                "ChildHook",
                "findOneByPosition(int",
                "$position)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "position",
                "column"
            ],
            [
                "ChildHook",
                "findOneByCreatedAt(string",
                "$created_at)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildHook",
                "findOneByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "the",
                "first",
                "ChildHook",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "array",
                "findById(int",
                "$id)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "array",
                "findByCode(string",
                "$code)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "code",
                "column"
            ],
            [
                "array",
                "findByType(int",
                "$type)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "type",
                "column"
            ],
            [
                "array",
                "findByByModule(boolean",
                "$by_module)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "by_module",
                "column"
            ],
            [
                "array",
                "findByNative(boolean",
                "$native)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "native",
                "column"
            ],
            [
                "array",
                "findByActivate(boolean",
                "$activate)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "activate",
                "column"
            ],
            [
                "array",
                "findByBlock(boolean",
                "$block)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "block",
                "column"
            ],
            [
                "array",
                "findByPosition(int",
                "$position)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "position",
                "column"
            ],
            [
                "array",
                "findByCreatedAt(string",
                "$created_at)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "array",
                "findByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "ChildHook",
                "objects",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Model\/Base\/HookQuery.php",
    "hash": "adc36dad7cd6b5052dd8f1ed1b80aad2f8513c2b",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildHook": "Thelia\\Model\\Hook",
        "ChildHookI18nQuery": "Thelia\\Model\\HookI18nQuery",
        "ChildHookQuery": "Thelia\\Model\\HookQuery",
        "HookTableMap": "Thelia\\Model\\Map\\HookTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 95,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\HookQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 95,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 95,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\Hook'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 95,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 108,
            "short_desc": "Returns a new ChildHookQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 108,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 108,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 138,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj  = $c->findPk(12, $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\Hook",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 138,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 138,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 220,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(12, 56, 832), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 220,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 220,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 241,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 241,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 254,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 254,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterById": {
            "name": "filterById",
            "line": 278,
            "short_desc": "Filter the query on the id column",
            "long_desc": "Example usage:\n<code>\n$query->filterById(1234); \/\/ WHERE id = 1234\n$query->filterById(array(12, 34)); \/\/ WHERE id IN (12, 34)\n$query->filterById(array('min' => 12)); \/\/ WHERE id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 278,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 278,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCode": {
            "name": "filterByCode",
            "line": 316,
            "short_desc": "Filter the query on the code column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCode('fooValue');   \/\/ WHERE code = 'fooValue'\n$query->filterByCode('%fooValue%'); \/\/ WHERE code LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "code": {
                    "name": "code",
                    "line": 316,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 316,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByType": {
            "name": "filterByType",
            "line": 348,
            "short_desc": "Filter the query on the type column",
            "long_desc": "Example usage:\n<code>\n$query->filterByType(1234); \/\/ WHERE type = 1234\n$query->filterByType(array(12, 34)); \/\/ WHERE type IN (12, 34)\n$query->filterByType(array('min' => 12)); \/\/ WHERE type > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "type": {
                    "name": "type",
                    "line": 348,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 348,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByByModule": {
            "name": "filterByByModule",
            "line": 389,
            "short_desc": "Filter the query on the by_module column",
            "long_desc": "Example usage:\n<code>\n$query->filterByByModule(true); \/\/ WHERE by_module = true\n$query->filterByByModule('yes'); \/\/ WHERE by_module = true\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "byModule": {
                    "name": "byModule",
                    "line": 389,
                    "short_desc": "The value to use as filter. Non-boolean arguments are converted using the following rules: * 1, '1', 'true',  'on',  and 'yes' are converted to boolean true * 0, '0', 'false', 'off', and 'no'  are converted to boolean false Check on string values is case insensitive (so 'FaLsE' is seen as 'false').",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 389,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByNative": {
            "name": "filterByNative",
            "line": 416,
            "short_desc": "Filter the query on the native column",
            "long_desc": "Example usage:\n<code>\n$query->filterByNative(true); \/\/ WHERE native = true\n$query->filterByNative('yes'); \/\/ WHERE native = true\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "native": {
                    "name": "native",
                    "line": 416,
                    "short_desc": "The value to use as filter. Non-boolean arguments are converted using the following rules: * 1, '1', 'true',  'on',  and 'yes' are converted to boolean true * 0, '0', 'false', 'off', and 'no'  are converted to boolean false Check on string values is case insensitive (so 'FaLsE' is seen as 'false').",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 416,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByActivate": {
            "name": "filterByActivate",
            "line": 443,
            "short_desc": "Filter the query on the activate column",
            "long_desc": "Example usage:\n<code>\n$query->filterByActivate(true); \/\/ WHERE activate = true\n$query->filterByActivate('yes'); \/\/ WHERE activate = true\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "activate": {
                    "name": "activate",
                    "line": 443,
                    "short_desc": "The value to use as filter. Non-boolean arguments are converted using the following rules: * 1, '1', 'true',  'on',  and 'yes' are converted to boolean true * 0, '0', 'false', 'off', and 'no'  are converted to boolean false Check on string values is case insensitive (so 'FaLsE' is seen as 'false').",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 443,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByBlock": {
            "name": "filterByBlock",
            "line": 470,
            "short_desc": "Filter the query on the block column",
            "long_desc": "Example usage:\n<code>\n$query->filterByBlock(true); \/\/ WHERE block = true\n$query->filterByBlock('yes'); \/\/ WHERE block = true\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "block": {
                    "name": "block",
                    "line": 470,
                    "short_desc": "The value to use as filter. Non-boolean arguments are converted using the following rules: * 1, '1', 'true',  'on',  and 'yes' are converted to boolean true * 0, '0', 'false', 'off', and 'no'  are converted to boolean false Check on string values is case insensitive (so 'FaLsE' is seen as 'false').",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 470,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPosition": {
            "name": "filterByPosition",
            "line": 497,
            "short_desc": "Filter the query on the position column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPosition(1234); \/\/ WHERE position = 1234\n$query->filterByPosition(array(12, 34)); \/\/ WHERE position IN (12, 34)\n$query->filterByPosition(array('min' => 12)); \/\/ WHERE position > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "position": {
                    "name": "position",
                    "line": 497,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 497,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCreatedAt": {
            "name": "filterByCreatedAt",
            "line": 540,
            "short_desc": "Filter the query on the created_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCreatedAt('2011-03-14'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt('now'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt(array('max' => 'yesterday')); \/\/ WHERE created_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "createdAt": {
                    "name": "createdAt",
                    "line": 540,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 540,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByUpdatedAt": {
            "name": "filterByUpdatedAt",
            "line": 583,
            "short_desc": "Filter the query on the updated_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByUpdatedAt('2011-03-14'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt('now'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt(array('max' => 'yesterday')); \/\/ WHERE updated_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updatedAt": {
                    "name": "updatedAt",
                    "line": 583,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 583,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByModuleHook": {
            "name": "filterByModuleHook",
            "line": 614,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\ModuleHook object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "moduleHook": {
                    "name": "moduleHook",
                    "line": 614,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\ModuleHook",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 614,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinModuleHook": {
            "name": "joinModuleHook",
            "line": 637,
            "short_desc": "Adds a JOIN clause to the query using the ModuleHook relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 637,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 637,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useModuleHookQuery": {
            "name": "useModuleHookQuery",
            "line": 672,
            "short_desc": "Use the ModuleHook relation ModuleHook object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\ModuleHookQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 672,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 672,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByHookI18n": {
            "name": "filterByHookI18n",
            "line": 687,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\HookI18n object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "hookI18n": {
                    "name": "hookI18n",
                    "line": 687,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\HookI18n",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 687,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinHookI18n": {
            "name": "joinHookI18n",
            "line": 710,
            "short_desc": "Adds a JOIN clause to the query using the HookI18n relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 710,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 710,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'LEFT JOIN'",
                    "is_by_ref": false
                }
            }
        },
        "useHookI18nQuery": {
            "name": "useHookI18nQuery",
            "line": 745,
            "short_desc": "Use the HookI18n relation HookI18n object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\HookI18nQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 745,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 745,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'LEFT JOIN'",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 759,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "hook": {
                    "name": "hook",
                    "line": 759,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Hook",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 774,
            "short_desc": "Deletes all rows from the hook table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 774,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 811,
            "short_desc": "Performs a DELETE on the database, given a ChildHook or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 811,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "recentlyUpdated": {
            "name": "recentlyUpdated",
            "line": 852,
            "short_desc": "Filter by the latest updated",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 852,
                    "short_desc": "Maximum age of the latest update in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "recentlyCreated": {
            "name": "recentlyCreated",
            "line": 864,
            "short_desc": "Filter by the latest created",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 864,
                    "short_desc": "Maximum age of in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "lastUpdatedFirst": {
            "name": "lastUpdatedFirst",
            "line": 874,
            "short_desc": "Order by update date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstUpdatedFirst": {
            "name": "firstUpdatedFirst",
            "line": 884,
            "short_desc": "Order by update date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "lastCreatedFirst": {
            "name": "lastCreatedFirst",
            "line": 894,
            "short_desc": "Order by create date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstCreatedFirst": {
            "name": "firstCreatedFirst",
            "line": 904,
            "short_desc": "Order by create date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "joinI18n": {
            "name": "joinI18n",
            "line": 920,
            "short_desc": "Adds a JOIN clause to the query using the i18n relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "locale": {
                    "name": "locale",
                    "line": 920,
                    "short_desc": "Locale to use for the join condition, e.g. 'fr_FR'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'en_US'",
                    "is_by_ref": false
                },
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 920,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 920,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'. Defaults to left join.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::LEFT_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "joinWithI18n": {
            "name": "joinWithI18n",
            "line": 938,
            "short_desc": "Adds a JOIN clause to the query and hydrates the related I18n object.",
            "long_desc": "Shortcut for $c->joinI18n($locale)->with()",
            "hint": [
                [
                    "Thelia\\Model\\HookQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "locale": {
                    "name": "locale",
                    "line": 938,
                    "short_desc": "Locale to use for the join condition, e.g. 'fr_FR'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'en_US'",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 938,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'. Defaults to left join.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::LEFT_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useI18nQuery": {
            "name": "useI18nQuery",
            "line": 959,
            "short_desc": "Use the I18n relation query object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\HookI18nQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "locale": {
                    "name": "locale",
                    "line": 959,
                    "short_desc": "Locale to use for the join condition, e.g. 'fr_FR'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'en_US'",
                    "is_by_ref": false
                },
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 959,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 959,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'. Defaults to left join.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::LEFT_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "orderById": {
            "name": "orderById",
            "line": 85,
            "short_desc": "Order by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCode": {
            "name": "orderByCode",
            "line": 85,
            "short_desc": "Order by the code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByType": {
            "name": "orderByType",
            "line": 85,
            "short_desc": "Order by the type column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByByModule": {
            "name": "orderByByModule",
            "line": 85,
            "short_desc": "Order by the by_module column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByNative": {
            "name": "orderByNative",
            "line": 85,
            "short_desc": "Order by the native column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByActivate": {
            "name": "orderByActivate",
            "line": 85,
            "short_desc": "Order by the activate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByBlock": {
            "name": "orderByBlock",
            "line": 85,
            "short_desc": "Order by the block column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPosition": {
            "name": "orderByPosition",
            "line": 85,
            "short_desc": "Order by the position column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCreatedAt": {
            "name": "orderByCreatedAt",
            "line": 85,
            "short_desc": "Order by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByUpdatedAt": {
            "name": "orderByUpdatedAt",
            "line": 85,
            "short_desc": "Order by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupById": {
            "name": "groupById",
            "line": 85,
            "short_desc": "Group by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCode": {
            "name": "groupByCode",
            "line": 85,
            "short_desc": "Group by the code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByType": {
            "name": "groupByType",
            "line": 85,
            "short_desc": "Group by the type column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByByModule": {
            "name": "groupByByModule",
            "line": 85,
            "short_desc": "Group by the by_module column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByNative": {
            "name": "groupByNative",
            "line": 85,
            "short_desc": "Group by the native column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByActivate": {
            "name": "groupByActivate",
            "line": 85,
            "short_desc": "Group by the activate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByBlock": {
            "name": "groupByBlock",
            "line": 85,
            "short_desc": "Group by the block column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPosition": {
            "name": "groupByPosition",
            "line": 85,
            "short_desc": "Group by the position column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCreatedAt": {
            "name": "groupByCreatedAt",
            "line": 85,
            "short_desc": "Group by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByUpdatedAt": {
            "name": "groupByUpdatedAt",
            "line": 85,
            "short_desc": "Group by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 85,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 85,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 85,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinModuleHook": {
            "name": "leftJoinModuleHook",
            "line": 85,
            "short_desc": "Adds a LEFT JOIN clause to the query using the ModuleHook relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinModuleHook": {
            "name": "rightJoinModuleHook",
            "line": 85,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the ModuleHook relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinModuleHook": {
            "name": "innerJoinModuleHook",
            "line": 85,
            "short_desc": "Adds a INNER JOIN clause to the query using the ModuleHook relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinHookI18n": {
            "name": "leftJoinHookI18n",
            "line": 85,
            "short_desc": "Adds a LEFT JOIN clause to the query using the HookI18n relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinHookI18n": {
            "name": "rightJoinHookI18n",
            "line": 85,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the HookI18n relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinHookI18n": {
            "name": "innerJoinHookI18n",
            "line": 85,
            "short_desc": "Adds a INNER JOIN clause to the query using the HookI18n relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildHookQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 85,
            "short_desc": "Return the first ChildHook matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 85,
            "short_desc": "Return the first ChildHook matching the query, or a new ChildHook object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneById": {
            "name": "findOneById",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCode": {
            "name": "findOneByCode",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the code column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "code": {
                    "name": "code",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByType": {
            "name": "findOneByType",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the type column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "type": {
                    "name": "type",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByByModule": {
            "name": "findOneByByModule",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the by_module column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "by_module": {
                    "name": "by_module",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByNative": {
            "name": "findOneByNative",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the native column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "native": {
                    "name": "native",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByActivate": {
            "name": "findOneByActivate",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the activate column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "activate": {
                    "name": "activate",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByBlock": {
            "name": "findOneByBlock",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the block column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "block": {
                    "name": "block",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPosition": {
            "name": "findOneByPosition",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the position column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "position": {
                    "name": "position",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCreatedAt": {
            "name": "findOneByCreatedAt",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByUpdatedAt": {
            "name": "findOneByUpdatedAt",
            "line": 85,
            "short_desc": "Return the first ChildHook filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildHook",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findById": {
            "name": "findById",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCode": {
            "name": "findByCode",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the code column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "code": {
                    "name": "code",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByType": {
            "name": "findByType",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the type column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "type": {
                    "name": "type",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByByModule": {
            "name": "findByByModule",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the by_module column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "by_module": {
                    "name": "by_module",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByNative": {
            "name": "findByNative",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the native column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "native": {
                    "name": "native",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByActivate": {
            "name": "findByActivate",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the activate column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "activate": {
                    "name": "activate",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByBlock": {
            "name": "findByBlock",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the block column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "block": {
                    "name": "block",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPosition": {
            "name": "findByPosition",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the position column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "position": {
                    "name": "position",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCreatedAt": {
            "name": "findByCreatedAt",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByUpdatedAt": {
            "name": "findByUpdatedAt",
            "line": 85,
            "short_desc": "Return ChildHook objects filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 85,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}