{
    "name": "Thelia\\Form\\FirewallForm",
    "line": 25,
    "short_desc": "Class FirewallForm",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Form"
            ]
        ],
        "author": [
            [
                "Benjamin",
                "Perche",
                "<bperche@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Form",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Form\/FirewallForm.php",
    "hash": "f229275bf0e6d11a1fb8f7c06f8d5af465fe8314",
    "parent": "Thelia\\Form\\BaseForm",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "Request": "Symfony\\Component\\HttpFoundation\\Request",
        "Translator": "Thelia\\Core\\Translation\\Translator",
        "ConfigQuery": "Thelia\\Model\\ConfigQuery",
        "FormFirewall": "Thelia\\Model\\FormFirewall",
        "FormFirewallQuery": "Thelia\\Model\\FormFirewallQuery"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "isFirewallOk": {
            "name": "isFirewallOk",
            "line": 35,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getConfigTime": {
            "name": "getConfigTime",
            "line": 80,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The time (in hours) to wait if the attempts have been exceeded",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getConfigAttempts": {
            "name": "getConfigAttempts",
            "line": 90,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of allowed attempts",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isFirewallActive": {
            "name": "isFirewallActive",
            "line": 95,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getWaitingTime": {
            "name": "getWaitingTime",
            "line": 100,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "DEFAULT_TIME_TO_WAIT": {
            "name": "DEFAULT_TIME_TO_WAIT",
            "line": 32,
            "short_desc": "Those values are for a \"normal\" security policy",
            "long_desc": "Time is in minutes"
        },
        "DEFAULT_ATTEMPTS": {
            "name": "DEFAULT_ATTEMPTS",
            "line": 33,
            "short_desc": "",
            "long_desc": ""
        }
    }
}