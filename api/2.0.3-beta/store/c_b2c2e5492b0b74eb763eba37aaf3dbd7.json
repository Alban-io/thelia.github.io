{
    "name": "Thelia\\Core\\Thelia",
    "line": 47,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": [

    ],
    "namespace": "Thelia\\Core",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Thelia.php",
    "hash": "7f6833f7db69a27f773d3f7b326d8bdb71a58db1",
    "parent": "Symfony\\Component\\HttpKernel\\Kernel",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ConnectionManagerSingle": "Propel\\Runtime\\Connection\\ConnectionManagerSingle",
        "ConnectionWrapper": "Propel\\Runtime\\Connection\\ConnectionWrapper",
        "Propel": "Propel\\Runtime\\Propel",
        "FileLocator": "Symfony\\Component\\Config\\FileLocator",
        "LoaderInterface": "Symfony\\Component\\Config\\Loader\\LoaderInterface",
        "ContainerBuilder": "Symfony\\Component\\DependencyInjection\\ContainerBuilder",
        "Definition": "Symfony\\Component\\DependencyInjection\\Definition",
        "ParameterBag": "Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag",
        "Reference": "Symfony\\Component\\DependencyInjection\\Reference",
        "Finder": "Symfony\\Component\\Finder\\Finder",
        "Kernel": "Symfony\\Component\\HttpKernel\\Kernel",
        "Yaml": "Symfony\\Component\\Yaml\\Yaml",
        "DatabaseConfiguration": "Thelia\\Config\\DatabaseConfiguration",
        "DefinePropel": "Thelia\\Config\\DefinePropel",
        "XmlFileLoader": "Thelia\\Core\\DependencyInjection\\Loader\\XmlFileLoader",
        "TheliaEvents": "Thelia\\Core\\Event\\TheliaEvents",
        "ParserInterface": "Thelia\\Core\\Template\\ParserInterface",
        "TemplateDefinition": "Thelia\\Core\\Template\\TemplateDefinition",
        "TemplateHelper": "Thelia\\Core\\Template\\TemplateHelper",
        "Tlog": "Thelia\\Log\\Tlog",
        "Module": "Thelia\\Model\\Module",
        "ModuleQuery": "Thelia\\Model\\ModuleQuery"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "init": {
            "name": "init",
            "line": 52,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "boot": {
            "name": "boot",
            "line": 83,
            "short_desc": "dispatch an event when application is boot",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCacheDir": {
            "name": "getCacheDir",
            "line": 335,
            "short_desc": "Gets the cache directory.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The cache directory",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getLogDir": {
            "name": "getLogDir",
            "line": 352,
            "short_desc": "Gets the log directory.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The log directory",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "registerBundles": {
            "name": "registerBundles",
            "line": 385,
            "short_desc": "return available bundle",
            "long_desc": "Part of Symfony\\Component\\HttpKernel\\KernelInterface",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "An array of bundle instances.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "registerContainerConfiguration": {
            "name": "registerContainerConfiguration",
            "line": 411,
            "short_desc": "Loads the container configuration",
            "long_desc": "part of Symfony\\Component\\HttpKernel\\KernelInterface",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "loader": {
                    "name": "loader",
                    "line": 411,
                    "short_desc": "A LoaderInterface instance",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\Config\\Loader\\LoaderInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LoaderInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": {
        "THELIA_VERSION": {
            "name": "THELIA_VERSION",
            "line": 50,
            "short_desc": "",
            "long_desc": ""
        }
    }
}