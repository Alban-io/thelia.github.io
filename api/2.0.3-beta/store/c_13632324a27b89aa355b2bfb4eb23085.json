{
    "name": "Thelia\\ImportExport\\Import\\ImportHandler",
    "line": 24,
    "short_desc": "Class ImportHandler",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\ImportExport"
            ]
        ],
        "author": [
            [
                "Benjamin",
                "Perche",
                "<bperche@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\ImportExport\\Import",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/ImportExport\/Import\/ImportHandler.php",
    "hash": "21d68857bd30eff63921b4440d261f3b09272013",
    "parent": "Thelia\\ImportExport\\AbstractHandler",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ContainerInterface": "Symfony\\Component\\DependencyInjection\\ContainerInterface",
        "FormatterData": "Thelia\\Core\\FileFormat\\Formatting\\FormatterData",
        "Translator": "Thelia\\Core\\Translation\\Translator",
        "AbstractHandler": "Thelia\\ImportExport\\AbstractHandler"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 31,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "container": {
                    "name": "container",
                    "line": 31,
                    "short_desc": "Dependency injection: load the container to be able to get parameters and services",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\DependencyInjection\\ContainerInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ContainerInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getImportedRows": {
            "name": "getImportedRows",
            "line": 38,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "retrieveFromFormatterData": {
            "name": "retrieveFromFormatterData",
            "line": 79,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "error messages The method does the import routine from a FormatterData",
            "tags": [

            ],
            "modifiers": "17",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "data": {
                    "name": "data",
                    "line": 79,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\FileFormat\\Formatting\\FormatterData",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FormatterData",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}