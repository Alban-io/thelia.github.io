{
    "name": "Thelia\\TaxEngine\\BaseTaxType",
    "line": 23,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": {
        "author": [
            [
                "Etienne",
                "Roudeix",
                "<eroudeix@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\TaxEngine",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/TaxEngine\/BaseTaxType.php",
    "hash": "16a38ae2b53f97fe0bacda4af5cf76ec4d1f575a",
    "parent": null,
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "TaxEngineException": "Thelia\\Exception\\TaxEngineException",
        "Product": "Thelia\\Model\\Product"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "pricePercentRetriever": {
            "name": "pricePercentRetriever",
            "line": 40,
            "short_desc": "For a price percent tax type, return the percentage (e.g.",
            "long_desc": "20 for 20%) of the product price\nto use in tax calculation.\n\nFor other tax types, this method shoud return 0.",
            "hint": [
                [
                    "Thelia\\TaxEngine\\number",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "fixAmountRetriever": {
            "name": "fixAmountRetriever",
            "line": 52,
            "short_desc": "For constant amount tax type, return the absolute amount to use in tax calculation.",
            "long_desc": "For other tax types, this method shoud return 0.",
            "hint": [
                [
                    "Thelia\\TaxEngine\\number",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "product": {
                    "name": "product",
                    "line": 52,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Product",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Product",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRequirementsDefinition": {
            "name": "getRequirementsDefinition",
            "line": 68,
            "short_desc": "Returns the requirements definition of this tax type.",
            "long_desc": "This is an array of\nTaxTypeRequirementDefinition, which defines the name and the type of\nthe requirements. Example :\n\narray(\n   'percent' => new FloatType()\n);",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "of TaxTypeRequirementDefinition",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getTitle": {
            "name": "getTitle",
            "line": 76,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\TaxEngine\\the",
                    false
                ]
            ],
            "hint_desc": "name of this tax type.",
            "tags": [

            ],
            "modifiers": "17",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "calculate": {
            "name": "calculate",
            "line": 78,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "product": {
                    "name": "product",
                    "line": 78,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Product",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Product",
                    "default": null,
                    "is_by_ref": false
                },
                "untaxedPrice": {
                    "name": "untaxedPrice",
                    "line": 78,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRequirements": {
            "name": "getRequirements",
            "line": 87,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "Return the requirements array.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "TaxEngineException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "loadRequirements": {
            "name": "loadRequirements",
            "line": 92,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "requirementsValues": {
                    "name": "requirementsValues",
                    "line": 92,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "setRequirement": {
            "name": "setRequirement",
            "line": 116,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 116,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "value": {
                    "name": "value",
                    "line": 116,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRequirement": {
            "name": "getRequirement",
            "line": 123,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 123,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}