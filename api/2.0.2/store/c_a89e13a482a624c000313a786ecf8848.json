{
    "name": "Thelia\\Model\\Base\\OrderAddressQuery",
    "line": 100,
    "short_desc": "Base class that represents a query for the 'order_address' table.",
    "long_desc": "",
    "hint": null,
    "tags": {
        "method": [
            [
                "ChildOrderAddressQuery",
                "orderById($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByCustomerTitleId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "customer_title_id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByCompany($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "company",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByFirstname($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "firstname",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByLastname($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "lastname",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByAddress1($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "address1",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByAddress2($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "address2",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByAddress3($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "address3",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByZipcode($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "zipcode",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByCity($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "city",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByPhone($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "phone",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByCountryId($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "country_id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByCreatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "orderByUpdatedAt($order",
                "=",
                "Criteria::ASC)",
                "Order",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupById()",
                "Group",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByCustomerTitleId()",
                "Group",
                "by",
                "the",
                "customer_title_id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByCompany()",
                "Group",
                "by",
                "the",
                "company",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByFirstname()",
                "Group",
                "by",
                "the",
                "firstname",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByLastname()",
                "Group",
                "by",
                "the",
                "lastname",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByAddress1()",
                "Group",
                "by",
                "the",
                "address1",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByAddress2()",
                "Group",
                "by",
                "the",
                "address2",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByAddress3()",
                "Group",
                "by",
                "the",
                "address3",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByZipcode()",
                "Group",
                "by",
                "the",
                "zipcode",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByCity()",
                "Group",
                "by",
                "the",
                "city",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByPhone()",
                "Group",
                "by",
                "the",
                "phone",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByCountryId()",
                "Group",
                "by",
                "the",
                "country_id",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByCreatedAt()",
                "Group",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "groupByUpdatedAt()",
                "Group",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "ChildOrderAddressQuery",
                "leftJoin($relation)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderAddressQuery",
                "rightJoin($relation)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderAddressQuery",
                "innerJoin($relation)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query"
            ],
            [
                "ChildOrderAddressQuery",
                "leftJoinOrderRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddressQuery",
                "rightJoinOrderRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddressQuery",
                "innerJoinOrderRelatedByInvoiceOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByInvoiceOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddressQuery",
                "leftJoinOrderRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "LEFT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddressQuery",
                "rightJoinOrderRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "RIGHT",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddressQuery",
                "innerJoinOrderRelatedByDeliveryOrderAddressId($relationAlias",
                "=",
                "null)",
                "Adds",
                "a",
                "INNER",
                "JOIN",
                "clause",
                "to",
                "the",
                "query",
                "using",
                "the",
                "OrderRelatedByDeliveryOrderAddressId",
                "relation"
            ],
            [
                "ChildOrderAddress",
                "findOne(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "matching",
                "the",
                "query"
            ],
            [
                "ChildOrderAddress",
                "findOneOrCreate(ConnectionInterface",
                "$con",
                "=",
                "null)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "matching",
                "the",
                "query,",
                "or",
                "a",
                "new",
                "ChildOrderAddress",
                "object",
                "populated",
                "from",
                "the",
                "query",
                "conditions",
                "when",
                "no",
                "match",
                "is",
                "found"
            ],
            [
                "ChildOrderAddress",
                "findOneById(int",
                "$id)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByCustomerTitleId(int",
                "$customer_title_id)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "customer_title_id",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByCompany(string",
                "$company)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "company",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByFirstname(string",
                "$firstname)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "firstname",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByLastname(string",
                "$lastname)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "lastname",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByAddress1(string",
                "$address1)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "address1",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByAddress2(string",
                "$address2)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "address2",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByAddress3(string",
                "$address3)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "address3",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByZipcode(string",
                "$zipcode)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "zipcode",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByCity(string",
                "$city)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "city",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByPhone(string",
                "$phone)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "phone",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByCountryId(int",
                "$country_id)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "country_id",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByCreatedAt(string",
                "$created_at)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "ChildOrderAddress",
                "findOneByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "the",
                "first",
                "ChildOrderAddress",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ],
            [
                "array",
                "findById(int",
                "$id)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "id",
                "column"
            ],
            [
                "array",
                "findByCustomerTitleId(int",
                "$customer_title_id)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "customer_title_id",
                "column"
            ],
            [
                "array",
                "findByCompany(string",
                "$company)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "company",
                "column"
            ],
            [
                "array",
                "findByFirstname(string",
                "$firstname)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "firstname",
                "column"
            ],
            [
                "array",
                "findByLastname(string",
                "$lastname)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "lastname",
                "column"
            ],
            [
                "array",
                "findByAddress1(string",
                "$address1)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "address1",
                "column"
            ],
            [
                "array",
                "findByAddress2(string",
                "$address2)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "address2",
                "column"
            ],
            [
                "array",
                "findByAddress3(string",
                "$address3)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "address3",
                "column"
            ],
            [
                "array",
                "findByZipcode(string",
                "$zipcode)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "zipcode",
                "column"
            ],
            [
                "array",
                "findByCity(string",
                "$city)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "city",
                "column"
            ],
            [
                "array",
                "findByPhone(string",
                "$phone)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "phone",
                "column"
            ],
            [
                "array",
                "findByCountryId(int",
                "$country_id)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "country_id",
                "column"
            ],
            [
                "array",
                "findByCreatedAt(string",
                "$created_at)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "created_at",
                "column"
            ],
            [
                "array",
                "findByUpdatedAt(string",
                "$updated_at)",
                "Return",
                "ChildOrderAddress",
                "objects",
                "filtered",
                "by",
                "the",
                "updated_at",
                "column"
            ]
        ]
    },
    "namespace": "Thelia\\Model\\Base",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Model\/Base\/OrderAddressQuery.php",
    "hash": "2118687e18209117fa528bf8563f1e45a1b58278",
    "parent": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Exception": "Exception",
        "PDO": "PDO",
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "ModelJoin": "Propel\\Runtime\\ActiveQuery\\ModelJoin",
        "Collection": "Propel\\Runtime\\Collection\\Collection",
        "ObjectCollection": "Propel\\Runtime\\Collection\\ObjectCollection",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "ChildOrderAddress": "Thelia\\Model\\OrderAddress",
        "ChildOrderAddressQuery": "Thelia\\Model\\OrderAddressQuery",
        "OrderAddressTableMap": "Thelia\\Model\\Map\\OrderAddressTableMap"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 110,
            "short_desc": "Initializes internal state of \\Thelia\\Model\\Base\\OrderAddressQuery object.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dbName": {
                    "name": "dbName",
                    "line": 110,
                    "short_desc": "The database name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'thelia'",
                    "is_by_ref": false
                },
                "modelName": {
                    "name": "modelName",
                    "line": 110,
                    "short_desc": "The phpName of a model, e.g. 'Book'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "'\\\\Thelia\\\\Model\\\\OrderAddress'",
                    "is_by_ref": false
                },
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 110,
                    "short_desc": "The alias for the model in this query, e.g. 'b'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 123,
            "short_desc": "Returns a new ChildOrderAddressQuery object.",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "modelAlias": {
                    "name": "modelAlias",
                    "line": 123,
                    "short_desc": "The alias of a model in the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "criteria": {
                    "name": "criteria",
                    "line": 123,
                    "short_desc": "Optional Criteria to build the query from",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPk": {
            "name": "findPk",
            "line": 153,
            "short_desc": "Find object by primary key.",
            "long_desc": "Propel uses the instance pool to skip the database if the object exists.\nGo fast if the query is untouched.\n\n<code>\n$obj  = $c->findPk(12, $con);\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddress",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the result, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 153,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 153,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "findPks": {
            "name": "findPks",
            "line": 235,
            "short_desc": "Find objects by primary key <code> $objs = $c->findPks(array(12, 56, 832), $con); <\/code>",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\Collection\\ObjectCollection",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "the list of results, formatted by the current formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 235,
                    "short_desc": "Primary keys to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 235,
                    "short_desc": "an optional connection object",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKey": {
            "name": "filterByPrimaryKey",
            "line": 256,
            "short_desc": "Filter the query by primary key",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 256,
                    "short_desc": "Primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterByPrimaryKeys": {
            "name": "filterByPrimaryKeys",
            "line": 269,
            "short_desc": "Filter the query by a list of primary keys",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 269,
                    "short_desc": "The list of primary key to use for the query",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "filterById": {
            "name": "filterById",
            "line": 293,
            "short_desc": "Filter the query on the id column",
            "long_desc": "Example usage:\n<code>\n$query->filterById(1234); \/\/ WHERE id = 1234\n$query->filterById(array(12, 34)); \/\/ WHERE id IN (12, 34)\n$query->filterById(array('min' => 12)); \/\/ WHERE id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 293,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 293,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCustomerTitleId": {
            "name": "filterByCustomerTitleId",
            "line": 334,
            "short_desc": "Filter the query on the customer_title_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCustomerTitleId(1234); \/\/ WHERE customer_title_id = 1234\n$query->filterByCustomerTitleId(array(12, 34)); \/\/ WHERE customer_title_id IN (12, 34)\n$query->filterByCustomerTitleId(array('min' => 12)); \/\/ WHERE customer_title_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customerTitleId": {
                    "name": "customerTitleId",
                    "line": 334,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 334,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCompany": {
            "name": "filterByCompany",
            "line": 372,
            "short_desc": "Filter the query on the company column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCompany('fooValue');   \/\/ WHERE company = 'fooValue'\n$query->filterByCompany('%fooValue%'); \/\/ WHERE company LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "company": {
                    "name": "company",
                    "line": 372,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 372,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByFirstname": {
            "name": "filterByFirstname",
            "line": 401,
            "short_desc": "Filter the query on the firstname column",
            "long_desc": "Example usage:\n<code>\n$query->filterByFirstname('fooValue');   \/\/ WHERE firstname = 'fooValue'\n$query->filterByFirstname('%fooValue%'); \/\/ WHERE firstname LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "firstname": {
                    "name": "firstname",
                    "line": 401,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 401,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByLastname": {
            "name": "filterByLastname",
            "line": 430,
            "short_desc": "Filter the query on the lastname column",
            "long_desc": "Example usage:\n<code>\n$query->filterByLastname('fooValue');   \/\/ WHERE lastname = 'fooValue'\n$query->filterByLastname('%fooValue%'); \/\/ WHERE lastname LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lastname": {
                    "name": "lastname",
                    "line": 430,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 430,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByAddress1": {
            "name": "filterByAddress1",
            "line": 459,
            "short_desc": "Filter the query on the address1 column",
            "long_desc": "Example usage:\n<code>\n$query->filterByAddress1('fooValue');   \/\/ WHERE address1 = 'fooValue'\n$query->filterByAddress1('%fooValue%'); \/\/ WHERE address1 LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address1": {
                    "name": "address1",
                    "line": 459,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 459,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByAddress2": {
            "name": "filterByAddress2",
            "line": 488,
            "short_desc": "Filter the query on the address2 column",
            "long_desc": "Example usage:\n<code>\n$query->filterByAddress2('fooValue');   \/\/ WHERE address2 = 'fooValue'\n$query->filterByAddress2('%fooValue%'); \/\/ WHERE address2 LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address2": {
                    "name": "address2",
                    "line": 488,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 488,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByAddress3": {
            "name": "filterByAddress3",
            "line": 517,
            "short_desc": "Filter the query on the address3 column",
            "long_desc": "Example usage:\n<code>\n$query->filterByAddress3('fooValue');   \/\/ WHERE address3 = 'fooValue'\n$query->filterByAddress3('%fooValue%'); \/\/ WHERE address3 LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address3": {
                    "name": "address3",
                    "line": 517,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 517,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByZipcode": {
            "name": "filterByZipcode",
            "line": 546,
            "short_desc": "Filter the query on the zipcode column",
            "long_desc": "Example usage:\n<code>\n$query->filterByZipcode('fooValue');   \/\/ WHERE zipcode = 'fooValue'\n$query->filterByZipcode('%fooValue%'); \/\/ WHERE zipcode LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "zipcode": {
                    "name": "zipcode",
                    "line": 546,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 546,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCity": {
            "name": "filterByCity",
            "line": 575,
            "short_desc": "Filter the query on the city column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCity('fooValue');   \/\/ WHERE city = 'fooValue'\n$query->filterByCity('%fooValue%'); \/\/ WHERE city LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "city": {
                    "name": "city",
                    "line": 575,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 575,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByPhone": {
            "name": "filterByPhone",
            "line": 604,
            "short_desc": "Filter the query on the phone column",
            "long_desc": "Example usage:\n<code>\n$query->filterByPhone('fooValue');   \/\/ WHERE phone = 'fooValue'\n$query->filterByPhone('%fooValue%'); \/\/ WHERE phone LIKE '%fooValue%'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "phone": {
                    "name": "phone",
                    "line": 604,
                    "short_desc": "The value to use as filter. Accepts wildcards (* and % trigger a LIKE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 604,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCountryId": {
            "name": "filterByCountryId",
            "line": 636,
            "short_desc": "Filter the query on the country_id column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCountryId(1234); \/\/ WHERE country_id = 1234\n$query->filterByCountryId(array(12, 34)); \/\/ WHERE country_id IN (12, 34)\n$query->filterByCountryId(array('min' => 12)); \/\/ WHERE country_id > 12\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "countryId": {
                    "name": "countryId",
                    "line": 636,
                    "short_desc": "The value to use as filter. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 636,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByCreatedAt": {
            "name": "filterByCreatedAt",
            "line": 679,
            "short_desc": "Filter the query on the created_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByCreatedAt('2011-03-14'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt('now'); \/\/ WHERE created_at = '2011-03-14'\n$query->filterByCreatedAt(array('max' => 'yesterday')); \/\/ WHERE created_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "createdAt": {
                    "name": "createdAt",
                    "line": 679,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 679,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByUpdatedAt": {
            "name": "filterByUpdatedAt",
            "line": 722,
            "short_desc": "Filter the query on the updated_at column",
            "long_desc": "Example usage:\n<code>\n$query->filterByUpdatedAt('2011-03-14'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt('now'); \/\/ WHERE updated_at = '2011-03-14'\n$query->filterByUpdatedAt(array('max' => 'yesterday')); \/\/ WHERE updated_at > '2011-03-13'\n<\/code>",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updatedAt": {
                    "name": "updatedAt",
                    "line": 722,
                    "short_desc": "The value to use as filter. Values can be integers (unix timestamps), DateTime objects, or strings. Empty strings are treated as NULL. Use scalar values for equality. Use array values for in_array() equivalent. Use associative array('min' => $minValue, 'max' => $maxValue) for intervals.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 722,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderRelatedByInvoiceOrderAddressId": {
            "name": "filterByOrderRelatedByInvoiceOrderAddressId",
            "line": 753,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Order object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 753,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Order",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 753,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderRelatedByInvoiceOrderAddressId": {
            "name": "joinOrderRelatedByInvoiceOrderAddressId",
            "line": 776,
            "short_desc": "Adds a JOIN clause to the query using the OrderRelatedByInvoiceOrderAddressId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 776,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 776,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderRelatedByInvoiceOrderAddressIdQuery": {
            "name": "useOrderRelatedByInvoiceOrderAddressIdQuery",
            "line": 811,
            "short_desc": "Use the OrderRelatedByInvoiceOrderAddressId relation Order object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 811,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 811,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "filterByOrderRelatedByDeliveryOrderAddressId": {
            "name": "filterByOrderRelatedByDeliveryOrderAddressId",
            "line": 826,
            "short_desc": "Filter the query by a related \\Thelia\\Model\\Order object",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 826,
                    "short_desc": "the related object to use as filter",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\Order",
                            false
                        ],
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "comparison": {
                    "name": "comparison",
                    "line": 826,
                    "short_desc": "Operator to use for the column comparison, defaults to Criteria::EQUAL",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "joinOrderRelatedByDeliveryOrderAddressId": {
            "name": "joinOrderRelatedByDeliveryOrderAddressId",
            "line": 849,
            "short_desc": "Adds a JOIN clause to the query using the OrderRelatedByDeliveryOrderAddressId relation",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 849,
                    "short_desc": "optional alias for the relation",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 849,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "useOrderRelatedByDeliveryOrderAddressIdQuery": {
            "name": "useOrderRelatedByDeliveryOrderAddressIdQuery",
            "line": 884,
            "short_desc": "Use the OrderRelatedByDeliveryOrderAddressId relation Order object",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\OrderQuery",
                    false
                ]
            ],
            "hint_desc": "A secondary query class using the current class as primary query",
            "tags": {
                "see": [
                    [
                        "useQuery()"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 884,
                    "short_desc": "optional alias for the relation, to be used as main alias in the secondary query",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "joinType": {
                    "name": "joinType",
                    "line": 884,
                    "short_desc": "Accepted values are null, 'left join', 'right join', 'inner join'",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "Criteria::INNER_JOIN",
                    "is_by_ref": false
                }
            }
        },
        "prune": {
            "name": "prune",
            "line": 898,
            "short_desc": "Exclude object from result",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "orderAddress": {
                    "name": "orderAddress",
                    "line": 898,
                    "short_desc": "Object to remove from the list of results",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\OrderAddress",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 913,
            "short_desc": "Deletes all rows from the order_address table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 913,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 950,
            "short_desc": "Performs a DELETE on the database, given a ChildOrderAddress or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [
                "\"2\" @param tags are defined by \"1\" are expected"
            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 950,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "recentlyUpdated": {
            "name": "recentlyUpdated",
            "line": 991,
            "short_desc": "Filter by the latest updated",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 991,
                    "short_desc": "Maximum age of the latest update in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "recentlyCreated": {
            "name": "recentlyCreated",
            "line": 1003,
            "short_desc": "Filter by the latest created",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "nbDays": {
                    "name": "nbDays",
                    "line": 1003,
                    "short_desc": "Maximum age of in days",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "7",
                    "is_by_ref": false
                }
            }
        },
        "lastUpdatedFirst": {
            "name": "lastUpdatedFirst",
            "line": 1013,
            "short_desc": "Order by update date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstUpdatedFirst": {
            "name": "firstUpdatedFirst",
            "line": 1023,
            "short_desc": "Order by update date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "lastCreatedFirst": {
            "name": "lastCreatedFirst",
            "line": 1033,
            "short_desc": "Order by create date desc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "firstCreatedFirst": {
            "name": "firstCreatedFirst",
            "line": 1043,
            "short_desc": "Order by create date asc",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\OrderAddressQuery",
                    false
                ]
            ],
            "hint_desc": "The current query, for fluid interface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "orderById": {
            "name": "orderById",
            "line": 100,
            "short_desc": "Order by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCustomerTitleId": {
            "name": "orderByCustomerTitleId",
            "line": 100,
            "short_desc": "Order by the customer_title_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCompany": {
            "name": "orderByCompany",
            "line": 100,
            "short_desc": "Order by the company column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByFirstname": {
            "name": "orderByFirstname",
            "line": 100,
            "short_desc": "Order by the firstname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByLastname": {
            "name": "orderByLastname",
            "line": 100,
            "short_desc": "Order by the lastname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByAddress1": {
            "name": "orderByAddress1",
            "line": 100,
            "short_desc": "Order by the address1 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByAddress2": {
            "name": "orderByAddress2",
            "line": 100,
            "short_desc": "Order by the address2 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByAddress3": {
            "name": "orderByAddress3",
            "line": 100,
            "short_desc": "Order by the address3 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByZipcode": {
            "name": "orderByZipcode",
            "line": 100,
            "short_desc": "Order by the zipcode column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCity": {
            "name": "orderByCity",
            "line": 100,
            "short_desc": "Order by the city column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByPhone": {
            "name": "orderByPhone",
            "line": 100,
            "short_desc": "Order by the phone column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCountryId": {
            "name": "orderByCountryId",
            "line": 100,
            "short_desc": "Order by the country_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByCreatedAt": {
            "name": "orderByCreatedAt",
            "line": 100,
            "short_desc": "Order by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "orderByUpdatedAt": {
            "name": "orderByUpdatedAt",
            "line": 100,
            "short_desc": "Order by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "Criteria::ASC",
                    "is_by_ref": null
                }
            }
        },
        "groupById": {
            "name": "groupById",
            "line": 100,
            "short_desc": "Group by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCustomerTitleId": {
            "name": "groupByCustomerTitleId",
            "line": 100,
            "short_desc": "Group by the customer_title_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCompany": {
            "name": "groupByCompany",
            "line": 100,
            "short_desc": "Group by the company column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByFirstname": {
            "name": "groupByFirstname",
            "line": 100,
            "short_desc": "Group by the firstname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByLastname": {
            "name": "groupByLastname",
            "line": 100,
            "short_desc": "Group by the lastname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByAddress1": {
            "name": "groupByAddress1",
            "line": 100,
            "short_desc": "Group by the address1 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByAddress2": {
            "name": "groupByAddress2",
            "line": 100,
            "short_desc": "Group by the address2 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByAddress3": {
            "name": "groupByAddress3",
            "line": 100,
            "short_desc": "Group by the address3 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByZipcode": {
            "name": "groupByZipcode",
            "line": 100,
            "short_desc": "Group by the zipcode column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCity": {
            "name": "groupByCity",
            "line": 100,
            "short_desc": "Group by the city column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByPhone": {
            "name": "groupByPhone",
            "line": 100,
            "short_desc": "Group by the phone column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCountryId": {
            "name": "groupByCountryId",
            "line": 100,
            "short_desc": "Group by the country_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByCreatedAt": {
            "name": "groupByCreatedAt",
            "line": 100,
            "short_desc": "Group by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "groupByUpdatedAt": {
            "name": "groupByUpdatedAt",
            "line": 100,
            "short_desc": "Group by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "leftJoin": {
            "name": "leftJoin",
            "line": 100,
            "short_desc": "Adds a LEFT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "rightJoin": {
            "name": "rightJoin",
            "line": 100,
            "short_desc": "Adds a RIGHT JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "innerJoin": {
            "name": "innerJoin",
            "line": 100,
            "short_desc": "Adds a INNER JOIN clause to the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relation": {
                    "name": "relation",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderRelatedByInvoiceOrderAddressId": {
            "name": "leftJoinOrderRelatedByInvoiceOrderAddressId",
            "line": 100,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderRelatedByInvoiceOrderAddressId": {
            "name": "rightJoinOrderRelatedByInvoiceOrderAddressId",
            "line": 100,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderRelatedByInvoiceOrderAddressId": {
            "name": "innerJoinOrderRelatedByInvoiceOrderAddressId",
            "line": 100,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderRelatedByInvoiceOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "leftJoinOrderRelatedByDeliveryOrderAddressId": {
            "name": "leftJoinOrderRelatedByDeliveryOrderAddressId",
            "line": 100,
            "short_desc": "Adds a LEFT JOIN clause to the query using the OrderRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "rightJoinOrderRelatedByDeliveryOrderAddressId": {
            "name": "rightJoinOrderRelatedByDeliveryOrderAddressId",
            "line": 100,
            "short_desc": "Adds a RIGHT JOIN clause to the query using the OrderRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "innerJoinOrderRelatedByDeliveryOrderAddressId": {
            "name": "innerJoinOrderRelatedByDeliveryOrderAddressId",
            "line": 100,
            "short_desc": "Adds a INNER JOIN clause to the query using the OrderRelatedByDeliveryOrderAddressId relation",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddressQuery",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "relationAlias": {
                    "name": "relationAlias",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOne": {
            "name": "findOne",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress matching the query",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneOrCreate": {
            "name": "findOneOrCreate",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress matching the query, or a new ChildOrderAddress object populated from the query conditions when no match is found",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "ConnectionInterface ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": "null",
                    "is_by_ref": null
                }
            }
        },
        "findOneById": {
            "name": "findOneById",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCustomerTitleId": {
            "name": "findOneByCustomerTitleId",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the customer_title_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customer_title_id": {
                    "name": "customer_title_id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCompany": {
            "name": "findOneByCompany",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the company column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "company": {
                    "name": "company",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByFirstname": {
            "name": "findOneByFirstname",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the firstname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "firstname": {
                    "name": "firstname",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByLastname": {
            "name": "findOneByLastname",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the lastname column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lastname": {
                    "name": "lastname",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByAddress1": {
            "name": "findOneByAddress1",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the address1 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address1": {
                    "name": "address1",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByAddress2": {
            "name": "findOneByAddress2",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the address2 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address2": {
                    "name": "address2",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByAddress3": {
            "name": "findOneByAddress3",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the address3 column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address3": {
                    "name": "address3",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByZipcode": {
            "name": "findOneByZipcode",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the zipcode column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "zipcode": {
                    "name": "zipcode",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCity": {
            "name": "findOneByCity",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the city column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "city": {
                    "name": "city",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByPhone": {
            "name": "findOneByPhone",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the phone column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "phone": {
                    "name": "phone",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCountryId": {
            "name": "findOneByCountryId",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the country_id column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "country_id": {
                    "name": "country_id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByCreatedAt": {
            "name": "findOneByCreatedAt",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findOneByUpdatedAt": {
            "name": "findOneByUpdatedAt",
            "line": 100,
            "short_desc": "Return the first ChildOrderAddress filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "ChildOrderAddress",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findById": {
            "name": "findById",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "id": {
                    "name": "id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCustomerTitleId": {
            "name": "findByCustomerTitleId",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the customer_title_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "customer_title_id": {
                    "name": "customer_title_id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCompany": {
            "name": "findByCompany",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the company column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "company": {
                    "name": "company",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByFirstname": {
            "name": "findByFirstname",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the firstname column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "firstname": {
                    "name": "firstname",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByLastname": {
            "name": "findByLastname",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the lastname column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lastname": {
                    "name": "lastname",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByAddress1": {
            "name": "findByAddress1",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the address1 column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address1": {
                    "name": "address1",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByAddress2": {
            "name": "findByAddress2",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the address2 column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address2": {
                    "name": "address2",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByAddress3": {
            "name": "findByAddress3",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the address3 column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "address3": {
                    "name": "address3",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByZipcode": {
            "name": "findByZipcode",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the zipcode column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "zipcode": {
                    "name": "zipcode",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCity": {
            "name": "findByCity",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the city column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "city": {
                    "name": "city",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByPhone": {
            "name": "findByPhone",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the phone column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "phone": {
                    "name": "phone",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCountryId": {
            "name": "findByCountryId",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the country_id column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "country_id": {
                    "name": "country_id",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "int ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByCreatedAt": {
            "name": "findByCreatedAt",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the created_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "created_at": {
                    "name": "created_at",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        },
        "findByUpdatedAt": {
            "name": "findByUpdatedAt",
            "line": 100,
            "short_desc": "Return ChildOrderAddress objects filtered by the updated_at column",
            "long_desc": null,
            "hint": [
                [
                    "array",
                    null
                ]
            ],
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": null,
            "is_by_ref": null,
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "updated_at": {
                    "name": "updated_at",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "string ",
                            null
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": null,
                    "default": null,
                    "is_by_ref": null
                }
            }
        }
    },
    "constants": [

    ]
}