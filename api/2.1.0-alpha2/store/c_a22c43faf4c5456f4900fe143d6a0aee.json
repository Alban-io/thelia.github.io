{
    "name": "Thelia\\Core\\Event\\Hook\\HookRenderEvent",
    "line": 22,
    "short_desc": "HookRenderEvent is used by the hook template engine plugin function.",
    "long_desc": "Class HookRenderEvent",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\Event\\Hook"
            ]
        ],
        "author": [
            [
                "Julien",
                "Chans\u00e9aume",
                "<jchanseaume@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\Event\\Hook",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Event\/Hook\/HookRenderEvent.php",
    "hash": "b62d8f755034ae8949d8ac9529249e77010e86ca",
    "parent": "Thelia\\Core\\Event\\Hook\\BaseHookRenderEvent",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": [

    ],
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 27,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "code": {
                    "name": "code",
                    "line": 27,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "arguments": {
                    "name": "arguments",
                    "line": 27,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": "array()",
                    "is_by_ref": false
                }
            }
        },
        "add": {
            "name": "add",
            "line": 39,
            "short_desc": "Add a new fragment",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\Event\\Hook\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "content": {
                    "name": "content",
                    "line": 39,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "get": {
            "name": "get",
            "line": 51,
            "short_desc": "Get an array of all the fragments",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "dump": {
            "name": "dump",
            "line": 64,
            "short_desc": "Concatenates all fragments in a string.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "the concatenate string",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "glue": {
                    "name": "glue",
                    "line": 64,
                    "short_desc": "the glue between fragments",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "''",
                    "is_by_ref": false
                },
                "before": {
                    "name": "before",
                    "line": 64,
                    "short_desc": "the text before the concatenated string",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "''",
                    "is_by_ref": false
                },
                "after": {
                    "name": "after",
                    "line": 64,
                    "short_desc": "the text after the concatenated string",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "''",
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}