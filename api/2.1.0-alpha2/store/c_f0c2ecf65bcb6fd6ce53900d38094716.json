{
    "name": "Thelia\\Core\\Routing\\RewritingRouter",
    "line": 36,
    "short_desc": "Class RewritingRouter",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\Routing"
            ]
        ],
        "author": [
            [
                "Manuel",
                "Raynaud",
                "<manu@thelia.net>"
            ],
            [
                "Etienne",
                "Roudeix",
                "<eroudeix@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\Routing",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Routing\/RewritingRouter.php",
    "hash": "3a2516f976805a9a6710c61b089a576af77ed944",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Request": "Symfony\\Component\\HttpFoundation\\Request",
        "InvalidParameterException": "Symfony\\Component\\Routing\\Exception\\InvalidParameterException",
        "MethodNotAllowedException": "Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException",
        "MissingMandatoryParametersException": "Symfony\\Component\\Routing\\Exception\\MissingMandatoryParametersException",
        "ResourceNotFoundException": "Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException",
        "RouteNotFoundException": "Symfony\\Component\\Routing\\Exception\\RouteNotFoundException",
        "RequestMatcherInterface": "Symfony\\Component\\Routing\\Matcher\\RequestMatcherInterface",
        "RequestContext": "Symfony\\Component\\Routing\\RequestContext",
        "RouteCollection": "Symfony\\Component\\Routing\\RouteCollection",
        "RouterInterface": "Symfony\\Component\\Routing\\RouterInterface",
        "UrlRewritingException": "Thelia\\Exception\\UrlRewritingException",
        "ConfigQuery": "Thelia\\Model\\ConfigQuery",
        "Redirect": "Thelia\\Tools\\Redirect",
        "URL": "Thelia\\Tools\\URL"
    },
    "errors": [

    ],
    "interfaces": {
        "Symfony\\Component\\Routing\\RouterInterface": "Symfony\\Component\\Routing\\RouterInterface",
        "Symfony\\Component\\Routing\\Matcher\\RequestMatcherInterface": "Symfony\\Component\\Routing\\Matcher\\RequestMatcherInterface"
    },
    "properties": [

    ],
    "methods": {
        "setContext": {
            "name": "setContext",
            "line": 55,
            "short_desc": "Sets the request context.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "context": {
                    "name": "context",
                    "line": 55,
                    "short_desc": "The context",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\Routing\\RequestContext",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "RequestContext",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getContext": {
            "name": "getContext",
            "line": 68,
            "short_desc": "Gets the request context.",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\Routing\\RequestContext",
                    false
                ]
            ],
            "hint_desc": "The context",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setOption": {
            "name": "setOption",
            "line": 74,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 74,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "value": {
                    "name": "value",
                    "line": 74,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRouteCollection": {
            "name": "getRouteCollection",
            "line": 84,
            "short_desc": "Gets the RouteCollection instance associated with this Router.",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\Routing\\RouteCollection",
                    false
                ]
            ],
            "hint_desc": "A RouteCollection instance",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "generate": {
            "name": "generate",
            "line": 117,
            "short_desc": "Generates a URL or path for a specific route based on the given parameters.",
            "long_desc": "Parameters that reference placeholders in the route pattern will substitute them in the\npath or host. Extra params are added as query string to the URL.\n\nWhen the passed reference type cannot be generated for the route because it requires a different\nhost or scheme than the current one, the method will return a more comprehensive reference\nthat includes the required params. For example, when you call this method with $referenceType = ABSOLUTE_PATH\nbut the route requires the https scheme whereas the current scheme is http, it will instead return an\nABSOLUTE_URL with the https scheme and the current host. This makes sure the generated URL matches\nthe route in any case.\n\nIf there is no route with the given name, the generator must throw the RouteNotFoundException.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The generated URL",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "RouteNotFoundException",
                    "If the named route doesn't exist"
                ],
                [
                    "MissingMandatoryParametersException",
                    "When some parameters are missing that are mandatory for the route"
                ],
                [
                    "InvalidParameterException",
                    "When a parameter value for a placeholder is not correct because it does not match the requirement"
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 117,
                    "short_desc": "The name of the route",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "parameters": {
                    "name": "parameters",
                    "line": 117,
                    "short_desc": "An array of parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "referenceType": {
                    "name": "referenceType",
                    "line": 117,
                    "short_desc": "The type of reference to be generated (one of the constants)",
                    "long_desc": null,
                    "hint": [
                        [
                            "Boolean",
                            false
                        ],
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "self::ABSOLUTE_PATH",
                    "is_by_ref": false
                }
            }
        },
        "match": {
            "name": "match",
            "line": 137,
            "short_desc": "Tries to match a URL path with a set of routes.",
            "long_desc": "If the matcher can not find information, it must throw one of the exceptions documented\nbelow.",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "An array of parameters",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "ResourceNotFoundException",
                    "If the resource could not be found"
                ],
                [
                    "MethodNotAllowedException",
                    "If the resource was found but the request method is not allowed"
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "pathinfo": {
                    "name": "pathinfo",
                    "line": 137,
                    "short_desc": "The path info to be parsed (raw format, i.e. not urldecoded)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "matchRequest": {
            "name": "matchRequest",
            "line": 155,
            "short_desc": "Tries to match a request with a set of routes.",
            "long_desc": "If the matcher can not find information, it must throw one of the exceptions documented\nbelow.",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "An array of parameters",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Exception|\\Thelia\\Exception\\UrlRewritingException",
                    ""
                ],
                [
                    "\\Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 155,
                    "short_desc": "The request to match",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\HttpFoundation\\Request",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Request",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}