{
    "name": "Thelia\\Model\\Map\\CustomerVersionTableMap",
    "line": 29,
    "short_desc": "This class defines the structure of the 'customer_version' table.",
    "long_desc": "This map class is used by Propel to do runtime db structure discovery.\nFor example, the createSelectSql() method checks the type of a given column used in an\nORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive\n(i.e. if it's a text column type).",
    "hint": null,
    "tags": [

    ],
    "namespace": "Thelia\\Model\\Map",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Model\/Map\/CustomerVersionTableMap.php",
    "hash": "9afc55014db168327ee0a2b77600fb6da668ba95",
    "parent": "Propel\\Runtime\\Map\\TableMap",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Propel": "Propel\\Runtime\\Propel",
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "InstancePoolTrait": "Propel\\Runtime\\ActiveQuery\\InstancePoolTrait",
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "DataFetcherInterface": "Propel\\Runtime\\DataFetcher\\DataFetcherInterface",
        "PropelException": "Propel\\Runtime\\Exception\\PropelException",
        "RelationMap": "Propel\\Runtime\\Map\\RelationMap",
        "TableMap": "Propel\\Runtime\\Map\\TableMap",
        "TableMapTrait": "Propel\\Runtime\\Map\\TableMapTrait",
        "CustomerVersion": "Thelia\\Model\\CustomerVersion",
        "CustomerVersionQuery": "Thelia\\Model\\CustomerVersionQuery"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "initialize": {
            "name": "initialize",
            "line": 220,
            "short_desc": "Initialize the table attributes and columns Relations are not initialized by this method since they are lazy loaded",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "buildRelations": {
            "name": "buildRelations",
            "line": 255,
            "short_desc": "Build the RelationMap objects for this table relationships",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "addInstanceToPool": {
            "name": "addInstanceToPool",
            "line": 271,
            "short_desc": "Adds an object to the instance pool.",
            "long_desc": "Propel keeps cached copies of objects in an instance pool when they are retrieved\nfrom the database. In some cases you may need to explicitly add objects\nto the cache in order to ensure that the same objects are always returned by find*()\nand findPk*() calls.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "obj": {
                    "name": "obj",
                    "line": 271,
                    "short_desc": "A \\Thelia\\Model\\CustomerVersion object.",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Thelia\\Model\\CustomerVersion",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "key": {
                    "name": "key",
                    "line": 271,
                    "short_desc": "(optional) key to use for instance map (for performance boost if key was already calculated externally).",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "removeInstanceFromPool": {
            "name": "removeInstanceFromPool",
            "line": 291,
            "short_desc": "Removes an object from the instance pool.",
            "long_desc": "Propel keeps cached copies of objects in an instance pool when they are retrieved\nfrom the database.  In some cases -- especially when you override doDelete\nmethods in your stub classes -- you may need to explicitly remove objects\nfrom the cache in order to prevent returning objects that no longer exist.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "value": {
                    "name": "value",
                    "line": 291,
                    "short_desc": "A \\Thelia\\Model\\CustomerVersion object or a primary key value.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getPrimaryKeyHashFromRow": {
            "name": "getPrimaryKeyHashFromRow",
            "line": 324,
            "short_desc": "Retrieves a string version of the primary key from the DB resultset row that can be used to uniquely identify a row in this table.",
            "long_desc": "For tables with a single-column primary key, that simple pkey value will be returned.  For tables with\na multi-column primary key, a serialize()d version of the primary key will be returned.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "row": {
                    "name": "row",
                    "line": 324,
                    "short_desc": "resultset row.",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "offset": {
                    "name": "offset",
                    "line": 324,
                    "short_desc": "The 0-based offset for reading from the resultset row.",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "0",
                    "is_by_ref": false
                },
                "indexType": {
                    "name": "indexType",
                    "line": 324,
                    "short_desc": "One of the class type constants TableMap::TYPE_PHPNAME, TableMap::TYPE_STUDLYPHPNAME TableMap::TYPE_COLNAME, TableMap::TYPE_FIELDNAME, TableMap::TYPE_NUM",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "TableMap::TYPE_NUM",
                    "is_by_ref": false
                }
            }
        },
        "getPrimaryKeyFromRow": {
            "name": "getPrimaryKeyFromRow",
            "line": 346,
            "short_desc": "Retrieves the primary key from the DB resultset row For tables with a single-column primary key, that simple pkey value will be returned.",
            "long_desc": "For tables with\na multi-column primary key, an array of the primary key columns will be returned.",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "The primary key of the row",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "row": {
                    "name": "row",
                    "line": 346,
                    "short_desc": "resultset row.",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "offset": {
                    "name": "offset",
                    "line": 346,
                    "short_desc": "The 0-based offset for reading from the resultset row.",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "0",
                    "is_by_ref": false
                },
                "indexType": {
                    "name": "indexType",
                    "line": 346,
                    "short_desc": "One of the class type constants TableMap::TYPE_PHPNAME, TableMap::TYPE_STUDLYPHPNAME TableMap::TYPE_COLNAME, TableMap::TYPE_FIELDNAME, TableMap::TYPE_NUM",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "TableMap::TYPE_NUM",
                    "is_by_ref": false
                }
            }
        },
        "getOMClass": {
            "name": "getOMClass",
            "line": 363,
            "short_desc": "The class that the tableMap will make instances of.",
            "long_desc": "If $withPrefix is true, the returned path\nuses a dot-path notation which is translated into a path\nrelative to a location on the PHP include_path.\n(e.g. path.to.MyClass -> 'path\/to\/MyClass.php')",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "path.to.ClassName",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "withPrefix": {
                    "name": "withPrefix",
                    "line": 363,
                    "short_desc": "Whether or not to return the path with the class name",
                    "long_desc": null,
                    "hint": [
                        [
                            "boolean",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "true",
                    "is_by_ref": false
                }
            }
        },
        "populateObject": {
            "name": "populateObject",
            "line": 381,
            "short_desc": "Populates an object of the default type or an object that inherit from the default.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "(CustomerVersion object, last column rank)",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "row": {
                    "name": "row",
                    "line": 381,
                    "short_desc": "row returned by DataFetcher->fetch().",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "offset": {
                    "name": "offset",
                    "line": 381,
                    "short_desc": "The 0-based offset for reading from the resultset row.",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "0",
                    "is_by_ref": false
                },
                "indexType": {
                    "name": "indexType",
                    "line": 381,
                    "short_desc": "The index type of $row. Mostly DataFetcher->getIndexType(). One of the class type constants TableMap::TYPE_PHPNAME, TableMap::TYPE_STUDLYPHPNAME TableMap::TYPE_COLNAME, TableMap::TYPE_FIELDNAME, TableMap::TYPE_NUM.",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "TableMap::TYPE_NUM",
                    "is_by_ref": false
                }
            }
        },
        "populateObjects": {
            "name": "populateObjects",
            "line": 408,
            "short_desc": "The returned array will contain objects of the default type or objects that inherit from the default.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "dataFetcher": {
                    "name": "dataFetcher",
                    "line": 408,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\DataFetcher\\DataFetcherInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "DataFetcherInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addSelectColumns": {
            "name": "addSelectColumns",
            "line": 444,
            "short_desc": "Add all the columns needed to create a new object.",
            "long_desc": "Note: any columns that were marked with lazyLoad=\"true\" in the\nXML schema will not be added to the select list and only loaded\non demand.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "criteria": {
                    "name": "criteria",
                    "line": 444,
                    "short_desc": "object containing the columns to add.",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\Criteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Criteria",
                    "default": null,
                    "is_by_ref": false
                },
                "alias": {
                    "name": "alias",
                    "line": 444,
                    "short_desc": "optional table alias",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getTableMap": {
            "name": "getTableMap",
            "line": 500,
            "short_desc": "Returns the TableMap related to this object.",
            "long_desc": "This method is not needed for general use but a specific application could have a need.",
            "hint": [
                [
                    "Propel\\Runtime\\Map\\TableMap",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "buildTableMap": {
            "name": "buildTableMap",
            "line": 508,
            "short_desc": "Add a TableMap instance to the database for this tableMap class.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "doDelete": {
            "name": "doDelete",
            "line": 527,
            "short_desc": "Performs a DELETE on the database, given a CustomerVersion or Criteria object OR a primary key value.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).  This includes CASCADE-related rows if supported by native driver or if emulated using Propel.",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "values": {
                    "name": "values",
                    "line": 527,
                    "short_desc": "Criteria or CustomerVersion object or primary key or array of primary keys which is used to create the DELETE statement",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 527,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doDeleteAll": {
            "name": "doDeleteAll",
            "line": 571,
            "short_desc": "Deletes all rows from the customer_version table.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "The number of affected rows (if supported by underlying database driver).",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 571,
                    "short_desc": "the connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "doInsert": {
            "name": "doInsert",
            "line": 585,
            "short_desc": "Performs an INSERT on the database, given a CustomerVersion or Criteria object.",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "The new primary key.",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "PropelException",
                    "Any exceptions caught during processing will be rethrown wrapped into a PropelException."
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "criteria": {
                    "name": "criteria",
                    "line": 585,
                    "short_desc": "Criteria or CustomerVersion object containing data that is used to create the INSERT statement.",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 585,
                    "short_desc": "the ConnectionInterface connection to use",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": {
        "CLASS_NAME": {
            "name": "CLASS_NAME",
            "line": 36,
            "short_desc": "The (dot-path) name of this class",
            "long_desc": ""
        },
        "DATABASE_NAME": {
            "name": "DATABASE_NAME",
            "line": 41,
            "short_desc": "The default database name for this class",
            "long_desc": ""
        },
        "TABLE_NAME": {
            "name": "TABLE_NAME",
            "line": 46,
            "short_desc": "The table name for this class",
            "long_desc": ""
        },
        "OM_CLASS": {
            "name": "OM_CLASS",
            "line": 51,
            "short_desc": "The related Propel class for this table",
            "long_desc": ""
        },
        "CLASS_DEFAULT": {
            "name": "CLASS_DEFAULT",
            "line": 56,
            "short_desc": "A class that can be returned by this tableMap",
            "long_desc": ""
        },
        "NUM_COLUMNS": {
            "name": "NUM_COLUMNS",
            "line": 61,
            "short_desc": "The total number of columns",
            "long_desc": ""
        },
        "NUM_LAZY_LOAD_COLUMNS": {
            "name": "NUM_LAZY_LOAD_COLUMNS",
            "line": 66,
            "short_desc": "The number of lazy-loaded columns",
            "long_desc": ""
        },
        "NUM_HYDRATE_COLUMNS": {
            "name": "NUM_HYDRATE_COLUMNS",
            "line": 71,
            "short_desc": "The number of columns to hydrate (NUM_COLUMNS - NUM_LAZY_LOAD_COLUMNS)",
            "long_desc": ""
        },
        "ID": {
            "name": "ID",
            "line": 76,
            "short_desc": "the column name for the ID field",
            "long_desc": ""
        },
        "REF": {
            "name": "REF",
            "line": 81,
            "short_desc": "the column name for the REF field",
            "long_desc": ""
        },
        "TITLE_ID": {
            "name": "TITLE_ID",
            "line": 86,
            "short_desc": "the column name for the TITLE_ID field",
            "long_desc": ""
        },
        "FIRSTNAME": {
            "name": "FIRSTNAME",
            "line": 91,
            "short_desc": "the column name for the FIRSTNAME field",
            "long_desc": ""
        },
        "LASTNAME": {
            "name": "LASTNAME",
            "line": 96,
            "short_desc": "the column name for the LASTNAME field",
            "long_desc": ""
        },
        "EMAIL": {
            "name": "EMAIL",
            "line": 101,
            "short_desc": "the column name for the EMAIL field",
            "long_desc": ""
        },
        "PASSWORD": {
            "name": "PASSWORD",
            "line": 106,
            "short_desc": "the column name for the PASSWORD field",
            "long_desc": ""
        },
        "ALGO": {
            "name": "ALGO",
            "line": 111,
            "short_desc": "the column name for the ALGO field",
            "long_desc": ""
        },
        "RESELLER": {
            "name": "RESELLER",
            "line": 116,
            "short_desc": "the column name for the RESELLER field",
            "long_desc": ""
        },
        "LANG": {
            "name": "LANG",
            "line": 121,
            "short_desc": "the column name for the LANG field",
            "long_desc": ""
        },
        "SPONSOR": {
            "name": "SPONSOR",
            "line": 126,
            "short_desc": "the column name for the SPONSOR field",
            "long_desc": ""
        },
        "DISCOUNT": {
            "name": "DISCOUNT",
            "line": 131,
            "short_desc": "the column name for the DISCOUNT field",
            "long_desc": ""
        },
        "REMEMBER_ME_TOKEN": {
            "name": "REMEMBER_ME_TOKEN",
            "line": 136,
            "short_desc": "the column name for the REMEMBER_ME_TOKEN field",
            "long_desc": ""
        },
        "REMEMBER_ME_SERIAL": {
            "name": "REMEMBER_ME_SERIAL",
            "line": 141,
            "short_desc": "the column name for the REMEMBER_ME_SERIAL field",
            "long_desc": ""
        },
        "CREATED_AT": {
            "name": "CREATED_AT",
            "line": 146,
            "short_desc": "the column name for the CREATED_AT field",
            "long_desc": ""
        },
        "UPDATED_AT": {
            "name": "UPDATED_AT",
            "line": 151,
            "short_desc": "the column name for the UPDATED_AT field",
            "long_desc": ""
        },
        "VERSION": {
            "name": "VERSION",
            "line": 156,
            "short_desc": "the column name for the VERSION field",
            "long_desc": ""
        },
        "VERSION_CREATED_AT": {
            "name": "VERSION_CREATED_AT",
            "line": 161,
            "short_desc": "the column name for the VERSION_CREATED_AT field",
            "long_desc": ""
        },
        "VERSION_CREATED_BY": {
            "name": "VERSION_CREATED_BY",
            "line": 166,
            "short_desc": "the column name for the VERSION_CREATED_BY field",
            "long_desc": ""
        },
        "ORDER_IDS": {
            "name": "ORDER_IDS",
            "line": 171,
            "short_desc": "the column name for the ORDER_IDS field",
            "long_desc": ""
        },
        "ORDER_VERSIONS": {
            "name": "ORDER_VERSIONS",
            "line": 176,
            "short_desc": "the column name for the ORDER_VERSIONS field",
            "long_desc": ""
        },
        "DEFAULT_STRING_FORMAT": {
            "name": "DEFAULT_STRING_FORMAT",
            "line": 181,
            "short_desc": "The default string format for model objects of the related table",
            "long_desc": ""
        }
    }
}