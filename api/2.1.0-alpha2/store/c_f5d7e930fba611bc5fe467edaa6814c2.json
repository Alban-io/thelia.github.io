{
    "name": "Thelia\\Action\\Lang",
    "line": 33,
    "short_desc": "Class Lang",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Action"
            ]
        ],
        "author": [
            [
                "Manuel",
                "Raynaud",
                "<manu@thelia.net>"
            ]
        ]
    },
    "namespace": "Thelia\\Action",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Action\/Lang.php",
    "hash": "ea4614678b3cbca9ec008ff711429cf3f1f4e88b",
    "parent": "Thelia\\Action\\BaseAction",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "EventSubscriberInterface": "Symfony\\Component\\EventDispatcher\\EventSubscriberInterface",
        "LangCreateEvent": "Thelia\\Core\\Event\\Lang\\LangCreateEvent",
        "LangDefaultBehaviorEvent": "Thelia\\Core\\Event\\Lang\\LangDefaultBehaviorEvent",
        "LangDeleteEvent": "Thelia\\Core\\Event\\Lang\\LangDeleteEvent",
        "LangToggleDefaultEvent": "Thelia\\Core\\Event\\Lang\\LangToggleDefaultEvent",
        "LangUpdateEvent": "Thelia\\Core\\Event\\Lang\\LangUpdateEvent",
        "TheliaEvents": "Thelia\\Core\\Event\\TheliaEvents",
        "Translator": "Thelia\\Core\\Translation\\Translator",
        "LangUrlEvent": "Thelia\\Form\\Lang\\LangUrlEvent",
        "ConfigQuery": "Thelia\\Model\\ConfigQuery",
        "LangQuery": "Thelia\\Model\\LangQuery",
        "LangModel": "Thelia\\Model\\Lang"
    },
    "errors": [

    ],
    "interfaces": {
        "Symfony\\Component\\EventDispatcher\\EventSubscriberInterface": "Symfony\\Component\\EventDispatcher\\EventSubscriberInterface"
    },
    "properties": [

    ],
    "methods": {
        "update": {
            "name": "update",
            "line": 35,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 35,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\Lang\\LangUpdateEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangUpdateEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "toggleDefault": {
            "name": "toggleDefault",
            "line": 54,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 54,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\Lang\\LangToggleDefaultEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangToggleDefaultEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "create": {
            "name": "create",
            "line": 65,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 65,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\Lang\\LangCreateEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangCreateEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "delete": {
            "name": "delete",
            "line": 84,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 84,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\Lang\\LangDeleteEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangDeleteEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "defaultBehavior": {
            "name": "defaultBehavior",
            "line": 100,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 100,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Core\\Event\\Lang\\LangDefaultBehaviorEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangDefaultBehaviorEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "langUrl": {
            "name": "langUrl",
            "line": 107,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "event": {
                    "name": "event",
                    "line": 107,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Form\\Lang\\LangUrlEvent",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "LangUrlEvent",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getSubscribedEvents": {
            "name": "getSubscribedEvents",
            "line": 136,
            "short_desc": "Returns an array of event names this subscriber wants to listen to.",
            "long_desc": "The array keys are event names and the value can be:\n\n * The method name to call (priority defaults to 0)\n * An array composed of the method name to call and the priority\n * An array of arrays composed of the method names to call and respective\n   priorities, or 0 if unset\n\nFor instance:\n\n * array('eventName' => 'methodName')\n * array('eventName' => array('methodName', $priority))\n * array('eventName' => array(array('methodName1', $priority), array('methodName2'))",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "The event names to listen to",
            "tags": {
                "api": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}