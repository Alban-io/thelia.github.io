{
    "name": "Thelia\\Core\\Template\\Element\\FlashMessage",
    "line": 20,
    "short_desc": "Class FlashMessage",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\Template\\Element"
            ]
        ],
        "author": [
            [
                "Julien",
                "Chans\u00e9aume",
                "<jchanseaume@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\Template\\Element",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Template\/Element\/FlashMessage.php",
    "hash": "27b144a3efd63bf2ade5105a79283e9d620a9e9d",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": [

    ],
    "errors": [

    ],
    "interfaces": {
        "Iterator": "Iterator"
    },
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 25,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "add": {
            "name": "add",
            "line": 31,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "type": {
                    "name": "type",
                    "line": 31,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "messages": {
                    "name": "messages",
                    "line": 31,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addAll": {
            "name": "addAll",
            "line": 41,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "all": {
                    "name": "all",
                    "line": 41,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isEmpty": {
            "name": "isEmpty",
            "line": 48,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCount": {
            "name": "getCount",
            "line": 53,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "current": {
            "name": "current",
            "line": 64,
            "short_desc": "(PHP 5 &gt;= 5.0.0)<br\/> Return the current element",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "Can return any type.",
            "tags": {
                "link": [
                    [
                        "http:\/\/php.net\/manual\/en\/iterator.current.php"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "next": {
            "name": "next",
            "line": 75,
            "short_desc": "(PHP 5 &gt;= 5.0.0)<br\/> Move forward to next element",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "Any returned value is ignored.",
            "tags": {
                "link": [
                    [
                        "http:\/\/php.net\/manual\/en\/iterator.next.php"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "key": {
            "name": "key",
            "line": 86,
            "short_desc": "(PHP 5 &gt;= 5.0.0)<br\/> Return the key of the current element",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "scalar on success, or null on failure.",
            "tags": {
                "link": [
                    [
                        "http:\/\/php.net\/manual\/en\/iterator.key.php"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "valid": {
            "name": "valid",
            "line": 98,
            "short_desc": "(PHP 5 &gt;= 5.0.0)<br\/> Checks if current position is valid",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "The return value will be casted to boolean and then evaluated. Returns true on success or false on failure.",
            "tags": {
                "link": [
                    [
                        "http:\/\/php.net\/manual\/en\/iterator.valid.php"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "rewind": {
            "name": "rewind",
            "line": 109,
            "short_desc": "(PHP 5 &gt;= 5.0.0)<br\/> Rewind the Iterator to the first element",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "Any returned value is ignored.",
            "tags": {
                "link": [
                    [
                        "http:\/\/php.net\/manual\/en\/iterator.rewind.php"
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}