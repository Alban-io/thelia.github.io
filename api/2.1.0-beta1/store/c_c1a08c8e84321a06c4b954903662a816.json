{
    "name": "Thelia\\Condition\\Implementation\\MatchForTotalAmount",
    "line": 28,
    "short_desc": "Condition AvailableForTotalAmount Check if a Checkout total amount match criteria",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Condition"
            ]
        ],
        "author": [
            [
                "Guillaume",
                "MOREL",
                "<gmorel@openstudio.fr>,",
                "Franck",
                "Allimant",
                "<franck@cqfdev.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Condition\\Implementation",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Condition\/Implementation\/MatchForTotalAmount.php",
    "hash": "c9bd4afc844038559d8e77d62ab8d8b437d985e8",
    "parent": "Thelia\\Condition\\Implementation\\ConditionAbstract",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Operators": "Thelia\\Condition\\Operators",
        "FacadeInterface": "Thelia\\Coupon\\FacadeInterface",
        "Currency": "Thelia\\Model\\Currency",
        "CurrencyQuery": "Thelia\\Model\\CurrencyQuery"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 36,
            "short_desc": "Constructor",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "facade": {
                    "name": "facade",
                    "line": 36,
                    "short_desc": "Service Facade",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Coupon\\FacadeInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FacadeInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getServiceId": {
            "name": "getServiceId",
            "line": 58,
            "short_desc": "Get Condition Service id",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setValidatorsFromForm": {
            "name": "setValidatorsFromForm",
            "line": 66,
            "short_desc": "Check validators relevancy and store them",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Condition\\Implementation\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "InvalidConditionOperatorException",
                    ""
                ],
                [
                    "InvalidConditionValueException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "operators": {
                    "name": "operators",
                    "line": 66,
                    "short_desc": "an array of operators (greater than, less than, etc.) entered in the condition parameter input form, one for each condition defined by the Condition",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                },
                "values": {
                    "name": "values",
                    "line": 66,
                    "short_desc": "an array of values entered in in the condition parameter input form, one for each condition defined by the Condition",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isMatching": {
            "name": "isMatching",
            "line": 93,
            "short_desc": "Test if the current application state matches conditions",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getName": {
            "name": "getName",
            "line": 119,
            "short_desc": "Get I18n name",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getToolTip": {
            "name": "getToolTip",
            "line": 130,
            "short_desc": "Get I18n tooltip Explain in detail what the Condition checks",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getSummary": {
            "name": "getSummary",
            "line": 143,
            "short_desc": "Get I18n summary Explain briefly the condition with given values",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "drawBackOfficeInputs": {
            "name": "drawBackOfficeInputs",
            "line": 195,
            "short_desc": "Draw the input displayed in the BackOffice allowing Admin to set its Coupon Conditions",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "HTML string",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "CART_TOTAL": {
            "name": "CART_TOTAL",
            "line": 31,
            "short_desc": "Condition 1st parameter : price",
            "long_desc": ""
        },
        "CART_CURRENCY": {
            "name": "CART_CURRENCY",
            "line": 34,
            "short_desc": "Condition 1st parameter : currency",
            "long_desc": ""
        }
    }
}