{
    "name": "Thelia\\Condition\\Implementation\\MatchForTotalAmount",
    "line": 45,
    "short_desc": "Created by JetBrains PhpStorm.",
    "long_desc": "Date: 8\/19\/13\nTime: 3:24 PM\n\nCondition AvailableForTotalAmount\nCheck if a Checkout total amount match criteria",
    "hint": null,
    "tags": {
        "package": [
            [
                "Condition"
            ]
        ],
        "author": [
            [
                "Guillaume",
                "MOREL",
                "<gmorel@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Condition\\Implementation",
    "file": "\/home\/manu\/dev\/www\/thelia\/core\/lib\/Thelia\/Condition\/Implementation\/MatchForTotalAmount.php",
    "hash": "acfbc2e44b1eb092dd40ba9f16273531db3b3b81",
    "parent": "Thelia\\Condition\\Implementation\\ConditionAbstract",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "NotImplementedException": "Symfony\\Component\\Intl\\Exception\\NotImplementedException",
        "ConditionAbstract": "Thelia\\Condition\\Implementation\\ConditionAbstract",
        "Operators": "Thelia\\Condition\\Operators",
        "InvalidConditionOperatorException": "Thelia\\Exception\\InvalidConditionOperatorException",
        "Currency": "Thelia\\Model\\Currency",
        "CurrencyQuery": "Thelia\\Model\\CurrencyQuery"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "setValidatorsFromForm": {
            "name": "setValidatorsFromForm",
            "line": 79,
            "short_desc": "Check validators relevancy and store them",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Condition\\Implementation\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\InvalidArgumentException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "operators": {
                    "name": "operators",
                    "line": 79,
                    "short_desc": "Operators the Admin set in BackOffice",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                },
                "values": {
                    "name": "values",
                    "line": 79,
                    "short_desc": "Values the Admin set in BackOffice",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isMatching": {
            "name": "isMatching",
            "line": 147,
            "short_desc": "Test if Customer meets conditions",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getName": {
            "name": "getName",
            "line": 171,
            "short_desc": "Get I18n name",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getToolTip": {
            "name": "getToolTip",
            "line": 185,
            "short_desc": "Get I18n tooltip",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "INPUT1": {
            "name": "INPUT1",
            "line": 48,
            "short_desc": "Condition 1st parameter : price",
            "long_desc": ""
        },
        "INPUT2": {
            "name": "INPUT2",
            "line": 51,
            "short_desc": "Condition 1st parameter : currency",
            "long_desc": ""
        }
    }
}