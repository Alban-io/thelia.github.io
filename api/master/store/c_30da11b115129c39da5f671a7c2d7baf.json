{
    "name": "Thelia\\Core\\Event\\Folder\\FolderEvent",
    "line": 23,
    "short_desc": "Class FolderEvent",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\Event"
            ]
        ],
        "author": [
            [
                "Manuel",
                "Raynaud",
                "<manu@thelia.net>"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\Event\\Folder",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/Event\/Folder\/FolderEvent.php",
    "hash": "bbba5a2bcbba0d7936cc488a81f7fe11e8af7a44",
    "parent": "Thelia\\Core\\Event\\ActionEvent",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ActionEvent": "Thelia\\Core\\Event\\ActionEvent",
        "Folder": "Thelia\\Model\\Folder"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 30,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "folder": {
                    "name": "folder",
                    "line": 30,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Folder",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Folder",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "setFolder": {
            "name": "setFolder",
            "line": 38,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "folder": {
                    "name": "folder",
                    "line": 38,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Folder",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Folder",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getFolder": {
            "name": "getFolder",
            "line": 48,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Model\\Folder",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "hasFolder": {
            "name": "hasFolder",
            "line": 58,
            "short_desc": "test if a folder object exists",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}