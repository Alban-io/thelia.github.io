{
    "name": "Thelia\\Core\\FileFormat\\Formatting\\FormatterData",
    "line": 25,
    "short_desc": "Class FormatterData",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\FileFormat\\Formatting"
            ]
        ],
        "author": [
            [
                "Benjamin",
                "Perche",
                "<bperche@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\FileFormat\\Formatting",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/FileFormat\/Formatting\/FormatterData.php",
    "hash": "9a55de61c7436f238860eccfe21051f141a0df00",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "TableMap": "Propel\\Runtime\\Map\\TableMap",
        "Translator": "Thelia\\Core\\Translation\\Translator",
        "Lang": "Thelia\\Model\\Lang"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 47,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "aliases": {
                    "name": "aliases",
                    "line": 47,
                    "short_desc": "$aliases is a associative array where the key represents propel TYPE_PHP_NAME of column if you use loadModelCriteria, or your own aliases for setData, and the value is the alias. It can be null or empty if you don't want aliases, but remember to always define all the fields the you want: non aliases fields will be ignored.",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "setData": {
            "name": "setData",
            "line": 79,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\FileFormat\\Formatting\\$this",
                    false
                ]
            ],
            "hint_desc": "Sets raw data with aliases may bug with some formatter",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "data": {
                    "name": "data",
                    "line": 79,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "loadModelCriteria": {
            "name": "loadModelCriteria",
            "line": 95,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\FileFormat\\Formatting\\$this",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "Loads a model criteria. Warning: This doesn't goodly support multi table queries. If you need to use more than one table, use a PDO instance and use the fetchArray() method, or select every columns you need",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "criteria": {
                    "name": "criteria",
                    "line": 95,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ModelCriteria",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "applyAliases": {
            "name": "applyAliases",
            "line": 141,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "data": {
                    "name": "data",
                    "line": 141,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                },
                "aliases": {
                    "name": "aliases",
                    "line": 141,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "addRow": {
            "name": "addRow",
            "line": 163,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Core\\FileFormat\\Formatting\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "row": {
                    "name": "row",
                    "line": 163,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "popRow": {
            "name": "popRow",
            "line": 174,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ],
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [
                "\"1\" @param tags are defined by \"0\" are expected"
            ],
            "parameters": [

            ]
        },
        "getRow": {
            "name": "getRow",
            "line": 186,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ],
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\OutOfBoundsException",
                    ""
                ]
            ],
            "errors": [
                "\"1\" @param tags are defined by \"2\" are expected"
            ],
            "parameters": {
                "index": {
                    "name": "index",
                    "line": 186,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "0",
                    "is_by_ref": false
                },
                "reverseAliases": {
                    "name": "reverseAliases",
                    "line": 186,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "false",
                    "is_by_ref": false
                }
            }
        },
        "getData": {
            "name": "getData",
            "line": 220,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getDataReverseAliases": {
            "name": "getDataReverseAliases",
            "line": 225,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setLang": {
            "name": "setLang",
            "line": 230,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang": {
                    "name": "lang",
                    "line": 230,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Lang",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Lang",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getLang": {
            "name": "getLang",
            "line": 237,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}