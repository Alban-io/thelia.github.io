{
    "name": "Thelia\\Module\\BaseModule",
    "line": 43,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": [

    ],
    "namespace": "Thelia\\Module",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Module\/BaseModule.php",
    "hash": "be84a4ee28dde7caadeec645cb915455f1e1e191",
    "parent": "Symfony\\Component\\DependencyInjection\\ContainerAware",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ConnectionInterface": "Propel\\Runtime\\Connection\\ConnectionInterface",
        "Propel": "Propel\\Runtime\\Propel",
        "ContainerAware": "Symfony\\Component\\DependencyInjection\\ContainerAware",
        "EventDispatcherInterface": "Symfony\\Component\\EventDispatcher\\EventDispatcherInterface",
        "Request": "Symfony\\Component\\HttpFoundation\\Request",
        "HookCreateAllEvent": "Thelia\\Core\\Event\\Hook\\HookCreateAllEvent",
        "HookUpdateEvent": "Thelia\\Core\\Event\\Hook\\HookUpdateEvent",
        "TheliaEvents": "Thelia\\Core\\Event\\TheliaEvents",
        "Session": "Thelia\\Core\\HttpFoundation\\Session\\Session",
        "TemplateDefinition": "Thelia\\Core\\Template\\TemplateDefinition",
        "ModuleException": "Thelia\\Exception\\ModuleException",
        "Tlog": "Thelia\\Log\\Tlog",
        "Cart": "Thelia\\Model\\Cart",
        "Country": "Thelia\\Model\\Country",
        "HookQuery": "Thelia\\Model\\HookQuery",
        "Lang": "Thelia\\Model\\Lang",
        "ModuleImageTableMap": "Thelia\\Model\\Map\\ModuleImageTableMap",
        "ModuleTableMap": "Thelia\\Model\\Map\\ModuleTableMap",
        "Module": "Thelia\\Model\\Module",
        "ModuleConfigQuery": "Thelia\\Model\\ModuleConfigQuery",
        "ModuleI18n": "Thelia\\Model\\ModuleI18n",
        "ModuleI18nQuery": "Thelia\\Model\\ModuleI18nQuery",
        "ModuleImage": "Thelia\\Model\\ModuleImage",
        "ModuleQuery": "Thelia\\Model\\ModuleQuery",
        "Order": "Thelia\\Model\\Order",
        "TaxEngine": "Thelia\\TaxEngine\\TaxEngine",
        "Image": "Thelia\\Tools\\Image"
    },
    "errors": [

    ],
    "interfaces": {
        "Thelia\\Module\\BaseModuleInterface": "Thelia\\Module\\BaseModuleInterface"
    },
    "properties": [

    ],
    "methods": {
        "activate": {
            "name": "activate",
            "line": 62,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "moduleModel": {
                    "name": "moduleModel",
                    "line": 62,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "deActivate": {
            "name": "deActivate",
            "line": 87,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "moduleModel": {
                    "name": "moduleModel",
                    "line": 87,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "hasContainer": {
            "name": "hasContainer",
            "line": 110,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getContainer": {
            "name": "getContainer",
            "line": 115,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "hasRequest": {
            "name": "hasRequest",
            "line": 124,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setRequest": {
            "name": "setRequest",
            "line": 129,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 129,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\HttpFoundation\\Request",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Request",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRequest": {
            "name": "getRequest",
            "line": 139,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "\\Thelia\\Core\\HttpFoundation\\Request",
                    false
                ]
            ],
            "hint_desc": "the request.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\RuntimeException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "hasDispatcher": {
            "name": "hasDispatcher",
            "line": 153,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setDispatcher": {
            "name": "setDispatcher",
            "line": 158,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "dispatcher": {
                    "name": "dispatcher",
                    "line": 158,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\EventDispatcher\\EventDispatcherInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "EventDispatcherInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getDispatcher": {
            "name": "getDispatcher",
            "line": 167,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Symfony\\Component\\EventDispatcher\\EventDispatcherInterface",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\RuntimeException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setTitle": {
            "name": "setTitle",
            "line": 187,
            "short_desc": "Sets a module titles for various languages",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "module": {
                    "name": "module",
                    "line": 187,
                    "short_desc": "the module.",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Module",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Module",
                    "default": null,
                    "is_by_ref": false
                },
                "titles": {
                    "name": "titles",
                    "line": 187,
                    "short_desc": "an associative array of locale => title_string",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getConfigValue": {
            "name": "getConfigValue",
            "line": 216,
            "short_desc": "Get a module's configuration variable",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "the variable value",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "variableName": {
                    "name": "variableName",
                    "line": 216,
                    "short_desc": "the variable name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "defaultValue": {
                    "name": "defaultValue",
                    "line": 216,
                    "short_desc": "the default value, if variable is not defined",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "valueLocale": {
                    "name": "valueLocale",
                    "line": 216,
                    "short_desc": "the required locale, or null to get default one",
                    "long_desc": null,
                    "hint": [
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "setConfigValue": {
            "name": "setConfigValue",
            "line": 232,
            "short_desc": "Set module configuration variable, creating it if required",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Module\\$this;",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\LogicException",
                    "if variable does not exists and $createIfNotExists is false"
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "variableName": {
                    "name": "variableName",
                    "line": 232,
                    "short_desc": "the variable name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "variableValue": {
                    "name": "variableValue",
                    "line": 232,
                    "short_desc": "the variable value",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "valueLocale": {
                    "name": "valueLocale",
                    "line": 232,
                    "short_desc": "the locale, or null if not required",
                    "long_desc": null,
                    "hint": [
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "createIfNotExists": {
                    "name": "createIfNotExists",
                    "line": 232,
                    "short_desc": "if true, the variable will be created if not already defined",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "true",
                    "is_by_ref": false
                }
            }
        },
        "deployImageFolder": {
            "name": "deployImageFolder",
            "line": 251,
            "short_desc": "Ensure the proper deployment of the module's images.",
            "long_desc": "TODO : this method does not take care of internationalization. This is a bug.",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Thelia\\Exception\\ModuleException",
                    ""
                ],
                [
                    "\\Exception",
                    ""
                ],
                [
                    "\\UnexpectedValueException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "module": {
                    "name": "module",
                    "line": 251,
                    "short_desc": "the module",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Module",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Module",
                    "default": null,
                    "is_by_ref": false
                },
                "folderPath": {
                    "name": "folderPath",
                    "line": 251,
                    "short_desc": "the image folder path",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "con": {
                    "name": "con",
                    "line": 251,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getModuleModel": {
            "name": "getModuleModel",
            "line": 319,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\Module",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Thelia\\Exception\\ModuleException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getModuleId": {
            "name": "getModuleId",
            "line": 341,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getModuleCode": {
            "name": "getModuleCode",
            "line": 359,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The module code, in a static wayord",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCode": {
            "name": "getCode",
            "line": 369,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isPaymentModuleFor": {
            "name": "isPaymentModuleFor",
            "line": 380,
            "short_desc": "Check if this module is the payment module for a given order",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true if this module is the payment module for the given order.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 380,
                    "short_desc": "an order",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Order",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Order",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isDeliveryModuleFor": {
            "name": "isDeliveryModuleFor",
            "line": 393,
            "short_desc": "Check if this module is the delivery module for a given order",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true if this module is the delivery module for the given order.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "order": {
                    "name": "order",
                    "line": 393,
                    "short_desc": "an order",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Order",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Order",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getCurrentOrderTotalAmount": {
            "name": "getCurrentOrderTotalAmount",
            "line": 412,
            "short_desc": "A convenient method to get the current order total, with or without tax, discount or postage.",
            "long_desc": "This method operates on the order currently in the user's session, and should not be used to\nget the total amount of an order already stored in the database. For such orders, use\nOrder::getTotalAmount() method.",
            "hint": [
                [
                    "float",
                    false
                ],
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "the current order amount.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "with_tax": {
                    "name": "with_tax",
                    "line": 412,
                    "short_desc": "if true, to total price will include tax amount",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "true",
                    "is_by_ref": false
                },
                "with_discount": {
                    "name": "with_discount",
                    "line": 412,
                    "short_desc": "if true, the total price will include discount, if any",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "true",
                    "is_by_ref": false
                },
                "with_postage": {
                    "name": "with_postage",
                    "line": 412,
                    "short_desc": "if true, the total price will include the delivery costs, if any.",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "true",
                    "is_by_ref": false
                }
            }
        },
        "getCompilers": {
            "name": "getCompilers",
            "line": 477,
            "short_desc": "This method adds new compilers to Thelia container",
            "long_desc": "You must return an array. This array can contain :\n - arrays\n - one or many instance(s) of \\Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface\n\nin the first case, your array must contains 2 indexes. The first is the compiler instance and the second the compilerPass type.\nExample :\nreturn array(\n array(\n   new \\MyModule\\DependencyInjection\\Compiler\\MySuperCompilerPass(),\n   \\Symfony\\Component\\DependencyInjection\\Compiler\\PassConfig::TYPE_BEFORE_OPTIMIZATION\n )\n);\n\nIn the seconde case, just an instance of CompilerPassInterface.\nExample :\nreturn array (\n new \\MyModule\\DependencyInjection\\Compiler\\MySuperCompilerPass()\n);\n\nBut you can combine both behaviors\nExample :\n\nreturn array(\n new \\MyModule\\DependencyInjection\\Compiler\\MySuperCompilerPass(),\n array(\n     new \\MyModule\\DependencyInjection\\Compiler\\MyOtherSuperCompilerPass(),\n     Symfony\\Component\\DependencyInjection\\Compiler\\PassConfig::TYPE_BEFORE_OPTIMIZATION\n )\n);",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "install": {
            "name": "install",
            "line": 488,
            "short_desc": "This method is called when the plugin is installed for the first time, using zip upload method.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 488,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "preActivation": {
            "name": "preActivation",
            "line": 500,
            "short_desc": "This method is called before the module activation, and may prevent it by returning false.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true to continue module activation, false to prevent it.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 500,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "postActivation": {
            "name": "postActivation",
            "line": 511,
            "short_desc": "This method is called just after the module was successfully activated.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 511,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "preDeactivation": {
            "name": "preDeactivation",
            "line": 522,
            "short_desc": "This method is called before the module de-activation, and may prevent it by returning false.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true to continue module de-activation, false to prevent it.",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 522,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "postDeactivation": {
            "name": "postDeactivation",
            "line": 528,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 528,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "destroy": {
            "name": "destroy",
            "line": 540,
            "short_desc": "This method is called just before the deletion of the module, giving the module an opportunity to delete its data.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "con": {
                    "name": "con",
                    "line": 540,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Connection\\ConnectionInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConnectionInterface",
                    "default": "null",
                    "is_by_ref": false
                },
                "deleteModuleData": {
                    "name": "deleteModuleData",
                    "line": 540,
                    "short_desc": "if true, the module should remove all its data from the system.",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": "false",
                    "is_by_ref": false
                }
            }
        },
        "getHooks": {
            "name": "getHooks",
            "line": 586,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "This method must be used when your module defines hooks. Override this and return an array of your hooks names to register them This returned value must be like the example, only type and code are mandatory Example: return array( \/\/ Only register the title in the default language array( \"type\" => TemplateDefinition::BACK_OFFICE, \"code\" => \"my_super_hook_name\", \"title\" => \"My hook\", \"description\" => \"My hook is really, really great\", ), \/\/ Manage i18n array( \"type\" => TemplateDefinition::FRONT_OFFICE, \"code\" => \"my_hook_name\", \"title\" => array( \"fr_FR\" => \"Mon Hook\", \"en_US\" => \"My hook\", ), \"description\" => array( \"fr_FR\" => \"Mon hook est vraiment super\", \"en_US\" => \"My hook is really, really great\", ), \"chapo\" => array( \"fr_FR\" => \"Mon hook est vraiment super\", \"en_US\" => \"My hook is really, really great\", ), \"block\" => true, \"active\" => true ) );",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "registerHooks": {
            "name": "registerHooks",
            "line": 591,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getModuleCategories": {
            "name": "getModuleCategories",
            "line": 809,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "CLASSIC_MODULE_TYPE": {
            "name": "CLASSIC_MODULE_TYPE",
            "line": 45,
            "short_desc": "",
            "long_desc": ""
        },
        "DELIVERY_MODULE_TYPE": {
            "name": "DELIVERY_MODULE_TYPE",
            "line": 46,
            "short_desc": "",
            "long_desc": ""
        },
        "PAYMENT_MODULE_TYPE": {
            "name": "PAYMENT_MODULE_TYPE",
            "line": 47,
            "short_desc": "",
            "long_desc": ""
        },
        "MODULE_CATEGORIES": {
            "name": "MODULE_CATEGORIES",
            "line": 49,
            "short_desc": "",
            "long_desc": ""
        },
        "IS_ACTIVATED": {
            "name": "IS_ACTIVATED",
            "line": 51,
            "short_desc": "",
            "long_desc": ""
        },
        "IS_NOT_ACTIVATED": {
            "name": "IS_NOT_ACTIVATED",
            "line": 52,
            "short_desc": "",
            "long_desc": ""
        }
    }
}