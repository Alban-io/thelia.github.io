{
    "name": "Thelia\\Model\\ModuleQuery",
    "line": 19,
    "short_desc": "Skeleton subclass for performing query and update operations on the 'module' table.",
    "long_desc": "You should add additional methods to this class to meet the\napplication requirements.  This class will only be generated as\nlong as it does not already exist in the output directory.",
    "hint": null,
    "tags": [

    ],
    "namespace": "Thelia\\Model",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Model\/ModuleQuery.php",
    "hash": "b0e532bd8b716b2ce6d1d35a2caef1cdee89386f",
    "parent": "Thelia\\Model\\Base\\ModuleQuery",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ContainerInterface": "Symfony\\Component\\DependencyInjection\\ContainerInterface",
        "BaseModuleQuery": "Thelia\\Model\\Base\\ModuleQuery",
        "BaseModule": "Thelia\\Module\\BaseModule"
    },
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "getActivated": {
            "name": "getActivated",
            "line": 25,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ],
                [
                    "mixed",
                    false
                ],
                [
                    "\\PropelObjectCollection",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "resetActivated": {
            "name": "resetActivated",
            "line": 37,
            "short_desc": "",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "filterActivatedByTypeAndId": {
            "name": "filterActivatedByTypeAndId",
            "line": 47,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ModuleQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "moduleType": {
                    "name": "moduleType",
                    "line": 47,
                    "short_desc": "the module type : classic, payment or delivery. Use BaseModule constant here.",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "id": {
                    "name": "id",
                    "line": 47,
                    "short_desc": "the module id",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "retrieveVirtualProductDelivery": {
            "name": "retrieveVirtualProductDelivery",
            "line": 66,
            "short_desc": "if the container is provided, this method will found the module in the container.",
            "long_desc": "Reflection is used instead.\nIf it's possible use it with the container.\n\nreturn false if no delivery modules are found, an array of BaseModule otherwise.",
            "hint": [
                [
                    "Thelia\\Model\\false",
                    false
                ],
                [
                    "\\Thelia\\Module\\BaseModule",
                    true
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "container": {
                    "name": "container",
                    "line": 66,
                    "short_desc": "optional",
                    "long_desc": null,
                    "hint": [
                        [
                            "Symfony\\Component\\DependencyInjection\\ContainerInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ContainerInterface",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": [

    ]
}