{
    "name": "Thelia\\Core\\FileFormat\\FormatInterface",
    "line": 25,
    "short_desc": "Interface FormatInterface",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\Core\\FileFormat"
            ]
        ],
        "author": [
            [
                "Benjamin",
                "Perche",
                "<bperche@openstudio.fr>",
                "This",
                "interface",
                "defines",
                "what",
                "a",
                "formatter",
                "must",
                "have:",
                "-",
                "A",
                "name",
                "(",
                "example:",
                "XML,",
                "JSON,",
                "yaml",
                ")",
                "-",
                "An",
                "extension",
                "(",
                "example:",
                "xml,",
                "json,",
                "yml",
                ")",
                "-",
                "A",
                "mime",
                "type",
                "(",
                "example:",
                "application\/xml,",
                "application\/json,",
                "...",
                ")"
            ]
        ]
    },
    "namespace": "Thelia\\Core\\FileFormat",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Core\/FileFormat\/FormatInterface.php",
    "hash": "41440604100992bee253eb28e51eb76a7b015029",
    "parent": null,
    "modifiers": null,
    "is_trait": false,
    "is_interface": true,
    "aliases": [

    ],
    "errors": [

    ],
    "interfaces": [

    ],
    "properties": [

    ],
    "methods": {
        "getName": {
            "name": "getName",
            "line": 35,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "This method must return a string, the name of the format. example: return \"XML\";",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getExtension": {
            "name": "getExtension",
            "line": 46,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "This method must return a string, the extension of the file format, without the \".\". The string should be lowercase. example: return \"xml\";",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getMimeType": {
            "name": "getMimeType",
            "line": 56,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "This method must return a string, the mime type of the file format. example: return \"application\/json\";",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": [

    ]
}