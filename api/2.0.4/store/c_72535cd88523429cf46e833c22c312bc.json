{
    "name": "Thelia\\ImportExport\\Export\\Type\\ContentExport",
    "line": 45,
    "short_desc": "Class ContentExport",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Thelia\\ImportExport\\Export\\Type"
            ]
        ],
        "author": [
            [
                "Benjamin",
                "Perche",
                "<bperche@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\ImportExport\\Export\\Type",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/ImportExport\/Export\/Type\/ContentExport.php",
    "hash": "5669d6f8059fa2841ee71a0a6e27b9c45cea9fba",
    "parent": "Thelia\\ImportExport\\Export\\ExportHandler",
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "Criteria": "Propel\\Runtime\\ActiveQuery\\Criteria",
        "Join": "Propel\\Runtime\\ActiveQuery\\Join",
        "ModelCriteria": "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
        "FormatType": "Thelia\\Core\\FileFormat\\FormatType",
        "BaseLoop": "Thelia\\Core\\Template\\Element\\BaseLoop",
        "DocumentsExportInterface": "Thelia\\ImportExport\\Export\\DocumentsExportInterface",
        "ExportHandler": "Thelia\\ImportExport\\Export\\ExportHandler",
        "ImagesExportInterface": "Thelia\\ImportExport\\Export\\ImagesExportInterface",
        "Content": "Thelia\\Model\\Content",
        "ContentDocumentI18nQuery": "Thelia\\Model\\ContentDocumentI18nQuery",
        "ContentDocumentQuery": "Thelia\\Model\\ContentDocumentQuery",
        "ContentImageQuery": "Thelia\\Model\\ContentImageQuery",
        "ContentQuery": "Thelia\\Model\\ContentQuery",
        "FolderDocumentQuery": "Thelia\\Model\\FolderDocumentQuery",
        "FolderImageQuery": "Thelia\\Model\\FolderImageQuery",
        "Lang": "Thelia\\Model\\Lang",
        "ContentDocumentTableMap": "Thelia\\Model\\Map\\ContentDocumentTableMap",
        "ContentFolderTableMap": "Thelia\\Model\\Map\\ContentFolderTableMap",
        "ContentI18nTableMap": "Thelia\\Model\\Map\\ContentI18nTableMap",
        "ContentTableMap": "Thelia\\Model\\Map\\ContentTableMap",
        "FolderDocumentTableMap": "Thelia\\Model\\Map\\FolderDocumentTableMap",
        "FolderI18nTableMap": "Thelia\\Model\\Map\\FolderI18nTableMap",
        "FolderImageTableMap": "Thelia\\Model\\Map\\FolderImageTableMap",
        "FolderTableMap": "Thelia\\Model\\Map\\FolderTableMap",
        "RewritingUrlTableMap": "Thelia\\Model\\Map\\RewritingUrlTableMap"
    },
    "errors": [

    ],
    "interfaces": {
        "Thelia\\ImportExport\\Export\\ImagesExportInterface": "Thelia\\ImportExport\\Export\\ImagesExportInterface",
        "Thelia\\ImportExport\\Export\\DocumentsExportInterface": "Thelia\\ImportExport\\Export\\DocumentsExportInterface"
    },
    "properties": [

    ],
    "methods": {
        "getHandledTypes": {
            "name": "getHandledTypes",
            "line": 66,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "Define all the type of formatters that this can handle return a string if it handle a single type ( specific exports ), or an array if multiple. Thelia types are defined in \\Thelia\\Core\\FileFormat\\FormatType example: return array( FormatType::TABLE, FormatType::UNBOUNDED, );",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getQuery": {
            "name": "getQuery",
            "line": 77,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Model\\ContentQuery",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang": {
                    "name": "lang",
                    "line": 77,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Lang",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Lang",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "buildDataSet": {
            "name": "buildDataSet",
            "line": 174,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Propel\\Runtime\\ActiveQuery\\ModelCriteria",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "Thelia\\Core\\Template\\Element\\BaseLoop",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "lang": {
                    "name": "lang",
                    "line": 174,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Model\\Lang",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "Lang",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getDocumentsPaths": {
            "name": "getDocumentsPaths",
            "line": 260,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "return an array with the paths to the documents to include in the archive",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getImagesPaths": {
            "name": "getImagesPaths",
            "line": 288,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "return an array with the paths to the images to include in the archive",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "DIRECTORY_NAME": {
            "name": "DIRECTORY_NAME",
            "line": 49,
            "short_desc": "",
            "long_desc": ""
        }
    }
}