{
    "name": "Thelia\\Coupon\\Type\\CouponAbstract",
    "line": 31,
    "short_desc": "Assist in writing a CouponInterface",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "Coupon"
            ]
        ],
        "author": [
            [
                "Guillaume",
                "MOREL",
                "<gmorel@openstudio.fr>"
            ]
        ]
    },
    "namespace": "Thelia\\Coupon\\Type",
    "file": "\/home\/manu\/dev\/www\/thelia_main\/core\/lib\/Thelia\/Coupon\/Type\/CouponAbstract.php",
    "hash": "1678130f464d6c27ec2d60b9dd7c83dade80d5c2",
    "parent": null,
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "aliases": {
        "ConditionCollection": "Thelia\\Condition\\ConditionCollection",
        "ConditionEvaluator": "Thelia\\Condition\\ConditionEvaluator",
        "ConditionOrganizerInterface": "Thelia\\Condition\\ConditionOrganizerInterface",
        "Translator": "Thelia\\Core\\Translation\\Translator",
        "FacadeInterface": "Thelia\\Coupon\\FacadeInterface",
        "CouponCreationForm": "Thelia\\Form\\CouponCreationForm",
        "CouponCountry": "Thelia\\Model\\CouponCountry",
        "CouponModule": "Thelia\\Model\\CouponModule"
    },
    "errors": [

    ],
    "interfaces": {
        "Thelia\\Coupon\\Type\\CouponInterface": "Thelia\\Coupon\\Type\\CouponInterface"
    },
    "properties": [

    ],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 117,
            "short_desc": "Constructor",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "facade": {
                    "name": "facade",
                    "line": 117,
                    "short_desc": "Service facade",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Coupon\\FacadeInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FacadeInterface",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "setOrganizer": {
            "name": "setOrganizer",
            "line": 131,
            "short_desc": "Set Condition Organizer",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Coupon\\Type\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "organizer": {
                    "name": "organizer",
                    "line": 131,
                    "short_desc": "Manage Condition groups (&& and ||)",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Condition\\ConditionOrganizerInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "set": {
            "name": "set",
            "line": 141,
            "short_desc": "Set Coupon",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "facade": {
                    "name": "facade",
                    "line": 142,
                    "short_desc": "Provides necessary value from Thelia",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Coupon\\FacadeInterface",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "FacadeInterface",
                    "default": null,
                    "is_by_ref": false
                },
                "code": {
                    "name": "code",
                    "line": 143,
                    "short_desc": "Coupon code (ex: XMAS)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "title": {
                    "name": "title",
                    "line": 144,
                    "short_desc": "Coupon title (ex: Coupon for XMAS)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "shortDescription": {
                    "name": "shortDescription",
                    "line": 145,
                    "short_desc": "Coupon short description",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "description": {
                    "name": "description",
                    "line": 146,
                    "short_desc": "Coupon description",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "effects": {
                    "name": "effects",
                    "line": 147,
                    "short_desc": "Coupon effects params",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "array",
                    "default": null,
                    "is_by_ref": false
                },
                "isCumulative": {
                    "name": "isCumulative",
                    "line": 148,
                    "short_desc": "If Coupon is cumulative",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "isRemovingPostage": {
                    "name": "isRemovingPostage",
                    "line": 149,
                    "short_desc": "If Coupon is removing postage",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "isAvailableOnSpecialOffers": {
                    "name": "isAvailableOnSpecialOffers",
                    "line": 150,
                    "short_desc": "If available on Product already on special offer price",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "isEnabled": {
                    "name": "isEnabled",
                    "line": 151,
                    "short_desc": "False if Coupon is disabled by admin",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "maxUsage": {
                    "name": "maxUsage",
                    "line": 152,
                    "short_desc": "How many usage left",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "expirationDate": {
                    "name": "expirationDate",
                    "line": 153,
                    "short_desc": "When the Code is expiring",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Coupon\\Type\\DateTime",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "DateTime",
                    "default": null,
                    "is_by_ref": false
                },
                "freeShippingForCountries": {
                    "name": "freeShippingForCountries",
                    "line": 154,
                    "short_desc": "list of countries which shipping is free. All if empty",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "freeShippingForModules": {
                    "name": "freeShippingForModules",
                    "line": 155,
                    "short_desc": "list of modules for which shipping is free. All if empty",
                    "long_desc": null,
                    "hint": [
                        [
                            "Propel\\Runtime\\Collection\\ObjectCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "perCustomerUsageCount": {
                    "name": "perCustomerUsageCount",
                    "line": 156,
                    "short_desc": "true if usage count is per customer only",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "setPerCustomerUsageCount": {
            "name": "setPerCustomerUsageCount",
            "line": 188,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Coupon\\Type\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "perCustomerUsageCount": {
                    "name": "perCustomerUsageCount",
                    "line": 188,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Coupon\\Type\\true",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getPerCustomerUsageCount": {
            "name": "getPerCustomerUsageCount",
            "line": 198,
            "short_desc": "Check if the Coupon can be used against a product already with a special offer price",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Coupon\\Type\\true",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getCode": {
            "name": "getCode",
            "line": 208,
            "short_desc": "Return Coupon code (ex: XMAS)",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getTitle": {
            "name": "getTitle",
            "line": 218,
            "short_desc": "Return Coupon title (ex: Coupon for XMAS)",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getShortDescription": {
            "name": "getShortDescription",
            "line": 228,
            "short_desc": "Return Coupon short description",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getDescription": {
            "name": "getDescription",
            "line": 238,
            "short_desc": "Return Coupon description",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isCumulative": {
            "name": "isCumulative",
            "line": 250,
            "short_desc": "If Coupon is cumulative or prevent any accumulation If is cumulative you can sum Coupon effects If not cancel all other Coupon and take the last given",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isRemovingPostage": {
            "name": "isRemovingPostage",
            "line": 260,
            "short_desc": "If Coupon is removing Checkout Postage",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getFreeShippingForCountries": {
            "name": "getFreeShippingForCountries",
            "line": 268,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "list of country IDs for which shipping is free. All if empty",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getFreeShippingForModules": {
            "name": "getFreeShippingForModules",
            "line": 276,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "list of module IDs for which shipping is free. All if empty",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "exec": {
            "name": "exec",
            "line": 284,
            "short_desc": "Return an amount thant will be subtracted to the cart total, or zero.",
            "long_desc": "This method could also perform something else than the calculating an amount to subtract from the cart. It may\nadd a product to the cart, for example. In this case, an amount of 0 will be returned.\n\nWARNING: this method could be called several times, so perform suitable checks before performing cart\nmanipulations, so that the coupon effect will not be applied several times.",
            "hint": [
                [
                    "float",
                    false
                ]
            ],
            "hint_desc": "Amount removed from the cart total",
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getConditions": {
            "name": "getConditions",
            "line": 294,
            "short_desc": "Return condition to validate the Coupon or not",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Condition\\ConditionCollection",
                    false
                ]
            ],
            "hint_desc": "A set of ConditionInterface",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "setConditions": {
            "name": "setConditions",
            "line": 308,
            "short_desc": "Replace the existing Conditions by those given in parameter If one Condition is badly implemented, no Condition will be added",
            "long_desc": "",
            "hint": [
                [
                    "Thelia\\Coupon\\Type\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Thelia\\Exception\\InvalidConditionException",
                    ""
                ]
            ],
            "errors": [

            ],
            "parameters": {
                "conditions": {
                    "name": "conditions",
                    "line": 308,
                    "short_desc": "ConditionInterface to add",
                    "long_desc": null,
                    "hint": [
                        [
                            "Thelia\\Condition\\ConditionCollection",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "ConditionCollection",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getExpirationDate": {
            "name": "getExpirationDate",
            "line": 320,
            "short_desc": "Return Coupon expiration date",
            "long_desc": "",
            "hint": [
                [
                    "\\DateTime",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isAvailableOnSpecialOffers": {
            "name": "isAvailableOnSpecialOffers",
            "line": 331,
            "short_desc": "Check if the Coupon can be used against a product already with a special offer price",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isEnabled": {
            "name": "isEnabled",
            "line": 341,
            "short_desc": "Check if Coupon has been disabled by admin",
            "long_desc": "",
            "hint": [
                [
                    "boolean",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getMaxUsage": {
            "name": "getMaxUsage",
            "line": 352,
            "short_desc": "Return how many time the Coupon can be used again Ex : -1 unlimited",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isExpired": {
            "name": "isExpired",
            "line": 362,
            "short_desc": "Check if the Coupon is already Expired",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getServiceId": {
            "name": "getServiceId",
            "line": 379,
            "short_desc": "Get Coupon Manager service Id",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isMatching": {
            "name": "isMatching",
            "line": 390,
            "short_desc": "Check if the current Coupon is matching its conditions Thelia variables are given by the FacadeInterface",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getInputName": {
            "name": "getInputName",
            "line": 403,
            "short_desc": "This is the field label than will be displayed in the form.",
            "long_desc": "This method should be overridden to be useful.\n\nFor backward compatibility only.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "drawBackOfficeInputs": {
            "name": "drawBackOfficeInputs",
            "line": 415,
            "short_desc": "Draw the input displayed in the BackOffice allowing Admin to set its Coupon effect",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "HTML string",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "getEffects": {
            "name": "getEffects",
            "line": 493,
            "short_desc": "Create the effect array from the list of fields",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "a filedName => fieldValue array",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": {
                "data": {
                    "name": "data",
                    "line": 493,
                    "short_desc": "the input form data (e.g. $form->getData())",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [

                    ],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "clear": {
            "name": "clear",
            "line": 507,
            "short_desc": "Clear all the data the coupon may have stored, called after an order is completed.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "inheritdoc": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        },
        "isInUse": {
            "name": "isInUse",
            "line": 512,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true if the coupon is currently in use in the current order process, false otherwise",
            "tags": [

            ],
            "modifiers": "1",
            "is_by_ref": "",
            "exceptions": [

            ],
            "errors": [

            ],
            "parameters": [

            ]
        }
    },
    "constants": {
        "COUPON_DATASET_NAME": {
            "name": "COUPON_DATASET_NAME",
            "line": 42,
            "short_desc": "The dataset name for all coupon specific input fields, that do not appear in the CouPonCreationForm form.",
            "long_desc": "In the input form, these fields have to be created like:\n\n   thelia_coupon_specific[my_field, thelia_coupon_creation_extended[my_other_field]\n\nuse the makeCouponField() method to do that safely."
        },
        "AMOUNT_FIELD_NAME": {
            "name": "AMOUNT_FIELD_NAME",
            "line": 47,
            "short_desc": "A standard 'amount' filed name, thant can be used in coupons which extends this class",
            "long_desc": ""
        }
    }
}